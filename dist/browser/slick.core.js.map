{
  "version": 3,
  "sources": ["../../src/slick.core.ts"],
  "sourcesContent": ["/**\r\n * Contains core SlickGrid classes.\r\n * @module Core\r\n * @namespace Slick\r\n */\r\n\r\nimport type {\r\n  AnyFunction,\r\n  CSSStyleDeclarationWritable,\r\n  EditController,\r\n  ElementEventListener,\r\n  Handler,\r\n  InferDOMType,\r\n  MergeTypes\r\n} from './models/index.js';\r\n\r\nexport interface BasePubSub {\r\n  publish<ArgType = any>(_eventName: string | any, _data?: ArgType): any;\r\n  subscribe<ArgType = any>(_eventName: string | Function, _callback: (data: ArgType) => void): any;\r\n}\r\n\r\n/**\r\n * An event object for passing data to event handlers and letting them control propagation.\r\n * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\r\n * @class EventData\r\n * @constructor\r\n */\r\nexport class SlickEventData<ArgType = any> {\r\n  protected _isPropagationStopped = false;\r\n  protected _isImmediatePropagationStopped = false;\r\n  protected _isDefaultPrevented = false;\r\n  protected returnValues: string[] = [];\r\n  protected returnValue: any = undefined;\r\n  protected _eventTarget?: EventTarget | null;\r\n  protected nativeEvent?: Event | null;\r\n  protected arguments_?: ArgType;\r\n\r\n  // public props that can be optionally pulled from the provided Event in constructor\r\n  // they are all optional props because it really depends on the type of Event provided (KeyboardEvent, MouseEvent, ...)\r\n  readonly altKey?: boolean;\r\n  readonly ctrlKey?: boolean;\r\n  readonly metaKey?: boolean;\r\n  readonly shiftKey?: boolean;\r\n  readonly key?: string;\r\n  readonly keyCode?: number;\r\n  readonly clientX?: number;\r\n  readonly clientY?: number;\r\n  readonly offsetX?: number;\r\n  readonly offsetY?: number;\r\n  readonly pageX?: number;\r\n  readonly pageY?: number;\r\n  readonly bubbles?: boolean;\r\n  readonly target?: HTMLElement;\r\n  readonly type?: string;\r\n  readonly which?: number;\r\n  readonly x?: number;\r\n  readonly y?: number;\r\n\r\n  get defaultPrevented() {\r\n    return this._isDefaultPrevented;\r\n  }\r\n\r\n  constructor(protected event?: Event | null, protected args?: ArgType) {\r\n    this.nativeEvent = event;\r\n    this.arguments_ = args;\r\n\r\n    // when we already have an event, we want to keep some of the event properties\r\n    // looping through some props is the only way to keep and sync these properties to the returned EventData\r\n    if (event) {\r\n      [\r\n        'altKey', 'ctrlKey', 'metaKey', 'shiftKey', 'key', 'keyCode',\r\n        'clientX', 'clientY', 'offsetX', 'offsetY', 'pageX', 'pageY',\r\n        'bubbles', 'target', 'type', 'which', 'x', 'y'\r\n      ].forEach(key => (this as any)[key] = event[key as keyof Event]);\r\n    }\r\n    this._eventTarget = this.nativeEvent ? this.nativeEvent.target : undefined;\r\n  }\r\n\r\n  /**\r\n   * Stops event from propagating up the DOM tree.\r\n   * @method stopPropagation\r\n   */\r\n  stopPropagation() {\r\n    this._isPropagationStopped = true;\r\n    this.nativeEvent?.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * Returns whether stopPropagation was called on this event object.\r\n   * @method isPropagationStopped\r\n   * @return {Boolean}\r\n   */\r\n  isPropagationStopped() {\r\n    return this._isPropagationStopped;\r\n  }\r\n\r\n  /**\r\n   * Prevents the rest of the handlers from being executed.\r\n   * @method stopImmediatePropagation\r\n   */\r\n  stopImmediatePropagation() {\r\n    this._isImmediatePropagationStopped = true;\r\n    if (this.nativeEvent) {\r\n      this.nativeEvent.stopImmediatePropagation();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns whether stopImmediatePropagation was called on this event object.\\\r\n   * @method isImmediatePropagationStopped\r\n   * @return {Boolean}\r\n   */\r\n  isImmediatePropagationStopped() {\r\n    return this._isImmediatePropagationStopped;\r\n  };\r\n\r\n  getNativeEvent<E extends Event>() {\r\n    return this.nativeEvent as E;\r\n  }\r\n\r\n  preventDefault() {\r\n    if (this.nativeEvent) {\r\n      this.nativeEvent.preventDefault();\r\n    }\r\n    this._isDefaultPrevented = true;\r\n  }\r\n\r\n  isDefaultPrevented() {\r\n    if (this.nativeEvent) {\r\n      return this.nativeEvent.defaultPrevented;\r\n    }\r\n    return this._isDefaultPrevented;\r\n  }\r\n\r\n  addReturnValue(value: any) {\r\n    this.returnValues.push(value);\r\n    if (this.returnValue === undefined && value !== undefined) {\r\n      this.returnValue = value;\r\n    }\r\n  }\r\n\r\n  getReturnValue() {\r\n    return this.returnValue;\r\n  }\r\n\r\n  getArguments() {\r\n    return this.arguments_;\r\n  }\r\n}\r\n\r\n/**\r\n * A simple publisher-subscriber implementation.\r\n * @class Event\r\n * @constructor\r\n */\r\nexport class SlickEvent<ArgType = any> {\r\n  protected _handlers: Handler<ArgType>[] = [];\r\n  protected _pubSubService?: BasePubSub;\r\n\r\n  get subscriberCount() {\r\n    return this._handlers.length;\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {String} [eventName] - event name that could be used for dispatching CustomEvent (when enabled)\r\n   * @param {BasePubSub} [pubSubService] - event name that could be used for dispatching CustomEvent (when enabled)\r\n   */\r\n  constructor(protected readonly eventName?: string, protected readonly pubSub?: BasePubSub) {\r\n    this._pubSubService = pubSub;\r\n  }\r\n\r\n  /**\r\n   * Adds an event handler to be called when the event is fired.\r\n   * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\r\n   * object the event was fired with.<p>\r\n   * @method subscribe\r\n   * @param {Function} fn - Event handler.\r\n   */\r\n  subscribe(fn: Handler<ArgType>) {\r\n    this._handlers.push(fn);\r\n  }\r\n\r\n  /**\r\n   * Removes an event handler added with <code>subscribe(fn)</code>.\r\n   * @method unsubscribe\r\n   * @param {Function} [fn] - Event handler to be removed.\r\n   */\r\n  unsubscribe(fn?: Handler<ArgType>) {\r\n    for (let i = this._handlers.length - 1; i >= 0; i--) {\r\n      if (this._handlers[i] === fn) {\r\n        this._handlers.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fires an event notifying all subscribers.\r\n   * @method notify\r\n   * @param {Object} args Additional data object to be passed to all handlers.\r\n   * @param {EventData} [event] - An <code>EventData</code> object to be passed to all handlers.\r\n   *      For DOM events, an existing W3C event object can be passed in.\r\n   * @param {Object} [scope] - The scope (\"this\") within which the handler will be executed.\r\n   *      If not specified, the scope will be set to the <code>Event</code> instance.\r\n   */\r\n  notify(args: ArgType, evt?: SlickEventData<ArgType> | Event | MergeTypes<SlickEventData<ArgType>, Event> | null, scope?: any) {\r\n    const sed: SlickEventData = evt instanceof SlickEventData\r\n      ? evt\r\n      : new SlickEventData(evt, args);\r\n    scope = scope || this;\r\n\r\n    for (let i = 0; i < this._handlers.length && !(sed.isPropagationStopped() || sed.isImmediatePropagationStopped()); i++) {\r\n      const returnValue = this._handlers[i].call(scope, sed, args);\r\n      sed.addReturnValue(returnValue);\r\n    }\r\n\r\n    // user can optionally add a global PubSub Service which makes it easy to publish/subscribe to events\r\n    if (typeof this._pubSubService?.publish === 'function' && this.eventName) {\r\n      const ret = this._pubSubService.publish<{ args: ArgType; eventData?: SlickEventData<ArgType>; nativeEvent?: Event; }>(this.eventName, { args, eventData: sed });\r\n      sed.addReturnValue(ret);\r\n    }\r\n    return sed;\r\n  }\r\n\r\n  setPubSubService(pubSub: BasePubSub) {\r\n    this._pubSubService = pubSub;\r\n  }\r\n}\r\n\r\nexport class SlickEventHandler {\r\n  protected handlers: Array<{ event: SlickEvent; handler: Handler<any>; }> = [];\r\n\r\n  subscribe<T = any>(event: SlickEvent<T>, handler: Handler<T>) {\r\n    this.handlers.push({ event, handler });\r\n    event.subscribe(handler);\r\n\r\n    return this as SlickEventHandler;  // allow chaining\r\n  }\r\n\r\n  unsubscribe<T = any>(event: SlickEvent<T>, handler: Handler<T>) {\r\n    let i = this.handlers.length;\r\n    while (i--) {\r\n      if (this.handlers[i].event === event &&\r\n        this.handlers[i].handler === handler) {\r\n        this.handlers.splice(i, 1);\r\n        event.unsubscribe(handler);\r\n        return;\r\n      }\r\n    }\r\n\r\n    return this as SlickEventHandler;  // allow chaining\r\n  }\r\n\r\n  unsubscribeAll() {\r\n    let i = this.handlers.length;\r\n    while (i--) {\r\n      this.handlers[i].event.unsubscribe(this.handlers[i].handler);\r\n    }\r\n    this.handlers = [];\r\n\r\n    return this as SlickEventHandler;  // allow chaining\r\n  }\r\n}\r\n\r\n/**\r\n * A structure containing a range of cells.\r\n * @class Range\r\n * @constructor\r\n * @param fromRow {Integer} Starting row.\r\n * @param fromCell {Integer} Starting cell.\r\n * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\r\n * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\r\n */\r\nexport class SlickRange {\r\n  fromRow: number;\r\n  fromCell: number;\r\n  toCell: number;\r\n  toRow: number;\r\n\r\n  constructor(fromRow: number, fromCell: number, toRow?: number, toCell?: number) {\r\n    if (toRow === undefined && toCell === undefined) {\r\n      toRow = fromRow;\r\n      toCell = fromCell;\r\n    }\r\n\r\n    /**\r\n     * @property fromRow\r\n     * @type {Integer}\r\n     */\r\n    this.fromRow = Math.min(fromRow, toRow as number);\r\n\r\n    /**\r\n     * @property fromCell\r\n     * @type {Integer}\r\n     */\r\n    this.fromCell = Math.min(fromCell, toCell as number);\r\n\r\n    /**\r\n     * @property toCell\r\n     * @type {Integer}\r\n     */\r\n    this.toCell = Math.max(fromCell, toCell as number);\r\n\r\n    /**\r\n     * @property toRow\r\n     * @type {Integer}\r\n     */\r\n    this.toRow = Math.max(fromRow, toRow as number);\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns whether a range represents a single row.\r\n   * @method isSingleRow\r\n   * @return {Boolean}\r\n   */\r\n  isSingleRow() {\r\n    return this.fromRow === this.toRow;\r\n  }\r\n\r\n  /**\r\n   * Returns whether a range represents a single cell.\r\n   * @method isSingleCell\r\n   * @return {Boolean}\r\n   */\r\n  isSingleCell() {\r\n    return this.fromRow === this.toRow && this.fromCell === this.toCell;\r\n  }\r\n\r\n  /**\r\n   * Returns whether a range contains a given cell.\r\n   * @method contains\r\n   * @param row {Integer}\r\n   * @param cell {Integer}\r\n   * @return {Boolean}\r\n   */\r\n  contains(row: number, cell: number) {\r\n    return row >= this.fromRow && row <= this.toRow &&\r\n      cell >= this.fromCell && cell <= this.toCell;\r\n  }\r\n\r\n  /**\r\n   * Returns a readable representation of a range.\r\n   * @method toString\r\n   * @return {String}\r\n   */\r\n  toString() {\r\n    if (this.isSingleCell()) {\r\n      return `(${this.fromRow}:${this.fromCell})`;\r\n    }\r\n    else {\r\n      return `(${this.fromRow}:${this.fromCell} - ${this.toRow}:${this.toCell})`;\r\n    }\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\r\n * @class NonDataItem\r\n * @constructor\r\n */\r\nexport class SlickNonDataItem {\r\n  __nonDataRow = true;\r\n}\r\n\r\n\r\n/**\r\n * Information about a group of rows.\r\n * @class Group\r\n * @extends Slick.NonDataItem\r\n * @constructor\r\n */\r\nexport class SlickGroup extends SlickNonDataItem {\r\n  __group = true;\r\n\r\n  /**\r\n   * Grouping level, starting with 0.\r\n   * @property level\r\n   * @type {Number}\r\n   */\r\n  level = 0;\r\n\r\n  /**\r\n   * Number of rows in the group.\r\n   * @property count\r\n   * @type {Integer}\r\n   */\r\n  count = 0;\r\n\r\n  /**\r\n   * Grouping value.\r\n   * @property value\r\n   * @type {Object}\r\n   */\r\n  value = null;\r\n\r\n  /**\r\n   * Formatted display value of the group.\r\n   * @property title\r\n   * @type {String}\r\n   */\r\n  title: string | null = null;\r\n\r\n  /**\r\n   * Whether a group is collapsed.\r\n   * @property collapsed\r\n   * @type {Boolean}\r\n   */\r\n  collapsed: boolean | number = false;\r\n\r\n  /**\r\n   * Whether a group selection checkbox is checked.\r\n   * @property selectChecked\r\n   * @type {Boolean}\r\n   */\r\n  selectChecked = false;\r\n\r\n  /**\r\n   * GroupTotals, if any.\r\n   * @property totals\r\n   * @type {GroupTotals}\r\n   */\r\n  totals: SlickGroupTotals = null as any;\r\n\r\n  /**\r\n   * Rows that are part of the group.\r\n   * @property rows\r\n   * @type {Array}\r\n   */\r\n  rows: number[] = [];\r\n\r\n  /**\r\n   * Sub-groups that are part of the group.\r\n   * @property groups\r\n   * @type {Array}\r\n   */\r\n  groups: any[] = null as any;\r\n\r\n  /**\r\n   * A unique key used to identify the group.  This key can be used in calls to DataView\r\n   * collapseGroup() or expandGroup().\r\n   * @property groupingKey\r\n   * @type {Object}\r\n   */\r\n  groupingKey: any = null;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n  /**\r\n   * Compares two Group instances.\r\n   * @method equals\r\n   * @return {Boolean}\r\n   * @param group {Group} Group instance to compare to.\r\n   */\r\n  equals(group: SlickGroup): boolean {\r\n    return this.value === group.value &&\r\n      this.count === group.count &&\r\n      this.collapsed === group.collapsed &&\r\n      this.title === group.title;\r\n  };\r\n}\r\n\r\n/**\r\n * Information about group totals.\r\n * An instance of GroupTotals will be created for each totals row and passed to the aggregators\r\n * so that they can store arbitrary data in it.  That data can later be accessed by group totals\r\n * formatters during the display.\r\n * @class GroupTotals\r\n * @extends Slick.NonDataItem\r\n * @constructor\r\n */\r\nexport class SlickGroupTotals extends SlickNonDataItem {\r\n  __groupTotals = true;\r\n\r\n  /**\r\n   * Parent Group.\r\n   * @param group\r\n   * @type {Group}\r\n   */\r\n  group: SlickGroup = null as any;\r\n\r\n  /**\r\n   * Whether the totals have been fully initialized / calculated.\r\n   * Will be set to false for lazy-calculated group totals.\r\n   * @param initialized\r\n   * @type {Boolean}\r\n   */\r\n  initialized = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\n/**\r\n * A locking helper to track the active edit controller and ensure that only a single controller\r\n * can be active at a time.  This prevents a whole class of state and validation synchronization\r\n * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\r\n * and attempt a commit or cancel before proceeding.\r\n * @class EditorLock\r\n * @constructor\r\n */\r\nexport class SlickEditorLock {\r\n  activeEditController: any = null;\r\n\r\n  /**\r\n   * Returns true if a specified edit controller is active (has the edit lock).\r\n   * If the parameter is not specified, returns true if any edit controller is active.\r\n   * @method isActive\r\n   * @param editController {EditController}\r\n   * @return {Boolean}\r\n   */\r\n  isActive(editController?: EditController): boolean {\r\n    return (editController ? this.activeEditController === editController : this.activeEditController !== null);\r\n  };\r\n\r\n  /**\r\n   * Sets the specified edit controller as the active edit controller (acquire edit lock).\r\n   * If another edit controller is already active, and exception will be throw new Error(.\r\n   * @method activate\r\n   * @param editController {EditController} edit controller acquiring the lock\r\n   */\r\n  activate(editController: EditController) {\r\n    if (editController === this.activeEditController) { // already activated?\r\n      return;\r\n    }\r\n    if (this.activeEditController !== null) {\r\n      throw new Error(`Slick.EditorLock.activate: an editController is still active, can't activate another editController`);\r\n    }\r\n    if (!editController.commitCurrentEdit) {\r\n      throw new Error('Slick.EditorLock.activate: editController must implement .commitCurrentEdit()');\r\n    }\r\n    if (!editController.cancelCurrentEdit) {\r\n      throw new Error('Slick.EditorLock.activate: editController must implement .cancelCurrentEdit()');\r\n    }\r\n    this.activeEditController = editController;\r\n  };\r\n\r\n  /**\r\n   * Unsets the specified edit controller as the active edit controller (release edit lock).\r\n   * If the specified edit controller is not the active one, an exception will be throw new Error(.\r\n   * @method deactivate\r\n   * @param editController {EditController} edit controller releasing the lock\r\n   */\r\n  deactivate(editController: EditController) {\r\n    if (!this.activeEditController) {\r\n      return;\r\n    }\r\n    if (this.activeEditController !== editController) {\r\n      throw new Error('Slick.EditorLock.deactivate: specified editController is not the currently active one');\r\n    }\r\n    this.activeEditController = null;\r\n  };\r\n\r\n  /**\r\n   * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\r\n   * controller and returns whether the commit attempt was successful (commit may fail due to validation\r\n   * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\r\n   * and false otherwise.  If no edit controller is active, returns true.\r\n   * @method commitCurrentEdit\r\n   * @return {Boolean}\r\n   */\r\n  commitCurrentEdit(): boolean {\r\n    return (this.activeEditController ? this.activeEditController.commitCurrentEdit() : true);\r\n  };\r\n\r\n  /**\r\n   * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\r\n   * controller and returns whether the edit was successfully cancelled.  If no edit controller is\r\n   * active, returns true.\r\n   * @method cancelCurrentEdit\r\n   * @return {Boolean}\r\n   */\r\n  cancelCurrentEdit(): boolean {\r\n    return (this.activeEditController ? this.activeEditController.cancelCurrentEdit() : true);\r\n  };\r\n}\r\n\r\nfunction regexSanitizer(dirtyHtml: string) {\r\n  return dirtyHtml.replace(/(\\b)(on[a-z]+)(\\s*)=|javascript:([^>]*)[^>]*|(<\\s*)(\\/*)script([<>]*).*(<\\s*)(\\/*)script(>*)|(&lt;)(\\/*)(script|script defer)(.*)(&gt;|&gt;\">)/gi, '');\r\n}\r\n\r\n/**\r\n * A simple binding event service to keep track of all JavaScript events with callback listeners,\r\n * it allows us to unbind event(s) and their listener(s) by calling a simple unbind method call.\r\n * Unbinding is a necessary step to make sure that all event listeners are removed to avoid memory leaks when destroing the grid\r\n */\r\nexport class BindingEventService {\r\n  protected _boundedEvents: ElementEventListener[] = [];\r\n\r\n  getBoundedEvents() {\r\n    return this._boundedEvents;\r\n  }\r\n\r\n  destroy() {\r\n    this.unbindAll();\r\n  }\r\n\r\n  /** Bind an event listener to any element */\r\n  bind(element: Element | Window, eventName: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions, groupName = '') {\r\n    if (element) {\r\n      element.addEventListener(eventName, listener, options);\r\n      this._boundedEvents.push({ element, eventName, listener, groupName });\r\n    }\r\n  }\r\n\r\n  /** Unbind all will remove every every event handlers that were bounded earlier */\r\n  unbind(element: Element | Window, eventName: string, listener: EventListenerOrEventListenerObject) {\r\n    if (element?.removeEventListener) {\r\n      element.removeEventListener(eventName, listener);\r\n    }\r\n  }\r\n\r\n  unbindByEventName(element: Element | Window, eventName: string) {\r\n    const boundedEvent = this._boundedEvents.find(e => e.element === element && e.eventName === eventName);\r\n    if (boundedEvent) {\r\n      this.unbind(boundedEvent.element, boundedEvent.eventName, boundedEvent.listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind all event listeners that were bounded, optionally provide a group name to unbind all listeners assigned to that specific group only.\r\n   */\r\n  unbindAll(groupName?: string | string[]) {\r\n    if (groupName) {\r\n      const groupNames = Array.isArray(groupName) ? groupName : [groupName];\r\n\r\n      // unbind only the bounded event with a specific group\r\n      // Note: we need to loop in reverse order to avoid array reindexing (causing index offset) after a splice is called\r\n      for (let i = this._boundedEvents.length - 1; i >= 0; --i) {\r\n        const boundedEvent = this._boundedEvents[i];\r\n        if (groupNames.some(g => g === boundedEvent.groupName)) {\r\n          const { element, eventName, listener } = boundedEvent;\r\n          this.unbind(element, eventName, listener);\r\n          this._boundedEvents.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      // unbind everything\r\n      while (this._boundedEvents.length > 0) {\r\n        const boundedEvent = this._boundedEvents.pop() as ElementEventListener;\r\n        const { element, eventName, listener } = boundedEvent;\r\n        this.unbind(element, eventName, listener);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class Utils {\r\n  // jQuery's extend\r\n  private static getProto = Object.getPrototypeOf;\r\n  private static class2type: any = {};\r\n  private static toString = Utils.class2type.toString;\r\n  private static hasOwn = Utils.class2type.hasOwnProperty;\r\n  private static fnToString = Utils.hasOwn.toString;\r\n  private static ObjectFunctionString = Utils.fnToString.call(Object);\r\n  public static storage = {\r\n    // https://stackoverflow.com/questions/29222027/vanilla-alternative-to-jquery-data-function-any-native-javascript-alternati\r\n    _storage: new WeakMap(),\r\n    // eslint-disable-next-line object-shorthand\r\n    put: function (element: any, key: string, obj: any) {\r\n      if (!this._storage.has(element)) {\r\n        this._storage.set(element, new Map());\r\n      }\r\n      this._storage.get(element).set(key, obj);\r\n    },\r\n    // eslint-disable-next-line object-shorthand\r\n    get: function (element: any, key: string) {\r\n      const el = this._storage.get(element);\r\n      if (el) {\r\n        return el.get(key);\r\n      }\r\n      return null;\r\n    },\r\n    // eslint-disable-next-line object-shorthand\r\n    remove: function (element: any, key: string) {\r\n      const ret = this._storage.get(element).delete(key);\r\n      if (!(this._storage.get(element).size === 0)) {\r\n        this._storage.delete(element);\r\n      }\r\n      return ret;\r\n    }\r\n  };\r\n\r\n  public static isFunction(obj: any) {\r\n    return typeof obj === 'function' && typeof obj.nodeType !== 'number' && typeof obj.item !== 'function';\r\n  }\r\n\r\n  public static isPlainObject(obj: any) {\r\n    if (!obj || Utils.toString.call(obj) !== '[object Object]') {\r\n      return false;\r\n    }\r\n\r\n    const proto = Utils.getProto(obj);\r\n    if (!proto) {\r\n      return true;\r\n    }\r\n    const Ctor = Utils.hasOwn.call(proto, 'constructor') && proto.constructor;\r\n    return typeof Ctor === 'function' && Utils.fnToString.call(Ctor) === Utils.ObjectFunctionString;\r\n  }\r\n\r\n  public static calculateAvailableSpace(element: HTMLElement) {\r\n    let bottom = 0, top = 0, left = 0, right = 0;\r\n\r\n    const windowHeight = window.innerHeight || 0;\r\n    const windowWidth = window.innerWidth || 0;\r\n    const scrollPosition = Utils.windowScrollPosition();\r\n    const pageScrollTop = scrollPosition.top;\r\n    const pageScrollLeft = scrollPosition.left;\r\n    const elmOffset = Utils.offset(element);\r\n\r\n    if (elmOffset) {\r\n      const elementOffsetTop = elmOffset.top || 0;\r\n      const elementOffsetLeft = elmOffset.left || 0;\r\n      top = elementOffsetTop - pageScrollTop;\r\n      bottom = windowHeight - (elementOffsetTop - pageScrollTop);\r\n      left = elementOffsetLeft - pageScrollLeft;\r\n      right = windowWidth - (elementOffsetLeft - pageScrollLeft);\r\n    }\r\n\r\n    return { top, bottom, left, right };\r\n  }\r\n\r\n  public static extend<T = any>(...args: any[]): T {\r\n    let options, name, src, copy, copyIsArray, clone,\r\n      target = args[0],\r\n      i = 1,\r\n      deep = false;\r\n    const length = args.length;\r\n\r\n    if (typeof target === 'boolean') {\r\n      deep = target;\r\n      target = args[i] || {};\r\n      i++;\r\n    } else {\r\n      target = target || {};\r\n    }\r\n    if (typeof target !== 'object' && !Utils.isFunction(target)) {\r\n      target = {};\r\n    }\r\n    if (i === length) {\r\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n      target = this;\r\n      i--;\r\n    }\r\n    for (; i < length; i++) {\r\n      if (Utils.isDefined(options = args[i])) {\r\n        for (name in options) {\r\n          copy = options[name];\r\n          if (name === '__proto__' || target === copy) {\r\n            continue;\r\n          }\r\n          if (deep && copy && (Utils.isPlainObject(copy) ||\r\n            (copyIsArray = Array.isArray(copy)))) {\r\n            src = target[name];\r\n            if (copyIsArray && !Array.isArray(src)) {\r\n              clone = [];\r\n            } else if (!copyIsArray && !Utils.isPlainObject(src)) {\r\n              clone = {};\r\n            } else {\r\n              clone = src;\r\n            }\r\n            copyIsArray = false;\r\n            target[name] = Utils.extend(deep, clone, copy);\r\n          } else if (copy !== undefined) {\r\n            target[name] = copy;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return target as T;\r\n  }\r\n\r\n  /**\r\n   * Create a DOM Element with any optional attributes or properties.\r\n   * It will only accept valid DOM element properties that `createElement` would accept.\r\n   * For example: `createDomElement('div', { className: 'my-css-class' })`,\r\n   * for style or dataset you need to use nested object `{ style: { display: 'none' }}\r\n   * The last argument is to optionally append the created element to a parent container element.\r\n   * @param {String} tagName - html tag\r\n   * @param {Object} options - element properties\r\n   * @param {[HTMLElement]} appendToParent - parent element to append to\r\n   */\r\n  public static createDomElement<T extends keyof HTMLElementTagNameMap, K extends keyof HTMLElementTagNameMap[T]>(\r\n    tagName: T,\r\n    elementOptions?: null | { [P in K]: InferDOMType<HTMLElementTagNameMap[T][P]> },\r\n    appendToParent?: Element\r\n  ): HTMLElementTagNameMap[T] {\r\n    const elm = document.createElement<T>(tagName);\r\n\r\n    if (elementOptions) {\r\n      Object.keys(elementOptions).forEach((elmOptionKey) => {\r\n        if (elmOptionKey === 'innerHTML') {\r\n          console.warn(`[SlickGrid] For better CSP (Content Security Policy) support, do not use \"innerHTML\" directly in \"createDomElement('${tagName}', { innerHTML: 'some html'})\"` +\r\n            `, it is better as separate assignment: \"const elm = createDomElement('span'); elm.innerHTML = 'some html';\"`);\r\n        }\r\n\r\n        const elmValue = elementOptions[elmOptionKey as keyof typeof elementOptions];\r\n        if (typeof elmValue === 'object') {\r\n          Object.assign(elm[elmOptionKey as K] as object, elmValue);\r\n        } else {\r\n          elm[elmOptionKey as K] = (elementOptions as any)[elmOptionKey as keyof typeof elementOptions];\r\n        }\r\n      });\r\n    }\r\n    if (appendToParent?.appendChild) {\r\n      appendToParent.appendChild(elm);\r\n    }\r\n    return elm;\r\n  }\r\n\r\n  /**\r\n   * From any input provided, return the HTML string (when a string is provided, it will be returned \"as is\" but when it's a number it will be converted to string)\r\n   * When detecting HTMLElement/DocumentFragment, we can also specify which HTML type to retrieve innerHTML or outerHTML.\r\n   * We can get the HTML by looping through all fragment `childNodes`\r\n   * @param {DocumentFragment | HTMLElement | string | number} input\r\n   * @param {'innerHTML' | 'outerHTML'} [type] - when the input is a DocumentFragment or HTMLElement, which type of HTML do you want to return? 'innerHTML' or 'outerHTML'\r\n   * @returns {String}\r\n   */\r\n  public static getHtmlStringOutput(input: DocumentFragment | HTMLElement | string | number, type: 'innerHTML' | 'outerHTML' = 'innerHTML'): string {\r\n    if (input instanceof DocumentFragment) {\r\n      // a DocumentFragment doesn't have innerHTML/outerHTML, but we can loop through all children and concatenate them all to an HTML string\r\n      return [].map.call(input.childNodes, (x: HTMLElement) => x[type]).join('') || input.textContent || '';\r\n    } else if (input instanceof HTMLElement) {\r\n      return input[type];\r\n    }\r\n    return String(input); // reaching this line means it's already a string (or number) so just return it as string\r\n  }\r\n\r\n  public static emptyElement<T extends Element = Element>(element?: T | null): T | undefined | null {\r\n    while (element?.firstChild) {\r\n      element.removeChild(element.firstChild);\r\n    }\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Accepts string containing the class or space-separated list of classes, and\r\n   * returns list of individual classes.\r\n   * Method properly takes into account extra whitespaces in the `className`\r\n   * e.g.: \" class1    class2   \" => will result in `['class1', 'class2']`.\r\n   * @param {String} className - space separated list of class names\r\n   */\r\n  public static classNameToList(className = ''): string[] {\r\n    return className.split(' ').filter(cls => cls);\r\n  }\r\n\r\n  public static innerSize(elm: HTMLElement, type: 'height' | 'width') {\r\n    let size = 0;\r\n\r\n    if (elm) {\r\n      const clientSize = type === 'height' ? 'clientHeight' : 'clientWidth';\r\n      const sides = type === 'height' ? ['top', 'bottom'] : ['left', 'right'];\r\n      size = elm[clientSize];\r\n      for (const side of sides) {\r\n        const sideSize = (parseFloat(Utils.getElementProp(elm, `padding-${side}`) || '') || 0);\r\n        size -= sideSize;\r\n      }\r\n    }\r\n    return size;\r\n  }\r\n\r\n  public static isDefined<T>(value: T | undefined | null): value is T {\r\n    return <T>value !== undefined && <T>value !== null && <T>value !== '';\r\n  }\r\n\r\n  public static getElementProp(elm: HTMLElement & { getComputedStyle?: () => CSSStyleDeclaration }, property: string) {\r\n    if (elm?.getComputedStyle) {\r\n      return window.getComputedStyle(elm, null).getPropertyValue(property);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get the function details (param & body) of a function.\r\n   * It supports regular function and also ES6 arrow functions\r\n   * @param {Function} fn - function to analyze\r\n   * @param {Boolean} [addReturn] - when using ES6 function as single liner, we could add the missing `return ...`\r\n   * @returns\r\n   */\r\n  public static getFunctionDetails(fn: AnyFunction, addReturn = true) {\r\n    let isAsyncFn = false;\r\n\r\n    const getFunctionBody = (func: AnyFunction) => {\r\n      const fnStr = func.toString();\r\n      isAsyncFn = fnStr.includes('async ');\r\n\r\n      // when fn is one liner arrow fn returning an object in brackets e.g. `() => ({ hello: 'world' })`\r\n      if ((fnStr.replaceAll(' ', '').includes('=>({'))) {\r\n        const matches = fnStr.match(/(({.*}))/g) || [];\r\n        return matches.length >= 1 ? `return ${matches[0]!.trimStart()}` : fnStr;\r\n      }\r\n      const isOneLinerArrowFn = (!fnStr.includes('{') && fnStr.includes('=>'));\r\n      const body = fnStr.substring(\r\n        (fnStr.indexOf('{') + 1) || (fnStr.indexOf('=>') + 2),\r\n        fnStr.includes('}') ? fnStr.lastIndexOf('}') : fnStr.length\r\n      );\r\n      if (addReturn && isOneLinerArrowFn && !body.startsWith('return')) {\r\n        return 'return ' + body.trimStart(); // add the `return ...` to the body for ES6 arrow fn\r\n      }\r\n      return body;\r\n    };\r\n\r\n    const getFunctionParams = (func: AnyFunction): string[] => {\r\n      const STRIP_COMMENTS = /(\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/)|(\\s*=[^,)]*(('(?:\\\\'|[^'\\r\\n])*')|(\"(?:\\\\\"|[^\"\\r\\n])*\"))|(\\s*=[^,)]*))/mg;\r\n      const ARG_NAMES = /([^\\s,]+)/g;\r\n      const fnStr = func.toString().replace(STRIP_COMMENTS, '');\r\n      return fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARG_NAMES) ?? [];\r\n    };\r\n\r\n    return {\r\n      params: getFunctionParams(fn),\r\n      body: getFunctionBody(fn),\r\n      isAsync: isAsyncFn,\r\n    };\r\n  }\r\n\r\n  public static insertAfterElement(referenceNode: HTMLElement, newNode: HTMLElement) {\r\n    referenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\r\n  }\r\n\r\n  public static isEmptyObject(obj: any) {\r\n    if (obj === null || obj === undefined) {\r\n      return true;\r\n    }\r\n    return Object.entries(obj).length === 0;\r\n  }\r\n\r\n  public static noop() { }\r\n\r\n  public static offset(el: HTMLElement | null) {\r\n    if (!el || !el.getBoundingClientRect) {\r\n      return undefined;\r\n    }\r\n    const box = el.getBoundingClientRect();\r\n    const docElem = document.documentElement;\r\n\r\n    return {\r\n      top: box.top + window.pageYOffset - docElem.clientTop,\r\n      left: box.left + window.pageXOffset - docElem.clientLeft\r\n    };\r\n  }\r\n\r\n  public static windowScrollPosition() {\r\n    return {\r\n      left: window.pageXOffset || document.documentElement.scrollLeft || 0,\r\n      top: window.pageYOffset || document.documentElement.scrollTop || 0,\r\n    };\r\n  }\r\n\r\n  public static width(el: HTMLElement, value?: number | string): number | void {\r\n    if (!el || !el.getBoundingClientRect) { return; }\r\n    if (value === undefined) {\r\n      return el.getBoundingClientRect().width;\r\n    }\r\n    Utils.setStyleSize(el, 'width', value);\r\n  }\r\n\r\n  public static height(el: HTMLElement, value?: number | string): number | void {\r\n    if (!el) { return; }\r\n    if (value === undefined) {\r\n      return el.getBoundingClientRect().height;\r\n    }\r\n    Utils.setStyleSize(el, 'height', value);\r\n  }\r\n\r\n  public static setStyleSize(el: HTMLElement, style: string, val?: number | string | Function) {\r\n    if (typeof val === 'function') {\r\n      val = val();\r\n    } else if (typeof val === 'string') {\r\n      el.style[style as CSSStyleDeclarationWritable] = val;\r\n    } else {\r\n      el.style[style as CSSStyleDeclarationWritable] = val + 'px';\r\n    }\r\n  }\r\n\r\n  public static contains(parent: HTMLElement, child: HTMLElement) {\r\n    if (!parent || !child) {\r\n      return false;\r\n    }\r\n\r\n    const parentList = Utils.parents(child);\r\n    return !parentList.every((p) => {\r\n      if (parent === p) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  public static isHidden(el: HTMLElement) {\r\n    return el.offsetWidth === 0 && el.offsetHeight === 0;\r\n  }\r\n\r\n  public static parents(el: HTMLElement | ParentNode, selector?: string) {\r\n    const parents: Array<HTMLElement | ParentNode> = [];\r\n    const visible = selector === ':visible';\r\n    const hidden = selector === ':hidden';\r\n\r\n    while ((el = el.parentNode as ParentNode) && el !== document) {\r\n      if (!el || !el.parentNode) {\r\n        break;\r\n      }\r\n      if (hidden) {\r\n        if (Utils.isHidden(el as HTMLElement)) {\r\n          parents.push(el);\r\n        }\r\n      } else if (visible) {\r\n        if (!Utils.isHidden(el as HTMLElement)) {\r\n          parents.push(el);\r\n        }\r\n      } else if (!selector || (el as any).matches(selector)) {\r\n        parents.push(el);\r\n      }\r\n    }\r\n    return parents;\r\n  }\r\n\r\n  public static toFloat(value: string | number) {\r\n    const x = parseFloat(value as string);\r\n    if (isNaN(x)) {\r\n      return 0;\r\n    }\r\n    return x;\r\n  }\r\n\r\n  public static show(el: HTMLElement | HTMLElement[], type = '') {\r\n    if (Array.isArray(el)) {\r\n      el.forEach((e) => e.style.display = type);\r\n    } else {\r\n      el.style.display = type;\r\n    }\r\n  }\r\n\r\n  public static hide(el: HTMLElement | HTMLElement[]) {\r\n    if (Array.isArray(el)) {\r\n      el.forEach((e) => e.style.display = 'none');\r\n    } else {\r\n      el.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  public static slideUp(el: HTMLElement | HTMLElement[], callback: Function) {\r\n    return Utils.slideAnimation(el, 'slideUp', callback);\r\n  }\r\n\r\n  public static slideDown(el: HTMLElement | HTMLElement[], callback: Function) {\r\n    return Utils.slideAnimation(el, 'slideDown', callback);\r\n  }\r\n\r\n  public static slideAnimation(el: HTMLElement | HTMLElement[], slideDirection: 'slideDown' | 'slideUp', callback: Function) {\r\n    if ((window as any).jQuery !== undefined) {\r\n      (window as any).jQuery(el)[slideDirection]('fast', callback);\r\n      return;\r\n    }\r\n    (slideDirection === 'slideUp') ? Utils.hide(el) : Utils.show(el);\r\n    callback();\r\n  }\r\n\r\n  public static applyDefaults(targetObj: any, srcObj: any) {\r\n    if (typeof srcObj === 'object') {\r\n      Object.keys(srcObj).forEach(key => {\r\n        if (srcObj.hasOwnProperty(key) && !targetObj.hasOwnProperty(key)) {\r\n          targetObj[key] = srcObj[key];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * User could optionally add PubSub Service to SlickEvent\r\n   * When it is defined then a SlickEvent `notify()` call will also dispatch it by using the PubSub publish() method\r\n   * @param {BasePubSub} [pubSubService]\r\n   * @param {*} scope\r\n   */\r\n  public static addSlickEventPubSubWhenDefined<T = any>(pubSub?: BasePubSub, scope?: T) {\r\n    if (pubSub) {\r\n      for (const prop in scope) {\r\n        if (scope[prop] instanceof SlickEvent && typeof (scope[prop] as SlickEvent).setPubSubService === 'function') {\r\n          (scope[prop] as SlickEvent).setPubSubService(pubSub);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const SlickGlobalEditorLock = new SlickEditorLock();\r\n\r\n// export Slick namespace on both global & window objects\r\nconst SlickCore = {\r\n  Event: SlickEvent,\r\n  EventData: SlickEventData,\r\n  EventHandler: SlickEventHandler,\r\n  Range: SlickRange,\r\n  NonDataRow: SlickNonDataItem,\r\n  Group: SlickGroup,\r\n  GroupTotals: SlickGroupTotals,\r\n  EditorLock: SlickEditorLock,\r\n  RegexSanitizer: regexSanitizer,\r\n\r\n  /**\r\n   * A global singleton editor lock.\r\n   * @class GlobalEditorLock\r\n   * @static\r\n   * @constructor\r\n   */\r\n  GlobalEditorLock: SlickGlobalEditorLock,\r\n\r\n  keyCode: {\r\n    SPACE: 8,\r\n    BACKSPACE: 8,\r\n    DELETE: 46,\r\n    DOWN: 40,\r\n    END: 35,\r\n    ENTER: 13,\r\n    ESCAPE: 27,\r\n    HOME: 36,\r\n    INSERT: 45,\r\n    LEFT: 37,\r\n    PAGE_DOWN: 34,\r\n    PAGE_UP: 33,\r\n    RIGHT: 39,\r\n    TAB: 9,\r\n    UP: 38,\r\n    A: 65\r\n  },\r\n  preClickClassName: 'slick-edit-preclick',\r\n\r\n  GridAutosizeColsMode: {\r\n    None: 'NOA',\r\n    LegacyOff: 'LOF',\r\n    LegacyForceFit: 'LFF',\r\n    IgnoreViewport: 'IGV',\r\n    FitColsToViewport: 'FCV',\r\n    FitViewportToCols: 'FVC'\r\n  },\r\n\r\n  'ColAutosizeMode': {\r\n    Locked: 'LCK',\r\n    Guide: 'GUI',\r\n    Content: 'CON',\r\n    ContentExpandOnly: 'CXO',\r\n    ContentIntelligent: 'CTI'\r\n  },\r\n\r\n  'RowSelectionMode': {\r\n    FirstRow: 'FS1',\r\n    FirstNRows: 'FSN',\r\n    AllRows: 'ALL',\r\n    LastRow: 'LS1'\r\n  },\r\n\r\n  'ValueFilterMode': {\r\n    None: 'NONE',\r\n    DeDuplicate: 'DEDP',\r\n    GetGreatestAndSub: 'GR8T',\r\n    GetLongestTextAndSub: 'LNSB',\r\n    GetLongestText: 'LNSC'\r\n  },\r\n\r\n  WidthEvalMode: {\r\n    Auto: 'AUTO',\r\n    TextOnly: 'CANV',\r\n    HTML: 'HTML'\r\n  }\r\n};\r\n\r\nexport const {\r\n  EditorLock, Event, EventData, EventHandler, Group, GroupTotals, NonDataRow, Range,\r\n  RegexSanitizer, GlobalEditorLock, keyCode, preClickClassName, GridAutosizeColsMode, ColAutosizeMode,\r\n  RowSelectionMode, ValueFilterMode, WidthEvalMode\r\n} = SlickCore;\r\n\r\n// also add to global object when exist\r\nif (IIFE_ONLY && typeof global !== 'undefined' && window.Slick) {\r\n  global.Slick = window.Slick;\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
