{
  "version": 3,
  "sources": ["import-ns:./slick.core.js", "../../src/slick.formatters.js"],
  "sourcesContent": ["// empty string, do nothing", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Formatters = exports.CheckmarkFormatter = exports.CheckboxFormatter = exports.YesNoFormatter = exports.PercentCompleteBarFormatter = exports.PercentCompleteFormatter = void 0;\nvar slick_core_1 = require(\"./slick.core\");\n// for (iife) load Slick methods from global Slick object, or use imports for (esm)\nvar Utils = IIFE_ONLY ? Slick.Utils : slick_core_1.Utils;\n/***\n * Contains basic SlickGrid formatters.\n *\n * NOTE:  These are merely examples.  You will most likely need to implement something more\n *        robust/extensible/localizable/etc. for your use!\n *\n * @module Formatters\n * @namespace Slick\n */\nvar PercentCompleteFormatter = function (_row, _cell, value) {\n    if (value == null || value === '') {\n        return '-';\n    }\n    else if (value < 50) {\n        return \"<span style=\\\"color:red;font-weight:bold;\\\">\".concat(value, \"%</span>\");\n    }\n    else {\n        return \"<span style=\\\"color:green\\\">\".concat(value, \"%</span>\");\n    }\n};\nexports.PercentCompleteFormatter = PercentCompleteFormatter;\nvar PercentCompleteBarFormatter = function (_row, _cell, value) {\n    if (value == null || value === '') {\n        return '';\n    }\n    var color;\n    if (value < 30) {\n        color = 'red';\n    }\n    else if (value < 70) {\n        color = 'silver';\n    }\n    else {\n        color = 'green';\n    }\n    return \"<span class=\\\"percent-complete-bar\\\" style=\\\"background:\".concat(color, \";width:\").concat(value, \"%\\\" title=\\\"\").concat(value, \"%\\\"></span>\");\n};\nexports.PercentCompleteBarFormatter = PercentCompleteBarFormatter;\nvar YesNoFormatter = function (_row, _cell, value) {\n    return value ? 'Yes' : 'No';\n};\nexports.YesNoFormatter = YesNoFormatter;\nvar CheckboxFormatter = function (_row, _cell, value) {\n    return \"<span class=\\\"sgi sgi-checkbox-\".concat(value ? 'intermediate' : 'blank-outline', \"\\\"></span>\");\n};\nexports.CheckboxFormatter = CheckboxFormatter;\nvar CheckmarkFormatter = function (_row, _cell, value) {\n    return value ? \"<span class=\\\"sgi sgi-check\\\"></span>\" : '';\n};\nexports.CheckmarkFormatter = CheckmarkFormatter;\nexports.Formatters = {\n    PercentComplete: exports.PercentCompleteFormatter,\n    PercentCompleteBar: exports.PercentCompleteBarFormatter,\n    YesNo: exports.YesNoFormatter,\n    Checkmark: exports.CheckmarkFormatter,\n    Checkbox: exports.CheckboxFormatter\n};\n// extend Slick namespace on window object when building as iife\nif (IIFE_ONLY && window.Slick) {\n    Utils.extend(Slick, {\n        Formatters: exports.Formatters\n    });\n}\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AACA,aAAO,eAAe,SAAS,cAAc,EAAE,OAAO,GAAK,CAAC;AAC5D,cAAQ,aAAa,QAAQ,qBAAqB,QAAQ,oBAAoB,QAAQ,iBAAiB,QAAQ,8BAA8B,QAAQ,2BAA2B;AAChL,UAAI,eAAe,sBAEf,QAAoB,MAAM,OAU1B,2BAA2B,SAAU,MAAM,OAAO,OAAO;AACzD,eAAI,SAAS,QAAQ,UAAU,KACpB,MAEF,QAAQ,KACN,6CAA+C,OAAO,OAAO,UAAU,IAGvE,6BAA+B,OAAO,OAAO,UAAU;AAAA,MAEtE;AACA,cAAQ,2BAA2B;AACnC,UAAI,8BAA8B,SAAU,MAAM,OAAO,OAAO;AAC5D,YAAI,SAAS,QAAQ,UAAU;AAC3B,iBAAO;AAEX,YAAI;AACJ,eAAI,QAAQ,KACR,QAAQ,QAEH,QAAQ,KACb,QAAQ,WAGR,QAAQ,SAEL,wDAA2D,OAAO,OAAO,SAAS,EAAE,OAAO,OAAO,YAAc,EAAE,OAAO,OAAO,YAAa;AAAA,MACxJ;AACA,cAAQ,8BAA8B;AACtC,UAAI,iBAAiB,SAAU,MAAM,OAAO,OAAO;AAC/C,eAAO,QAAQ,QAAQ;AAAA,MAC3B;AACA,cAAQ,iBAAiB;AACzB,UAAI,oBAAoB,SAAU,MAAM,OAAO,OAAO;AAClD,eAAO,iCAAkC,OAAO,QAAQ,iBAAiB,iBAAiB,WAAY;AAAA,MAC1G;AACA,cAAQ,oBAAoB;AAC5B,UAAI,qBAAqB,SAAU,MAAM,OAAO,OAAO;AACnD,eAAO,QAAQ,wCAA0C;AAAA,MAC7D;AACA,cAAQ,qBAAqB;AAC7B,cAAQ,aAAa;AAAA,QACjB,iBAAiB,QAAQ;AAAA,QACzB,oBAAoB,QAAQ;AAAA,QAC5B,OAAO,QAAQ;AAAA,QACf,WAAW,QAAQ;AAAA,QACnB,UAAU,QAAQ;AAAA,MACtB;AAEA,MAAiB,OAAO,SACpB,MAAM,OAAO,OAAO;AAAA,QAChB,YAAY,QAAQ;AAAA,MACxB,CAAC;AAAA;AAAA;",
  "names": []
}
