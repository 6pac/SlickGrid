{
  "version": 3,
  "sources": ["../../src/slick.interactions.ts"],
  "sourcesContent": ["import type { DragItem, DragPosition, DraggableOption, MouseWheelOption, ResizableOption } from './models/index.js';\r\nimport { Utils as Utils_ } from './slick.core.js';\r\n\r\n// for (iife) load Slick methods from global Slick object, or use imports for (esm)\r\nconst Utils = IIFE_ONLY ? Slick.Utils : Utils_;\r\n\r\n/***\r\n * Interactions, add basic behaviors to any element.\r\n * All the packages are written in pure vanilla JS and supports both mouse & touch events.\r\n * @module Interactions\r\n * @namespace Slick\r\n */\r\n\r\n/**\r\n * Draggable Class, enables dragging functionality for any element for example cell & row selections.\r\n * Note that mouse/touch start is on the specified container element but all other events are on the document body.\r\n * code refs:\r\n *   https://betterprogramming.pub/perfecting-drag-and-drop-in-pure-vanilla-javascript-a761184b797a\r\n * available optional options:\r\n *   - containerElement: container DOM element, defaults to \"document\"\r\n *   - allowDragFrom: when defined, only allow dragging from an element that matches a specific query selector\r\n *   - allowDragFromClosest: when defined, only allow dragging from an element or its parent matching a specific .closest() query selector\r\n *   - onDragInit: drag initialized callback\r\n *   - onDragStart: drag started callback\r\n *   - onDrag: drag callback\r\n *   - onDragEnd: drag ended callback\r\n * @param {Object} options\r\n * @returns - Draggable instance which includes destroy method\r\n * @class Draggable\r\n */\r\nexport function Draggable(options: DraggableOption) {\r\n  let { containerElement } = options;\r\n  const { onDragInit, onDragStart, onDrag, onDragEnd, preventDragFromKeys } = options;\r\n  let element: HTMLElement | null;\r\n  let startX: number;\r\n  let startY: number;\r\n  let deltaX: number;\r\n  let deltaY: number;\r\n  let dragStarted: boolean;\r\n\r\n  if (!containerElement) {\r\n    containerElement = document.body;\r\n  }\r\n\r\n  let originaldd: Partial<DragItem> = {\r\n    dragSource: containerElement,\r\n    dragHandle: null,\r\n  };\r\n\r\n  function init() {\r\n    if (containerElement) {\r\n      containerElement.addEventListener('mousedown', userPressed as EventListener);\r\n      containerElement.addEventListener('touchstart', userPressed as EventListener);\r\n    }\r\n  }\r\n\r\n  function executeDragCallbackWhenDefined(callback?: (e: DragEvent, dd: DragItem) => boolean | void, evt?: MouseEvent | Touch | TouchEvent | KeyboardEvent, dd?: DragItem) {\r\n    if (typeof callback === 'function') {\r\n      return callback(evt as DragEvent, dd as DragItem);\r\n    }\r\n  }\r\n\r\n  function destroy() {\r\n    if (containerElement) {\r\n      containerElement.removeEventListener('mousedown', userPressed as EventListener);\r\n      containerElement.removeEventListener('touchstart', userPressed as EventListener);\r\n    }\r\n  }\r\n\r\n  /** Do we want to prevent Drag events from happening (for example prevent onDrag when Ctrl key is pressed while dragging) */\r\n  function preventDrag(event: MouseEvent | TouchEvent | KeyboardEvent) {\r\n    let eventPrevented = false;\r\n    if (preventDragFromKeys) {\r\n      preventDragFromKeys.forEach(key => {\r\n        if ((event as KeyboardEvent)[key]) {\r\n          eventPrevented = true;\r\n        }\r\n      });\r\n    }\r\n    return eventPrevented;\r\n  }\r\n\r\n  function userPressed(event: MouseEvent | TouchEvent | KeyboardEvent) {\r\n    if (!preventDrag(event)) {\r\n      element = event.target as HTMLElement;\r\n      const targetEvent: MouseEvent | Touch = (event as TouchEvent)?.touches?.[0] ?? event;\r\n      const { target } = targetEvent;\r\n\r\n      if (!options.allowDragFrom || (options.allowDragFrom && (element.matches(options.allowDragFrom)) || (options.allowDragFromClosest && element.closest(options.allowDragFromClosest)))) {\r\n        originaldd.dragHandle = element as HTMLElement;\r\n        const winScrollPos = Utils.windowScrollPosition();\r\n        startX = winScrollPos.left + targetEvent.clientX;\r\n        startY = winScrollPos.top + targetEvent.clientY;\r\n        deltaX = targetEvent.clientX - targetEvent.clientX;\r\n        deltaY = targetEvent.clientY - targetEvent.clientY;\r\n        originaldd = Object.assign(originaldd, { deltaX, deltaY, startX, startY, target });\r\n        const result = executeDragCallbackWhenDefined(onDragInit as (e: DragEvent, dd: DragPosition) => boolean | void, event, originaldd as DragItem);\r\n\r\n        if (result !== false) {\r\n          document.body.addEventListener('mousemove', userMoved);\r\n          document.body.addEventListener('touchmove', userMoved);\r\n          document.body.addEventListener('mouseup', userReleased);\r\n          document.body.addEventListener('touchend', userReleased);\r\n          document.body.addEventListener('touchcancel', userReleased);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function userMoved(event: MouseEvent | TouchEvent | KeyboardEvent) {\r\n    if (!preventDrag(event)) {\r\n      const targetEvent: MouseEvent | Touch = (event as TouchEvent)?.touches?.[0] ?? event;\r\n      deltaX = targetEvent.clientX - startX;\r\n      deltaY = targetEvent.clientY - startY;\r\n      const { target } = targetEvent;\r\n\r\n      if (!dragStarted) {\r\n        originaldd = Object.assign(originaldd, { deltaX, deltaY, startX, startY, target });\r\n        executeDragCallbackWhenDefined(onDragStart, event, originaldd as DragItem);\r\n        dragStarted = true;\r\n      }\r\n\r\n      originaldd = Object.assign(originaldd, { deltaX, deltaY, startX, startY, target });\r\n      executeDragCallbackWhenDefined(onDrag, event, originaldd as DragItem);\r\n    }\r\n  }\r\n\r\n  function userReleased(event: MouseEvent | TouchEvent) {\r\n    document.body.removeEventListener('mousemove', userMoved);\r\n    document.body.removeEventListener('touchmove', userMoved);\r\n    document.body.removeEventListener('mouseup', userReleased);\r\n    document.body.removeEventListener('touchend', userReleased);\r\n    document.body.removeEventListener('touchcancel', userReleased);\r\n\r\n    // trigger a dragEnd event only after dragging started and stopped\r\n    if (dragStarted) {\r\n      const { target } = event;\r\n      originaldd = Object.assign(originaldd, { target });\r\n      executeDragCallbackWhenDefined(onDragEnd, event, originaldd as DragItem);\r\n      dragStarted = false;\r\n    }\r\n  }\r\n\r\n  // initialize Slick.MouseWheel by attaching mousewheel event\r\n  init();\r\n\r\n  // public API\r\n  return { destroy };\r\n}\r\n\r\n/**\r\n * MouseWheel Class, add mousewheel listeners and calculate delta values and return them in the callback function.\r\n * available optional options:\r\n *   - element: optional DOM element to attach mousewheel values, if undefined we'll attach it to the \"window\" object\r\n *   - onMouseWheel: mousewheel callback\r\n * @param {Object} options\r\n * @returns - MouseWheel instance which includes destroy method\r\n * @class MouseWheel\r\n */\r\nexport function MouseWheel(options: MouseWheelOption) {\r\n  const { element, onMouseWheel } = options;\r\n\r\n  function destroy() {\r\n    element.removeEventListener('wheel', wheelHandler as EventListener);\r\n    element.removeEventListener('mousewheel', wheelHandler as EventListener);\r\n  }\r\n\r\n  function init() {\r\n    element.addEventListener('wheel', wheelHandler as EventListener);\r\n    element.addEventListener('mousewheel', wheelHandler as EventListener);\r\n  }\r\n\r\n  // copy over the same event handler code used in jquery.mousewheel\r\n  function wheelHandler(event: WheelEvent & { axis: number; wheelDelta: number; wheelDeltaX: number; wheelDeltaY: number; HORIZONTAL_AXIS: number; }) {\r\n    const orgEvent = event || window.event;\r\n    let delta = 0;\r\n    let deltaX = 0;\r\n    let deltaY = 0;\r\n\r\n    // Old school scrollwheel delta\r\n    if (orgEvent.wheelDelta) {\r\n      delta = orgEvent.wheelDelta / 120;\r\n    }\r\n    if (orgEvent.detail) {\r\n      delta = -orgEvent.detail / 3;\r\n    }\r\n\r\n    // New school multidimensional scroll (touchpads) deltas\r\n    deltaY = delta;\r\n\r\n    // Gecko\r\n    if (orgEvent.axis !== undefined && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {\r\n      deltaY = 0;\r\n      deltaX = -1 * delta;\r\n    }\r\n\r\n    // WebKit\r\n    if (orgEvent.wheelDeltaY !== undefined) {\r\n      deltaY = orgEvent.wheelDeltaY / 120;\r\n    }\r\n    if (orgEvent.wheelDeltaX !== undefined) {\r\n      deltaX = -1 * orgEvent.wheelDeltaX / 120;\r\n    }\r\n\r\n    if (typeof onMouseWheel === 'function') {\r\n      onMouseWheel(event, delta, deltaX, deltaY);\r\n    }\r\n  }\r\n\r\n  // initialize Slick.MouseWheel by attaching mousewheel event\r\n  init();\r\n\r\n  // public API\r\n  return { destroy };\r\n}\r\n\r\n/**\r\n * Resizable Class, enables resize functionality for any element\r\n * Code mostly comes from these 2 resources:\r\n *   https://spin.atomicobject.com/2019/11/21/creating-a-resizable-html-element/\r\n *   https://htmldom.dev/make-a-resizable-element/\r\n * available optional options:\r\n *   - resizeableElement: resizable DOM element\r\n *   - resizeableHandleElement: resizable DOM element\r\n *   - onResizeStart: resize start callback\r\n *   - onResize: resizing callback\r\n *   - onResizeEnd: resize ended callback\r\n * @param {Object} options\r\n * @returns - Resizable instance which includes destroy method\r\n * @class Resizable\r\n */\r\nexport function Resizable(options: ResizableOption) {\r\n  const { resizeableElement, resizeableHandleElement, onResizeStart, onResize, onResizeEnd } = options;\r\n  if (!resizeableHandleElement || typeof resizeableHandleElement.addEventListener !== 'function') {\r\n    throw new Error('[Slick.Resizable] You did not provide a valid html element that will be used for the handle to resize.');\r\n  }\r\n\r\n  function init() {\r\n    // add event listeners on the draggable element\r\n    resizeableHandleElement.addEventListener('mousedown', resizeStartHandler);\r\n    resizeableHandleElement.addEventListener('touchstart', resizeStartHandler);\r\n  }\r\n\r\n  function destroy() {\r\n    if (typeof resizeableHandleElement?.removeEventListener === 'function') {\r\n      resizeableHandleElement.removeEventListener('mousedown', resizeStartHandler);\r\n      resizeableHandleElement.removeEventListener('touchstart', resizeStartHandler);\r\n    }\r\n  }\r\n\r\n  function executeResizeCallbackWhenDefined(callback?: Function, e?: MouseEvent | TouchEvent | Touch) {\r\n    if (typeof callback === 'function') {\r\n      return callback(e, { resizeableElement, resizeableHandleElement });\r\n    }\r\n  }\r\n\r\n  function resizeStartHandler(e: MouseEvent | TouchEvent) {\r\n    e.preventDefault();\r\n    const event = (e as TouchEvent).touches ? (e as TouchEvent).changedTouches[0] : e;\r\n    const result = executeResizeCallbackWhenDefined(onResizeStart, event);\r\n    if (result !== false) {\r\n      document.body.addEventListener('mousemove', resizingHandler);\r\n      document.body.addEventListener('mouseup', resizeEndHandler);\r\n      document.body.addEventListener('touchmove', resizingHandler);\r\n      document.body.addEventListener('touchend', resizeEndHandler);\r\n    }\r\n  }\r\n\r\n  function resizingHandler(e: MouseEvent | TouchEvent) {\r\n    if (e.preventDefault && e.type !== 'touchmove') {\r\n      e.preventDefault();\r\n    }\r\n    const event = (e as TouchEvent).touches ? (e as TouchEvent).changedTouches[0] : e;\r\n    if (typeof onResize === 'function') {\r\n      onResize(event, { resizeableElement, resizeableHandleElement });\r\n    }\r\n  }\r\n\r\n  /** Remove all mouse/touch handlers */\r\n  function resizeEndHandler(e: MouseEvent | TouchEvent) {\r\n    const event = (e as TouchEvent).touches ? (e as TouchEvent).changedTouches[0] : e;\r\n    executeResizeCallbackWhenDefined(onResizeEnd, event);\r\n    document.body.removeEventListener('mousemove', resizingHandler);\r\n    document.body.removeEventListener('mouseup', resizeEndHandler);\r\n    document.body.removeEventListener('touchmove', resizingHandler);\r\n    document.body.removeEventListener('touchend', resizeEndHandler);\r\n  }\r\n\r\n  init();\r\n\r\n  // public API\r\n  return { destroy };\r\n}\r\n\r\n// extend Slick namespace on window object when building as iife\r\nif (IIFE_ONLY && window.Slick) {\r\n  Utils.extend(Slick, {\r\n    Draggable,\r\n    MouseWheel,\r\n    Resizable,\r\n  });\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
