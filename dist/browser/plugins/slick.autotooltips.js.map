{
  "version": 3,
  "sources": ["import-ns:../slick.core.js", "../../../src/plugins/slick.autotooltips.js"],
  "sourcesContent": ["// empty string, do nothing", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlickAutoTooltips = void 0;\nvar slick_core_1 = require(\"../slick.core\");\n// for (iife) load Slick methods from global Slick object, or use imports for (esm)\nvar Utils = IIFE_ONLY ? Slick.Utils : slick_core_1.Utils;\n/**\n * AutoTooltips plugin to show/hide tooltips when columns are too narrow to fit content.\n */\nvar SlickAutoTooltips = /** @class */ (function () {\n    /**\n     * Constructor of the SlickGrid 3rd party plugin, it can optionally receive options\n     * @param {boolean} [options.enableForCells=true]        - Enable tooltip for grid cells\n     * @param {boolean} [options.enableForHeaderCells=false] - Enable tooltip for header cells\n     * @param {number}  [options.maxToolTipLength=null]      - The maximum length for a tooltip\n     * @param {boolean} [options.replaceExisting=null]       - Allow preventing custom tooltips from being overwritten by auto tooltips\n     */\n    function SlickAutoTooltips(options) {\n        // --\n        // public API\n        this.pluginName = 'AutoTooltips';\n        this._defaults = {\n            enableForCells: true,\n            enableForHeaderCells: false,\n            maxToolTipLength: undefined,\n            replaceExisting: true\n        };\n        this._options = Utils.extend(true, {}, this._defaults, options);\n    }\n    /**\n     * Initialize plugin.\n     */\n    SlickAutoTooltips.prototype.init = function (grid) {\n        var _a, _b;\n        this._grid = grid;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.enableForCells) {\n            this._grid.onMouseEnter.subscribe(this.handleMouseEnter.bind(this));\n        }\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.enableForHeaderCells) {\n            this._grid.onHeaderMouseEnter.subscribe(this.handleHeaderMouseEnter.bind(this));\n        }\n    };\n    /**\n     * Destroy plugin.\n     */\n    SlickAutoTooltips.prototype.destroy = function () {\n        var _a, _b;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.enableForCells) {\n            this._grid.onMouseEnter.unsubscribe(this.handleMouseEnter.bind(this));\n        }\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.enableForHeaderCells) {\n            this._grid.onHeaderMouseEnter.unsubscribe(this.handleHeaderMouseEnter.bind(this));\n        }\n    };\n    /**\n     * Handle mouse entering grid cell to add/remove tooltip.\n     * @param {MouseEvent} event - The event\n     */\n    SlickAutoTooltips.prototype.handleMouseEnter = function (event) {\n        var _a, _b, _c, _d, _e;\n        var cell = this._grid.getCellFromEvent(event);\n        if (cell) {\n            var node = this._grid.getCellNode(cell.row, cell.cell);\n            var text = void 0;\n            if (this._options && node && (!node.title || ((_a = this._options) === null || _a === void 0 ? void 0 : _a.replaceExisting))) {\n                if (node.clientWidth < node.scrollWidth) {\n                    text = (_c = (_b = node.textContent) === null || _b === void 0 ? void 0 : _b.trim()) !== null && _c !== void 0 ? _c : '';\n                    if (((_d = this._options) === null || _d === void 0 ? void 0 : _d.maxToolTipLength) && text.length > ((_e = this._options) === null || _e === void 0 ? void 0 : _e.maxToolTipLength)) {\n                        text = text.substring(0, this._options.maxToolTipLength - 3) + '...';\n                    }\n                }\n                else {\n                    text = '';\n                }\n                node.title = text;\n            }\n            node = null;\n        }\n    };\n    /**\n     * Handle mouse entering header cell to add/remove tooltip.\n     * @param {MouseEvent} event   - The event\n     * @param {object} args.column - The column definition\n     */\n    SlickAutoTooltips.prototype.handleHeaderMouseEnter = function (event, args) {\n        var _a;\n        var column = args.column;\n        var node;\n        var targetElm = event.target;\n        if (targetElm) {\n            node = targetElm.closest('.slick-header-column');\n            if (node && !(column === null || column === void 0 ? void 0 : column.toolTip)) {\n                node.title = (targetElm.clientWidth < node.clientWidth) ? (_a = column === null || column === void 0 ? void 0 : column.name) !== null && _a !== void 0 ? _a : '' : '';\n            }\n        }\n        node = null;\n    };\n    return SlickAutoTooltips;\n}());\nexports.SlickAutoTooltips = SlickAutoTooltips;\n// extend Slick namespace on window object when building as iife\nif (IIFE_ONLY && window.Slick) {\n    Utils.extend(true, window, {\n        Slick: {\n            AutoTooltips: SlickAutoTooltips\n        }\n    });\n}\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AACA,aAAO,eAAe,SAAS,cAAc,EAAE,OAAO,GAAK,CAAC;AAC5D,cAAQ,oBAAoB;AAC5B,UAAI,eAAe,sBAEf,QAAoB,MAAM,OAI1B;AAAA;AAAA,QAAmC,WAAY;AAQ/C,mBAASA,mBAAkB,SAAS;AAGhC,iBAAK,aAAa,gBAClB,KAAK,YAAY;AAAA,cACb,gBAAgB;AAAA,cAChB,sBAAsB;AAAA,cACtB,kBAAkB;AAAA,cAClB,iBAAiB;AAAA,YACrB,GACA,KAAK,WAAW,MAAM,OAAO,IAAM,CAAC,GAAG,KAAK,WAAW,OAAO;AAAA,UAClE;AAIA,iBAAAA,mBAAkB,UAAU,OAAO,SAAU,MAAM;AAC/C,gBAAI,IAAI;AACR,iBAAK,QAAQ,MACR,QAAK,KAAK,cAAc,QAAQ,OAAO,WAAkB,GAAG,kBAC7D,KAAK,MAAM,aAAa,UAAU,KAAK,iBAAiB,KAAK,IAAI,CAAC,GAEjE,QAAK,KAAK,cAAc,QAAQ,OAAO,WAAkB,GAAG,wBAC7D,KAAK,MAAM,mBAAmB,UAAU,KAAK,uBAAuB,KAAK,IAAI,CAAC;AAAA,UAEtF,GAIAA,mBAAkB,UAAU,UAAU,WAAY;AAC9C,gBAAI,IAAI;AACR,YAAK,QAAK,KAAK,cAAc,QAAQ,OAAO,WAAkB,GAAG,kBAC7D,KAAK,MAAM,aAAa,YAAY,KAAK,iBAAiB,KAAK,IAAI,CAAC,GAEnE,QAAK,KAAK,cAAc,QAAQ,OAAO,WAAkB,GAAG,wBAC7D,KAAK,MAAM,mBAAmB,YAAY,KAAK,uBAAuB,KAAK,IAAI,CAAC;AAAA,UAExF,GAKAA,mBAAkB,UAAU,mBAAmB,SAAU,OAAO;AAC5D,gBAAI,IAAI,IAAI,IAAI,IAAI,IAChB,OAAO,KAAK,MAAM,iBAAiB,KAAK;AAC5C,gBAAI,MAAM;AACN,kBAAI,OAAO,KAAK,MAAM,YAAY,KAAK,KAAK,KAAK,IAAI,GACjD,OAAO;AACX,cAAI,KAAK,YAAY,SAAS,CAAC,KAAK,SAAW,QAAK,KAAK,cAAc,QAAQ,OAAO,WAAkB,GAAG,qBACnG,KAAK,cAAc,KAAK,eACxB,QAAQ,MAAM,KAAK,KAAK,iBAAiB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,OAAO,QAAQ,OAAO,SAAS,KAAK,IAChH,QAAK,KAAK,cAAc,QAAQ,OAAO,WAAkB,GAAG,oBAAqB,KAAK,WAAW,KAAK,KAAK,cAAc,QAAQ,OAAO,SAAS,SAAS,GAAG,sBAC/J,OAAO,KAAK,UAAU,GAAG,KAAK,SAAS,mBAAmB,CAAC,IAAI,UAInE,OAAO,IAEX,KAAK,QAAQ,OAEjB,OAAO;AAAA,YACX;AAAA,UACJ,GAMAA,mBAAkB,UAAU,yBAAyB,SAAU,OAAO,MAAM;AACxE,gBAAI,IACA,SAAS,KAAK,QACd,MACA,YAAY,MAAM;AACtB,YAAI,cACA,OAAO,UAAU,QAAQ,sBAAsB,GAC3C,QAAQ,EAAE,UAAW,QAAqC,OAAO,aACjE,KAAK,QAAS,UAAU,cAAc,KAAK,gBAAgB,KAAK,UAAW,OAA4B,SAAS,OAAO,UAAU,QAAQ,OAAO,SAAS,KAAU,MAG3K,OAAO;AAAA,UACX,GACOA;AAAA,QACX,EAAE;AAAA;AACF,cAAQ,oBAAoB;AAE5B,MAAiB,OAAO,SACpB,MAAM,OAAO,IAAM,QAAQ;AAAA,QACvB,OAAO;AAAA,UACH,cAAc;AAAA,QAClB;AAAA,MACJ,CAAC;AAAA;AAAA;",
  "names": ["SlickAutoTooltips"]
}
