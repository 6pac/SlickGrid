{
  "version": 3,
  "sources": ["../../../src/plugins/slick.state.js"],
  "sourcesContent": ["import { Event as SlickEvent_, Utils as Utils_ } from '../slick.core';\n\n// for (iife) load Slick methods from global Slick object, or use imports for (cjs/esm)\nconst SlickEvent = IIFE_ONLY ? Slick.Event : SlickEvent_;\nconst Utils = IIFE_ONLY ? Slick.Utils : Utils_;\n\n\nvar localStorageWrapper = function () {\n    var localStorage = window.localStorage;\n\n    if (typeof localStorage === 'undefined') {\n      console.error('localStorage is not available. slickgrid statepersistor disabled.');\n    }\n\n    return {\n      get: function(key) {\n        return new Promise((resolve, reject) => {\n          if (!localStorage) {\n            reject(\"missing localStorage\");\n            return\n          }\n          try {\n            var d = localStorage.getItem(key);\n            if (d) {\n              return resolve(JSON.parse(d));\n            }\n            resolve({});\n          } catch (exc) {\n            reject(exc);\n          }\n        });\n      },\n      set: function(key, obj) {\n        if (!localStorage) return;\n        if (typeof obj !== 'undefined') {\n          obj = JSON.stringify(obj);\n        }\n        localStorage.setItem(key, obj);\n      }\n    };\n  };\n\n  var defaults = {\n    key_prefix: \"slickgrid:\",\n    storage: new localStorageWrapper(),\n    scrollRowIntoView: true\n  };\n\nexport function State(options) {\n  options = Utils.extend(true, {}, defaults, options);\n\n    var _grid, _cid,\n      _store = options.storage,\n      onStateChanged = new SlickEvent();\n\n    var userData = {\n      state: null,\n      current: null\n    };\n\n    function init(grid) {\n      _grid = grid;\n      _cid = grid.cid || options.cid;\n      if (_cid) {\n        _grid.onColumnsResized.subscribe(save);\n        _grid.onColumnsReordered.subscribe(save);\n        _grid.onSort.subscribe(save);\n      } else {\n        console.warn(\"grid has no client id. state persisting is disabled.\");\n      }\n    }\n\n    function destroy() {\n      _grid.onSort.unsubscribe(save);\n      _grid.onColumnsReordered.unsubscribe(save);\n      _grid.onColumnsResized.unsubscribe(save);\n      save();\n    }\n\n    function save() {\n      if (_cid && _store) {\n        var state = {\n          sortcols: getSortColumns(),\n          viewport: _grid.getViewport(),\n          columns: getColumns(),\n          userData: null\n        };\n\n        state.userData = userData.current;\n\n        setUserDataFromState(state.userData);\n\n        onStateChanged.notify(state);\n        return _store.set(options.key_prefix + _cid, state);\n      }\n    }\n\n    function restore() {\n      return new Promise((resolve, reject) => {\n        if (!_cid) {\n          reject(\"missing client id\");\n          return;\n        }\n        if (!_store) {\n          reject(\"missing store\");\n          return;\n        }\n\n        _store.get(options.key_prefix + _cid)\n          .then(function success(state) {\n            if (state) {\n              if (state.sortcols) {\n                _grid.setSortColumns(state.sortcols || []);\n              }\n              if (state.viewport && options.scrollRowIntoView) {\n                _grid.scrollRowIntoView(state.viewport.top, true);\n              }\n              if (state.columns) {\n                var defaultColumns = options.defaultColumns;\n                if (defaultColumns) {\n                  var defaultColumnsLookup = {};\n                  defaultColumns.forEach(function (colDef) {\n                    defaultColumnsLookup[colDef.id] = colDef;\n                  });\n\n                  var cols = [];\n                  (state.columns || []).forEach(function (columnDef) {\n                    if (defaultColumnsLookup[columnDef.id]) {\n                      cols.push(Utils.extend(true, {}, defaultColumnsLookup[columnDef.id], {\n                        width: columnDef.width,\n                        headerCssClass: columnDef.headerCssClass\n                      }));\n                    }\n                  });\n\n                  state.columns = cols;\n                }\n\n                _grid.setColumns(state.columns);\n              }\n              setUserDataFromState(state.userData);\n            }\n            resolve(state);\n          })\n          .catch(function (e) {\n            reject(e);\n          })\n      });\n    }\n\n    /**\n     * allows users to add their own data to the grid state\n     * this function does not trigger the save() function, so the actual act of writing the state happens in save()\n     * therefore, it's necessary to call save() function after setting user-data\n     *\n     * @param data\n     * @return {State}\n     */\n    function setUserData(data){\n      userData.current = data;\n\n      return this;\n    }\n\n    /**\n     *\n     * @internal\n     * @param data\n     * @return {State}\n     */\n    function setUserDataFromState(data){\n      userData.state = data;\n      return setUserData(data);\n    }\n\n    /**\n     * returns current value of user-data\n     * @return {Object}\n     */\n    function getUserData(){\n      return userData.current;\n    }\n\n    /**\n\t   * returns user-data found in saved state\n\t   *\n\t   * @return {Object}\n\t   */\n    function getStateUserData(){\n      return userData.state;\n    }\n\n    /**\n     * sets user-data to the value read from state\n     *\n     * @return {State}\n     */\n    function resetUserData(){\n      userData.current = userData.state;\n\n      return this;\n    }\n\n    function getColumns() {\n      return _grid.getColumns().map(function (col) {\n        return {\n          id: col.id,\n          width: col.width\n        };\n      });\n    }\n\n    function getSortColumns() {\n      var sortCols = _grid.getSortColumns();\n      return sortCols;\n    }\n\n    function reset(){\n      _store.set(options.key_prefix + _cid, {});\n      setUserDataFromState(null);\n    }\n    /*\n     *  API\n     */\n  Utils.extend(this, {\n      \"init\": init,\n      \"destroy\": destroy,\n      \"save\": save,\n      \"setUserData\": setUserData,\n      \"resetUserData\": resetUserData,\n      \"getUserData\": getUserData,\n      \"getStateUserData\": getStateUserData,\n      \"restore\": restore,\n      \"onStateChanged\": onStateChanged,\n      \"reset\": reset\n    });\n  }\n\n// extend Slick namespace on window object when building as iife\nif (IIFE_ONLY && window.Slick) {\n  Utils.extend(true, window, {\n    Slick: {\n      State\n    }\n  });\n}\n\n"],
  "mappings": ";;;AAGA,MAAM,aAAyB,MAAM,OAC/B,QAAoB,MAAM,OAG5B,sBAAsB,WAAY;AAClC,QAAI,eAAe,OAAO;AAE1B,WAAI,OAAO,gBAAiB,eAC1B,QAAQ,MAAM,mEAAmE,GAG5E;AAAA,MACL,KAAK,SAAS,KAAK;AACjB,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,cAAI,CAAC,cAAc;AACjB,mBAAO,sBAAsB;AAC7B;AAAA,UACF;AACA,cAAI;AACF,gBAAI,IAAI,aAAa,QAAQ,GAAG;AAChC,gBAAI;AACF,qBAAO,QAAQ,KAAK,MAAM,CAAC,CAAC;AAE9B,oBAAQ,CAAC,CAAC;AAAA,UACZ,SAAS,KAAK;AACZ,mBAAO,GAAG;AAAA,UACZ;AAAA,QACF,CAAC;AAAA,MACH;AAAA,MACA,KAAK,SAAS,KAAK,KAAK;AACtB,QAAK,iBACD,OAAO,OAAQ,gBACjB,MAAM,KAAK,UAAU,GAAG,IAE1B,aAAa,QAAQ,KAAK,GAAG;AAAA,MAC/B;AAAA,IACF;AAAA,EACF,GAEI,WAAW;AAAA,IACb,YAAY;AAAA,IACZ,SAAS,IAAI,oBAAoB;AAAA,IACjC,mBAAmB;AAAA,EACrB;AAEK,WAAS,MAAM,SAAS;AAC7B,cAAU,MAAM,OAAO,IAAM,CAAC,GAAG,UAAU,OAAO;AAEhD,QAAI,OAAO,MACT,SAAS,QAAQ,SACjB,iBAAiB,IAAI,WAAW,GAE9B,WAAW;AAAA,MACb,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AAEA,aAAS,KAAK,MAAM;AAClB,cAAQ,MACR,OAAO,KAAK,OAAO,QAAQ,KACvB,QACF,MAAM,iBAAiB,UAAU,IAAI,GACrC,MAAM,mBAAmB,UAAU,IAAI,GACvC,MAAM,OAAO,UAAU,IAAI,KAE3B,QAAQ,KAAK,sDAAsD;AAAA,IAEvE;AAEA,aAAS,UAAU;AACjB,YAAM,OAAO,YAAY,IAAI,GAC7B,MAAM,mBAAmB,YAAY,IAAI,GACzC,MAAM,iBAAiB,YAAY,IAAI,GACvC,KAAK;AAAA,IACP;AAEA,aAAS,OAAO;AACd,UAAI,QAAQ,QAAQ;AAClB,YAAI,QAAQ;AAAA,UACV,UAAU,eAAe;AAAA,UACzB,UAAU,MAAM,YAAY;AAAA,UAC5B,SAAS,WAAW;AAAA,UACpB,UAAU;AAAA,QACZ;AAEA,qBAAM,WAAW,SAAS,SAE1B,qBAAqB,MAAM,QAAQ,GAEnC,eAAe,OAAO,KAAK,GACpB,OAAO,IAAI,QAAQ,aAAa,MAAM,KAAK;AAAA,MACpD;AAAA,IACF;AAEA,aAAS,UAAU;AACjB,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAI,CAAC,MAAM;AACT,iBAAO,mBAAmB;AAC1B;AAAA,QACF;AACA,YAAI,CAAC,QAAQ;AACX,iBAAO,eAAe;AACtB;AAAA,QACF;AAEA,eAAO,IAAI,QAAQ,aAAa,IAAI,EACjC,KAAK,SAAiB,OAAO;AAC5B,cAAI,OAAO;AAOT,gBANI,MAAM,YACR,MAAM,eAAe,MAAM,YAAY,CAAC,CAAC,GAEvC,MAAM,YAAY,QAAQ,qBAC5B,MAAM,kBAAkB,MAAM,SAAS,KAAK,EAAI,GAE9C,MAAM,SAAS;AACjB,kBAAI,iBAAiB,QAAQ;AAC7B,kBAAI,gBAAgB;AAClB,oBAAI,uBAAuB,CAAC;AAC5B,+BAAe,QAAQ,SAAU,QAAQ;AACvC,uCAAqB,OAAO,EAAE,IAAI;AAAA,gBACpC,CAAC;AAED,oBAAI,OAAO,CAAC;AACZ,iBAAC,MAAM,WAAW,CAAC,GAAG,QAAQ,SAAU,WAAW;AACjD,kBAAI,qBAAqB,UAAU,EAAE,KACnC,KAAK,KAAK,MAAM,OAAO,IAAM,CAAC,GAAG,qBAAqB,UAAU,EAAE,GAAG;AAAA,oBACnE,OAAO,UAAU;AAAA,oBACjB,gBAAgB,UAAU;AAAA,kBAC5B,CAAC,CAAC;AAAA,gBAEN,CAAC,GAED,MAAM,UAAU;AAAA,cAClB;AAEA,oBAAM,WAAW,MAAM,OAAO;AAAA,YAChC;AACA,iCAAqB,MAAM,QAAQ;AAAA,UACrC;AACA,kBAAQ,KAAK;AAAA,QACf,CAAC,EACA,MAAM,SAAU,GAAG;AAClB,iBAAO,CAAC;AAAA,QACV,CAAC;AAAA,MACL,CAAC;AAAA,IACH;AAUA,aAAS,YAAY,MAAK;AACxB,sBAAS,UAAU,MAEZ;AAAA,IACT;AAQA,aAAS,qBAAqB,MAAK;AACjC,sBAAS,QAAQ,MACV,YAAY,IAAI;AAAA,IACzB;AAMA,aAAS,cAAa;AACpB,aAAO,SAAS;AAAA,IAClB;AAOA,aAAS,mBAAkB;AACzB,aAAO,SAAS;AAAA,IAClB;AAOA,aAAS,gBAAe;AACtB,sBAAS,UAAU,SAAS,OAErB;AAAA,IACT;AAEA,aAAS,aAAa;AACpB,aAAO,MAAM,WAAW,EAAE,IAAI,SAAU,KAAK;AAC3C,eAAO;AAAA,UACL,IAAI,IAAI;AAAA,UACR,OAAO,IAAI;AAAA,QACb;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,iBAAiB;AACxB,UAAI,WAAW,MAAM,eAAe;AACpC,aAAO;AAAA,IACT;AAEA,aAAS,QAAO;AACd,aAAO,IAAI,QAAQ,aAAa,MAAM,CAAC,CAAC,GACxC,qBAAqB,IAAI;AAAA,IAC3B;AAIF,UAAM,OAAO,MAAM;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAGF,EAAiB,OAAO,SACtB,MAAM,OAAO,IAAM,QAAQ;AAAA,IACzB,OAAO;AAAA,MACL;AAAA,IACF;AAAA,EACF,CAAC;",
  "names": []
}
