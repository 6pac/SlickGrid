{
  "version": 3,
  "sources": ["../../../src/plugins/slick.cellselectionmodel.js"],
  "sourcesContent": ["import { Event as SlickEvent_, EventData as EventData_, Range as Range_, Utils as Utils_ } from '../slick.core';\nimport { CellRangeSelector as CellRangeSelector_ } from './slick.cellrangeselector';\n\n// for (iife) load Slick methods from global Slick object, or use imports for (cjs/esm)\nconst SlickEvent = IIFE_ONLY ? Slick.Event : SlickEvent_;\nconst EventData = IIFE_ONLY ? Slick.EventData : EventData_;\nconst SlickRange = IIFE_ONLY ? Slick.Range : Range_; // test\nconst CellRangeSelector = IIFE_ONLY ? Slick.CellRangeSelector : CellRangeSelector_;\nconst Utils = IIFE_ONLY ? Slick.Utils : Utils_;\n\nexport function CellSelectionModel(options) {\n    var _grid;\n    var _ranges = [];\n    var _self = this;\n    var _selector;\n\n    if (typeof options === \"undefined\" || typeof options.cellRangeSelector === \"undefined\") {\n      _selector = new CellRangeSelector({\n        \"selectionCss\": {\n          \"border\": \"2px solid black\"\n        }\n      });\n    } else {\n      _selector = options.cellRangeSelector;\n    }\n\n    var _options;\n    var _defaults = {\n      selectActiveCell: true\n    };\n\n    function init(grid) {\n      _options = Utils.extend(true, {}, _defaults, options);\n      _grid = grid;\n      _grid.onActiveCellChanged.subscribe(handleActiveCellChange);\n      _grid.onKeyDown.subscribe(handleKeyDown);\n      grid.registerPlugin(_selector);\n      _selector.onCellRangeSelected.subscribe(handleCellRangeSelected);\n      _selector.onBeforeCellRangeSelected.subscribe(handleBeforeCellRangeSelected);\n    }\n\n    function destroy() {\n      _grid.onActiveCellChanged.unsubscribe(handleActiveCellChange);\n      _grid.onKeyDown.unsubscribe(handleKeyDown);\n      _selector.onCellRangeSelected.unsubscribe(handleCellRangeSelected);\n      _selector.onBeforeCellRangeSelected.unsubscribe(handleBeforeCellRangeSelected);\n      _grid.unregisterPlugin(_selector);\n      if (_selector && _selector.destroy) {\n        _selector.destroy();\n      }\n    }\n\n    function removeInvalidRanges(ranges) {\n      var result = [];\n\n      for (var i = 0; i < ranges.length; i++) {\n        var r = ranges[i];\n        if (_grid.canCellBeSelected(r.fromRow, r.fromCell) && _grid.canCellBeSelected(r.toRow, r.toCell)) {\n          result.push(r);\n        }\n      }\n\n      return result;\n    }\n\n    function rangesAreEqual(range1, range2) {\n      var areDifferent = (range1.length !== range2.length);\n      if (!areDifferent) {\n        for (var i = 0; i < range1.length; i++) {\n          if (\n            range1[i].fromCell !== range2[i].fromCell\n            || range1[i].fromRow !== range2[i].fromRow\n            || range1[i].toCell !== range2[i].toCell\n            || range1[i].toRow !== range2[i].toRow\n          ) {\n            areDifferent = true;\n            break;\n          }\n        }\n      }\n      return !areDifferent;\n    }\n\n    function setSelectedRanges(ranges, caller) {\n      // simple check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n      if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) { return; }\n\n      // if range has not changed, don't fire onSelectedRangesChanged\n      var rangeHasChanged = !rangesAreEqual(_ranges, ranges);\n\n      _ranges = removeInvalidRanges(ranges);\n      if (rangeHasChanged) {\n        // provide extra \"caller\" argument through SlickEventData to avoid breaking pubsub event that only accepts an array of selected range\n        var eventData = new EventData(null, _ranges);\n        Object.defineProperty(eventData, 'detail', { writable: true, configurable: true, value: { caller: caller || \"SlickCellSelectionModel.setSelectedRanges\" } });\n        _self.onSelectedRangesChanged.notify(_ranges, eventData);\n      }\n    }\n\n    function getSelectedRanges() {\n      return _ranges;\n    }\n\n    function refreshSelections() {\n      setSelectedRanges(getSelectedRanges());\n    }\n\n    function handleBeforeCellRangeSelected(e) {\n      if (_grid.getEditorLock().isActive()) {\n        e.stopPropagation();\n        return false;\n      }\n    }\n\n    function handleCellRangeSelected(e, args) {\n      _grid.setActiveCell(args.range.fromRow, args.range.fromCell, false, false, true);\n      setSelectedRanges([args.range]);\n    }\n\n    function handleActiveCellChange(e, args) {\n      if (_options.selectActiveCell && args.row != null && args.cell != null) {\n        setSelectedRanges([new SlickRange(args.row, args.cell)]);\n      }\n      else if (!_options.selectActiveCell) {\n        // clear the previous selection once the cell changes\n        setSelectedRanges([]);\n      }\n    }\n\n    function handleKeyDown(e) {\n      /***\n       * \u041Aey codes\n       * 37 left\n       * 38 up\n       * 39 right\n       * 40 down\n       */\n      var ranges, last;\n      var active = _grid.getActiveCell();\n      var metaKey = e.ctrlKey || e.metaKey;\n\n      if (active && e.shiftKey && !metaKey && !e.altKey &&\n        (e.which == 37 || e.which == 39 || e.which == 38 || e.which == 40)) {\n\n        ranges = getSelectedRanges().slice();\n        if (!ranges.length)\n          ranges.push(new SlickRange(active.row, active.cell));\n\n        // keyboard can work with last range only\n        last = ranges.pop();\n\n        // can't handle selection out of active cell\n        if (!last.contains(active.row, active.cell))\n          last = new SlickRange(active.row, active.cell);\n\n        var dRow = last.toRow - last.fromRow,\n          dCell = last.toCell - last.fromCell,\n          // walking direction\n          dirRow = active.row == last.fromRow ? 1 : -1,\n          dirCell = active.cell == last.fromCell ? 1 : -1;\n\n        if (e.which == 37) {\n          dCell -= dirCell;\n        } else if (e.which == 39) {\n          dCell += dirCell;\n        } else if (e.which == 38) {\n          dRow -= dirRow;\n        } else if (e.which == 40) {\n          dRow += dirRow;\n        }\n\n        // define new selection range\n        var new_last = new SlickRange(active.row, active.cell, active.row + dirRow * dRow, active.cell + dirCell * dCell);\n        if (removeInvalidRanges([new_last]).length) {\n          ranges.push(new_last);\n          var viewRow = dirRow > 0 ? new_last.toRow : new_last.fromRow;\n          var viewCell = dirCell > 0 ? new_last.toCell : new_last.fromCell;\n          _grid.scrollRowIntoView(viewRow);\n          _grid.scrollCellIntoView(viewRow, viewCell);\n        }\n        else\n          ranges.push(last);\n\n        setSelectedRanges(ranges);\n\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n\n  Utils.extend(this, {\n      \"getSelectedRanges\": getSelectedRanges,\n      \"setSelectedRanges\": setSelectedRanges,\n\n      \"refreshSelections\": refreshSelections,\n\n      \"init\": init,\n      \"destroy\": destroy,\n      \"pluginName\": \"CellSelectionModel\",\n\n    \"onSelectedRangesChanged\": new SlickEvent()\n    });\n}\n\n// extend Slick namespace on window object when building as iife\nif (IIFE_ONLY && window.Slick) {\n  Utils.extend(true, window, {\n    Slick: {\n      CellSelectionModel\n    }\n  });\n}\n"],
  "mappings": "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",
  "names": []
}
