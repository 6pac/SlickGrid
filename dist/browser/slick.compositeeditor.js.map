{
  "version": 3,
  "sources": ["import-ns:./slick.core.js", "../../src/slick.compositeeditor.js"],
  "sourcesContent": ["// empty string, do nothing", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlickCompositeEditor = void 0;\nvar slick_core_1 = require(\"./slick.core\");\n// for (iife) load Slick methods from global Slick object, or use imports for (esm)\nvar Utils = IIFE_ONLY ? Slick.Utils : slick_core_1.Utils;\n/**\n * A composite SlickGrid editor factory.\n * Generates an editor that is composed of multiple editors for given columns.\n * Individual editors are provided given containers instead of the original cell.\n * Validation will be performed on all editors individually and the results will be aggregated into one\n * validation result.\n *\n *\n * The returned editor will have its prototype set to CompositeEditor, so you can use the \"instanceof\" check.\n *\n * NOTE:  This doesn't work for detached editors since they will be created and positioned relative to the\n *        active cell and not the provided container.\n *\n * @namespace Slick\n * @class CompositeEditor\n * @constructor\n * @param columns {Array} Column definitions from which editors will be pulled.\n * @param containers {Array} Container HTMLElements in which editors will be placed.\n * @param options {Object} Options hash:\n *  validationFailedMsg     -   A generic failed validation message set on the aggregated validation resuls.\n *  validationMsgPrefix     -   Add an optional prefix to each validation message (only the ones shown in the modal form, not the ones in the \"errors\")\n *  modalType               -   Defaults to \"edit\", modal type can 1 of these 3: (create, edit, mass, mass-selection)\n *  hide                    -   A function to be called when the grid asks the editor to hide itself.\n *  show                    -   A function to be called when the grid asks the editor to show itself.\n *  position                -   A function to be called when the grid asks the editor to reposition itself.\n *  destroy                 -   A function to be called when the editor is destroyed.\n */\nfunction SlickCompositeEditor(columns, containers, options) {\n    var defaultOptions = {\n        modalType: 'edit',\n        validationFailedMsg: 'Some of the fields have failed validation',\n        validationMsgPrefix: null,\n        show: null,\n        hide: null,\n        position: null,\n        destroy: null,\n        formValues: {},\n        editors: {}\n    };\n    var noop = function () { };\n    var firstInvalidEditor = null;\n    options = Slick.Utils.extend({}, defaultOptions, options);\n    function getContainerBox(i) {\n        var _a, _b, _c, _d;\n        var c = containers[i];\n        var offset = Slick.Utils.offset(c);\n        var w = Slick.Utils.width(c);\n        var h = Slick.Utils.height(c);\n        return {\n            top: ((_a = offset === null || offset === void 0 ? void 0 : offset.top) !== null && _a !== void 0 ? _a : 0),\n            left: ((_b = offset === null || offset === void 0 ? void 0 : offset.left) !== null && _b !== void 0 ? _b : 0),\n            bottom: ((_c = offset === null || offset === void 0 ? void 0 : offset.top) !== null && _c !== void 0 ? _c : 0) + (h || 0),\n            right: ((_d = offset === null || offset === void 0 ? void 0 : offset.left) !== null && _d !== void 0 ? _d : 0) + (w || 0),\n            width: w,\n            height: h,\n            visible: true\n        };\n    }\n    function editor(args) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        // @ts-ignore\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var context = this;\n        var editors = [];\n        function init() {\n            var newArgs = {};\n            var idx = 0;\n            while (idx < columns.length) {\n                if (columns[idx].editor) {\n                    var column = columns[idx];\n                    newArgs = Slick.Utils.extend(false, {}, args);\n                    newArgs.container = containers[idx];\n                    newArgs.column = column;\n                    newArgs.position = getContainerBox(idx);\n                    newArgs.commitChanges = noop;\n                    newArgs.cancelChanges = noop;\n                    newArgs.compositeEditorOptions = options;\n                    newArgs.formValues = {};\n                    var currentEditor = new column.editor(newArgs);\n                    options.editors[column.id] = currentEditor; // add every Editor instance refs\n                    editors.push(currentEditor);\n                }\n                idx++;\n            }\n            // focus on first input\n            setTimeout(function () {\n                if (Array.isArray(editors) && editors.length > 0 && typeof editors[0].focus === 'function') {\n                    editors[0].focus();\n                }\n            }, 0);\n        }\n        context.destroy = function () {\n            var _a;\n            var idx = 0;\n            while (idx < editors.length) {\n                editors[idx].destroy();\n                idx++;\n            }\n            (_a = options.destroy) === null || _a === void 0 ? void 0 : _a.call(options);\n            editors = [];\n        };\n        context.focus = function () {\n            // if validation has failed, set the focus to the first invalid editor\n            (firstInvalidEditor || editors[0]).focus();\n        };\n        context.isValueChanged = function () {\n            var idx = 0;\n            while (idx < editors.length) {\n                if (editors[idx].isValueChanged()) {\n                    return true;\n                }\n                idx++;\n            }\n            return false;\n        };\n        context.serializeValue = function () {\n            var serializedValue = [];\n            var idx = 0;\n            while (idx < editors.length) {\n                serializedValue[idx] = editors[idx].serializeValue();\n                idx++;\n            }\n            return serializedValue;\n        };\n        context.applyValue = function (item, state) {\n            var idx = 0;\n            while (idx < editors.length) {\n                editors[idx].applyValue(item, state[idx]);\n                idx++;\n            }\n        };\n        context.loadValue = function (item) {\n            var idx = 0;\n            while (idx < editors.length) {\n                editors[idx].loadValue(item);\n                idx++;\n            }\n        };\n        context.validate = function (target) {\n            var _a, _b;\n            var validationResults;\n            var errors = [];\n            var targetElm = target ? target : null;\n            firstInvalidEditor = null;\n            var idx = 0;\n            while (idx < editors.length) {\n                var columnDef = (_b = (_a = editors[idx].args) === null || _a === void 0 ? void 0 : _a.column) !== null && _b !== void 0 ? _b : {};\n                if (columnDef) {\n                    var validationElm = document.querySelector(\".item-details-validation.editor-\".concat(columnDef.id));\n                    var labelElm = document.querySelector(\".item-details-label.editor-\".concat(columnDef.id));\n                    var editorElm = document.querySelector(\"[data-editorid=\".concat(columnDef.id, \"]\"));\n                    var validationMsgPrefix = (options === null || options === void 0 ? void 0 : options.validationMsgPrefix) || '';\n                    if (!targetElm || Slick.Utils.contains(editorElm, targetElm)) {\n                        validationResults = editors[idx].validate();\n                        if (!validationResults.valid) {\n                            firstInvalidEditor = editors[idx];\n                            errors.push({\n                                index: idx,\n                                editor: editors[idx],\n                                container: containers[idx],\n                                msg: validationResults.msg\n                            });\n                            if (validationElm) {\n                                validationElm.textContent = validationMsgPrefix + validationResults.msg;\n                                labelElm === null || labelElm === void 0 ? void 0 : labelElm.classList.add('invalid');\n                                editorElm === null || editorElm === void 0 ? void 0 : editorElm.classList.add('invalid');\n                            }\n                        }\n                        else if (validationElm) {\n                            validationElm.textContent = '';\n                            editorElm === null || editorElm === void 0 ? void 0 : editorElm.classList.remove('invalid');\n                            labelElm === null || labelElm === void 0 ? void 0 : labelElm.classList.remove('invalid');\n                        }\n                    }\n                    validationElm = null;\n                    labelElm = null;\n                    editorElm = null;\n                }\n                idx++;\n            }\n            targetElm = null;\n            if (errors.length) {\n                return {\n                    valid: false,\n                    msg: options.validationFailedMsg,\n                    errors: errors\n                };\n            }\n            else {\n                return {\n                    valid: true,\n                    msg: ''\n                };\n            }\n        };\n        context.hide = function () {\n            var _a, _b, _c;\n            var idx = 0;\n            while (idx < editors.length) {\n                (_b = (_a = editors[idx]) === null || _a === void 0 ? void 0 : _a.hide) === null || _b === void 0 ? void 0 : _b.call(_a);\n                idx++;\n            }\n            (_c = options === null || options === void 0 ? void 0 : options.hide) === null || _c === void 0 ? void 0 : _c.call(options);\n        };\n        context.show = function () {\n            var _a, _b, _c;\n            var idx = 0;\n            while (idx < editors.length) {\n                (_b = (_a = editors[idx]) === null || _a === void 0 ? void 0 : _a.show) === null || _b === void 0 ? void 0 : _b.call(_a);\n                idx++;\n            }\n            (_c = options === null || options === void 0 ? void 0 : options.show) === null || _c === void 0 ? void 0 : _c.call(options);\n        };\n        context.position = function (box) {\n            var _a;\n            (_a = options === null || options === void 0 ? void 0 : options.position) === null || _a === void 0 ? void 0 : _a.call(options, box);\n        };\n        init();\n    }\n    // so we can do \"editor instanceof Slick.CompositeEditor\n    // @ts-ignore\n    editor.prototype = this;\n    return editor;\n}\nexports.SlickCompositeEditor = SlickCompositeEditor;\n// extend Slick namespace on window object when building as iife\nif (IIFE_ONLY && window.Slick) {\n    Utils.extend(Slick, {\n        CompositeEditor: SlickCompositeEditor\n    });\n}\n"],
  "mappings": "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",
  "names": []
}
