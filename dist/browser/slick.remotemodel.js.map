{
  "version": 3,
  "sources": ["../../src/slick.remotemodel.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SlickRemoteModel = void 0;\n/***\n * A sample AJAX data store implementation.\n * Right now, it's hooked up to load search results from Octopart, but can\n * easily be extended to support any JSONP-compatible backend that accepts paging parameters.\n */\nvar SlickRemoteModel = /** @class */ (function () {\n    function SlickRemoteModel() {\n        // private\n        this.PAGESIZE = 50;\n        this.data = { length: 0 };\n        this.searchstr = '';\n        this.sortcol = null;\n        this.sortdir = 1;\n        this.h_request = null;\n        this.req = null; // ajax request\n        // events\n        this.onDataLoading = new Slick.Event();\n        this.onDataLoaded = new Slick.Event();\n        if (!window.$ || !window.$.jsonp) {\n            throw new Error('SlickRemoteModel requires jQuery jsonp library to be loaded.');\n        }\n        this.init();\n    }\n    SlickRemoteModel.prototype.init = function () { };\n    SlickRemoteModel.prototype.isDataLoaded = function (from, to) {\n        for (var i = from; i <= to; i++) {\n            if (this.data[i] == undefined || this.data[i] == null) {\n                return false;\n            }\n        }\n        return true;\n    };\n    SlickRemoteModel.prototype.clear = function () {\n        for (var key in this.data) {\n            delete this.data[key];\n        }\n        this.data.length = 0;\n    };\n    SlickRemoteModel.prototype.ensureData = function (from, to) {\n        var _this = this;\n        if (this.req) {\n            this.req.abort();\n            for (var i = this.req.fromPage; i <= this.req.toPage; i++)\n                this.data[i * this.PAGESIZE] = undefined;\n        }\n        if (from < 0) {\n            from = 0;\n        }\n        if (this.data.length > 0) {\n            to = Math.min(to, this.data.length - 1);\n        }\n        var fromPage = Math.floor(from / this.PAGESIZE);\n        var toPage = Math.floor(to / this.PAGESIZE);\n        while (this.data[fromPage * this.PAGESIZE] !== undefined && fromPage < toPage) {\n            fromPage++;\n        }\n        while (this.data[toPage * this.PAGESIZE] !== undefined && fromPage < toPage) {\n            toPage--;\n        }\n        if (fromPage > toPage || ((fromPage == toPage) && this.data[fromPage * this.PAGESIZE] !== undefined)) {\n            // TODO:  look-ahead\n            this.onDataLoaded.notify({ from: from, to: to });\n            return;\n        }\n        var url = \"http://octopart.com/api/v3/parts/search?apikey=68b25f31&include[]=short_description&show[]=uid&show[]=manufacturer&show[]=mpn&show[]=brand&show[]=octopart_url&show[]=short_description&q=\" + this.searchstr + \"&start=\" + (fromPage * this.PAGESIZE) + \"&limit=\" + (((toPage - fromPage) * this.PAGESIZE) + this.PAGESIZE);\n        if (this.sortcol != null) {\n            url += (\"&sortby=\" + this.sortcol + ((this.sortdir > 0) ? \"+asc\" : \"+desc\"));\n        }\n        if (this.h_request != null) {\n            clearTimeout(this.h_request);\n        }\n        this.h_request = setTimeout(function () {\n            for (var i = fromPage; i <= toPage; i++)\n                _this.data[i * _this.PAGESIZE] = null; // null indicates a 'requested but not available yet'\n            _this.onDataLoading.notify({ from: from, to: to });\n            _this.req = window.$.jsonp({\n                url: url,\n                callbackParameter: \"callback\",\n                cache: true,\n                success: _this.onSuccess,\n                error: function () { return _this.onError(fromPage, toPage); }\n            });\n            _this.req.fromPage = fromPage;\n            _this.req.toPage = toPage;\n        }, 50);\n    };\n    SlickRemoteModel.prototype.onError = function (fromPage, toPage) {\n        alert(\"error loading pages \" + fromPage + \" to \" + toPage);\n    };\n    SlickRemoteModel.prototype.onSuccess = function (resp) {\n        var from = resp.request.start, to = from + resp.results.length;\n        this.data.length = Math.min(parseInt(resp.hits), 1000); // limitation of the API\n        for (var i = 0; i < resp.results.length; i++) {\n            var item = resp.results[i].item;\n            this.data[from + i] = item;\n            this.data[from + i].index = from + i;\n        }\n        this.req = null;\n        this.onDataLoaded.notify({ from: from, to: to });\n    };\n    SlickRemoteModel.prototype.reloadData = function (from, to) {\n        for (var i = from; i <= to; i++)\n            delete this.data[i];\n        this.ensureData(from, to);\n    };\n    SlickRemoteModel.prototype.setSort = function (column, dir) {\n        this.sortcol = column;\n        this.sortdir = dir;\n        this.clear();\n    };\n    SlickRemoteModel.prototype.setSearch = function (str) {\n        this.searchstr = str;\n        this.clear();\n    };\n    return SlickRemoteModel;\n}());\nexports.SlickRemoteModel = SlickRemoteModel;\n// extend Slick namespace on window object when building as iife\nif (IIFE_ONLY && window.Slick) {\n    window.Slick.Data = window.Slick.Data || {};\n    window.Slick.Data.RemoteModel = SlickRemoteModel;\n}\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,aAAO,eAAe,SAAS,cAAc,EAAE,OAAO,GAAK,CAAC;AAC5D,cAAQ,mBAAmB;AAM3B,UAAI;AAAA;AAAA,QAAkC,WAAY;AAC9C,mBAASA,oBAAmB;AAYxB,gBAVA,KAAK,WAAW,IAChB,KAAK,OAAO,EAAE,QAAQ,EAAE,GACxB,KAAK,YAAY,IACjB,KAAK,UAAU,MACf,KAAK,UAAU,GACf,KAAK,YAAY,MACjB,KAAK,MAAM,MAEX,KAAK,gBAAgB,IAAI,MAAM,MAAM,GACrC,KAAK,eAAe,IAAI,MAAM,MAAM,GAChC,CAAC,OAAO,KAAK,CAAC,OAAO,EAAE;AACvB,oBAAM,IAAI,MAAM,8DAA8D;AAElF,iBAAK,KAAK;AAAA,UACd;AACA,iBAAAA,kBAAiB,UAAU,OAAO,WAAY;AAAA,UAAE,GAChDA,kBAAiB,UAAU,eAAe,SAAU,MAAM,IAAI;AAC1D,qBAAS,IAAI,MAAM,KAAK,IAAI;AACxB,kBAAI,KAAK,KAAK,CAAC,KAAK,QAAa,KAAK,KAAK,CAAC,KAAK;AAC7C,uBAAO;AAGf,mBAAO;AAAA,UACX,GACAA,kBAAiB,UAAU,QAAQ,WAAY;AAC3C,qBAAS,OAAO,KAAK;AACjB,qBAAO,KAAK,KAAK,GAAG;AAExB,iBAAK,KAAK,SAAS;AAAA,UACvB,GACAA,kBAAiB,UAAU,aAAa,SAAU,MAAM,IAAI;AACxD,gBAAI,QAAQ;AACZ,gBAAI,KAAK,KAAK;AACV,mBAAK,IAAI,MAAM;AACf,uBAAS,IAAI,KAAK,IAAI,UAAU,KAAK,KAAK,IAAI,QAAQ;AAClD,qBAAK,KAAK,IAAI,KAAK,QAAQ,IAAI;AAAA,YACvC;AACA,YAAI,OAAO,MACP,OAAO,IAEP,KAAK,KAAK,SAAS,MACnB,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAI1C,qBAFI,WAAW,KAAK,MAAM,OAAO,KAAK,QAAQ,GAC1C,SAAS,KAAK,MAAM,KAAK,KAAK,QAAQ,GACnC,KAAK,KAAK,WAAW,KAAK,QAAQ,MAAM,UAAa,WAAW;AACnE;AAEJ,mBAAO,KAAK,KAAK,SAAS,KAAK,QAAQ,MAAM,UAAa,WAAW;AACjE;AAEJ,gBAAI,WAAW,UAAY,YAAY,UAAW,KAAK,KAAK,WAAW,KAAK,QAAQ,MAAM,QAAY;AAElG,mBAAK,aAAa,OAAO,EAAE,MAAY,GAAO,CAAC;AAC/C;AAAA,YACJ;AACA,gBAAI,MAAM,+LAA+L,KAAK,YAAY,YAAa,WAAW,KAAK,WAAY,cAAe,SAAS,YAAY,KAAK,WAAY,KAAK;AAC7T,YAAI,KAAK,WAAW,SAChB,OAAQ,aAAa,KAAK,WAAY,KAAK,UAAU,IAAK,SAAS,WAEnE,KAAK,aAAa,QAClB,aAAa,KAAK,SAAS,GAE/B,KAAK,YAAY,WAAW,WAAY;AACpC,uBAASC,KAAI,UAAUA,MAAK,QAAQA;AAChC,sBAAM,KAAKA,KAAI,MAAM,QAAQ,IAAI;AACrC,oBAAM,cAAc,OAAO,EAAE,MAAY,GAAO,CAAC,GACjD,MAAM,MAAM,OAAO,EAAE,MAAM;AAAA,gBACvB;AAAA,gBACA,mBAAmB;AAAA,gBACnB,OAAO;AAAA,gBACP,SAAS,MAAM;AAAA,gBACf,OAAO,WAAY;AAAE,yBAAO,MAAM,QAAQ,UAAU,MAAM;AAAA,gBAAG;AAAA,cACjE,CAAC,GACD,MAAM,IAAI,WAAW,UACrB,MAAM,IAAI,SAAS;AAAA,YACvB,GAAG,EAAE;AAAA,UACT,GACAD,kBAAiB,UAAU,UAAU,SAAU,UAAU,QAAQ;AAC7D,kBAAM,yBAAyB,WAAW,SAAS,MAAM;AAAA,UAC7D,GACAA,kBAAiB,UAAU,YAAY,SAAU,MAAM;AACnD,gBAAI,OAAO,KAAK,QAAQ,OAAO,KAAK,OAAO,KAAK,QAAQ;AACxD,iBAAK,KAAK,SAAS,KAAK,IAAI,SAAS,KAAK,IAAI,GAAG,GAAI;AACrD,qBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC1C,kBAAI,OAAO,KAAK,QAAQ,CAAC,EAAE;AAC3B,mBAAK,KAAK,OAAO,CAAC,IAAI,MACtB,KAAK,KAAK,OAAO,CAAC,EAAE,QAAQ,OAAO;AAAA,YACvC;AACA,iBAAK,MAAM,MACX,KAAK,aAAa,OAAO,EAAE,MAAY,GAAO,CAAC;AAAA,UACnD,GACAA,kBAAiB,UAAU,aAAa,SAAU,MAAM,IAAI;AACxD,qBAAS,IAAI,MAAM,KAAK,IAAI;AACxB,qBAAO,KAAK,KAAK,CAAC;AACtB,iBAAK,WAAW,MAAM,EAAE;AAAA,UAC5B,GACAA,kBAAiB,UAAU,UAAU,SAAU,QAAQ,KAAK;AACxD,iBAAK,UAAU,QACf,KAAK,UAAU,KACf,KAAK,MAAM;AAAA,UACf,GACAA,kBAAiB,UAAU,YAAY,SAAU,KAAK;AAClD,iBAAK,YAAY,KACjB,KAAK,MAAM;AAAA,UACf,GACOA;AAAA,QACX,EAAE;AAAA;AACF,cAAQ,mBAAmB;AAE3B,MAAiB,OAAO,UACpB,OAAO,MAAM,OAAO,OAAO,MAAM,QAAQ,CAAC,GAC1C,OAAO,MAAM,KAAK,cAAc;AAAA;AAAA;",
  "names": ["SlickRemoteModel", "i"]
}
