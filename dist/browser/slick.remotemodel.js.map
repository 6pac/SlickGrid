{
  "version": 3,
  "sources": ["../../src/slick.remotemodel.ts"],
  "sourcesContent": ["import type { ColumnSort } from './models/index';\n\n/***\n * A sample AJAX data store implementation.\n * Right now, it's hooked up to load search results from Octopart, but can\n * easily be extended to support any JSONP-compatible backend that accepts paging parameters.\n */\nexport class SlickRemoteModel {\n  // private\n  protected PAGESIZE = 50;\n  protected data: any = { length: 0 };\n  protected searchstr = '';\n  protected sortcol: ColumnSort | null = null;\n  protected sortdir = 1;\n  protected h_request: any = null;\n  protected req: any = null; // ajax request\n\n  // events\n  onDataLoading = new Slick.Event();\n  onDataLoaded = new Slick.Event();\n\n  constructor() {\n    if (!(window.$ || window.jQuery) || !window.$.jsonp) {\n      throw new Error('SlickRemoteModel requires both jQuery and jQuery jsonp library to be loaded.');\n    }\n    this.init();\n  }\n\n  init() { }\n\n  isDataLoaded(from: number, to: number) {\n    for (let i = from; i <= to; i++) {\n      if (this.data[i] === undefined || this.data[i] === null) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  clear() {\n    for (const key in this.data) {\n      delete this.data[key];\n    }\n    this.data.length = 0;\n  }\n\n  ensureData(from: number, to: number) {\n    if (this.req) {\n      this.req.abort();\n      for (let i = this.req.fromPage; i <= this.req.toPage; i++) {\n        this.data[i * this.PAGESIZE] = undefined;\n      }\n    }\n\n    if (from < 0) {\n      from = 0;\n    }\n\n    if (this.data.length > 0) {\n      to = Math.min(to, this.data.length - 1);\n    }\n\n    let fromPage = Math.floor(from / this.PAGESIZE);\n    let toPage = Math.floor(to / this.PAGESIZE);\n\n    while (this.data[fromPage * this.PAGESIZE] !== undefined && fromPage < toPage) {\n      fromPage++;\n    }\n\n    while (this.data[toPage * this.PAGESIZE] !== undefined && fromPage < toPage) {\n      toPage--;\n    }\n\n    if (fromPage > toPage || ((fromPage === toPage) && this.data[fromPage * this.PAGESIZE] !== undefined)) {\n      // TODO:  look-ahead\n      this.onDataLoaded.notify({ from, to });\n      return;\n    }\n\n    let url = \"http://octopart.com/api/v3/parts/search?apikey=68b25f31&include[]=short_description&show[]=uid&show[]=manufacturer&show[]=mpn&show[]=brand&show[]=octopart_url&show[]=short_description&q=\" + this.searchstr + \"&start=\" + (fromPage * this.PAGESIZE) + \"&limit=\" + (((toPage - fromPage) * this.PAGESIZE) + this.PAGESIZE);\n\n    if (this.sortcol !== null) {\n      url += (\"&sortby=\" + this.sortcol + ((this.sortdir > 0) ? \"+asc\" : \"+desc\"));\n    }\n\n    if (this.h_request !== null) {\n      clearTimeout(this.h_request);\n    }\n\n    this.h_request = setTimeout(() => {\n      for (let i = fromPage; i <= toPage; i++) {\n        this.data[i * this.PAGESIZE] = null; // null indicates a 'requested but not available yet'\n      }\n      this.onDataLoading.notify({ from, to });\n\n      this.req = window.$.jsonp({\n        url,\n        callbackParameter: \"callback\",\n        cache: true,\n        success: this.onSuccess,\n        error: () => this.onError(fromPage, toPage)\n      });\n      this.req.fromPage = fromPage;\n      this.req.toPage = toPage;\n    }, 50);\n  }\n\n  protected onError(fromPage: number | string, toPage: number | string) {\n    alert(\"error loading pages \" + fromPage + \" to \" + toPage);\n  }\n\n  protected onSuccess(resp: any) {\n    const from = resp.request.start, to = from + resp.results.length;\n    this.data.length = Math.min(parseInt(resp.hits), 1000); // limitation of the API\n\n    for (let i = 0; i < resp.results.length; i++) {\n      const item = resp.results[i].item;\n      this.data[from + i] = item;\n      this.data[from + i].index = from + i;\n    }\n\n    this.req = null;\n    this.onDataLoaded.notify({ from, to });\n  }\n\n  reloadData(from: number, to: number) {\n    for (let i = from; i <= to; i++) {\n      delete this.data[i];\n    }\n    this.ensureData(from, to);\n  }\n\n\n  setSort(column: ColumnSort, dir: number) {\n    this.sortcol = column;\n    this.sortdir = dir;\n    this.clear();\n  }\n\n  setSearch(str: string) {\n    this.searchstr = str;\n    this.clear();\n  }\n}\n\n// extend Slick namespace on window object when building as iife\nif (IIFE_ONLY && window.Slick) {\n  window.Slick.Data = window.Slick.Data || {};\n  window.Slick.Data.RemoteModel = SlickRemoteModel;\n}"],
  "mappings": "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",
  "names": []
}
