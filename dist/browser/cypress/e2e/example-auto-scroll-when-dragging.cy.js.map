{
  "version": 3,
  "sources": ["../../../../cypress/e2e/example-auto-scroll-when-dragging.cy.ts"],
  "sourcesContent": ["/// <reference types=\"cypress\" />\n\nimport { getScrollDistanceWhenDragOutsideGrid } from '../support/drag'\n\ndescribe('Example - Auto scroll when dragging', { retries: 1 }, () => {\n  // NOTE:  everywhere there's a * 2 is because we have a top+bottom (frozen rows) containers even after Unfreeze Columns/Rows\n  const cellWidth = 80;\n  const cellHeight = 25;\n  const scrollbarDimension = 17;\n\n  const fullTitles = ['#', 'Title', 'Duration', '% Complete', 'Start', 'Finish', 'Cost', 'Effort Driven'];\n\n  for (var i = 0; i < 30; i++) {\n    fullTitles.push(\"Mock\" + i);\n  }\n\n  it('should load Example', () => {\n    cy.visit(`${Cypress.config('baseExampleUrl')}/example-auto-scroll-when-dragging.html`);\n  });\n\n  it('should have exact column titles on grid', () => {\n    cy.get('#myGrid')\n      .find('.slick-header-columns')\n      .children()\n      .each(($child, index) => expect($child.text()).to.eq(fullTitles[index]));\n    cy.get('#myGrid2')\n      .find('.slick-header-columns')\n      .children()\n      .each(($child, index) => expect($child.text()).to.eq(fullTitles[index]));\n  });\n\n  it('should select border shown in cell selection model, and hidden in row selection model when dragging', { scrollBehavior: false }, function () {\n    cy.getCell(0, 1, '', { parentSelector: \"#myGrid\", rowHeight: cellHeight })\n      .as('cell1')\n      .dragStart();\n\n    cy.get('#myGrid .slick-range-decorator').should('be.exist').and('have.css', 'border-color').and('not.equal', 'none');\n    cy.get('@cell1')\n      .dragCell(0, 5)\n      .dragEnd('#myGrid');\n    cy.get('#myGrid .slick-range-decorator').should('not.be.exist');\n    cy.get('#myGrid .slick-cell.selected').should('have.length', 6);\n\n    cy.getCell(0, 1, '', { parentSelector: \"#myGrid2\", rowHeight: cellHeight })\n      .as('cell2')\n      .dragStart();\n    cy.get('#myGrid2 .slick-range-decorator').should('be.exist').and('have.css', 'border-style').and('equal', 'none');\n    cy.get('@cell2')\n      .dragCell(5, 1)\n      .dragEnd('#myGrid2');\n    cy.get('#myGrid2 .slick-range-decorator').should('not.be.exist');\n    cy.get('#myGrid2 .slick-row:nth-child(-n+6)')\n      .children(':not(.cell-unselectable)')\n      .each(($child) => expect($child.attr(\"class\")).to.include('selected'));\n  })\n\n  function testScroll() {\n    return getScrollDistanceWhenDragOutsideGrid(\"#myGrid\", 'topLeft', 'right', 0, 1).then(cellScrollDistance => {\n      return getScrollDistanceWhenDragOutsideGrid(\"#myGrid2\", 'topLeft', 'bottom', 0, 1).then(rowScrollDistance => {\n        return cy.wrap({\n          cell: {\n            scrollBefore: cellScrollDistance.scrollLeftBefore,\n            scrollAfter: cellScrollDistance.scrollLeftAfter\n          },\n          row: {\n            scrollBefore: rowScrollDistance.scrollTopBefore,\n            scrollAfter: rowScrollDistance.scrollTopAfter\n          }\n        });\n      });\n    });\n  }\n\n  it('should auto scroll take effect to display the selecting element when dragging', { scrollBehavior: false }, function () {\n    testScroll().then(scrollDistance => {\n      expect(scrollDistance.cell.scrollBefore).to.be.lessThan(scrollDistance.cell.scrollAfter);\n      expect(scrollDistance.row.scrollBefore).to.be.lessThan(scrollDistance.row.scrollAfter);\n    });\n\n    cy.get('#isAutoScroll').click();\n    cy.get('#setOptions').click();\n\n    testScroll().then(scrollDistance => {\n      expect(scrollDistance.cell.scrollBefore).to.be.equal(scrollDistance.cell.scrollAfter);\n      expect(scrollDistance.row.scrollBefore).to.be.equal(scrollDistance.row.scrollAfter);\n    });\n\n    cy.get('#setDefaultOption').click();\n    cy.get('#isAutoScroll').should('have.value', 'on')\n  })\n\n  function getIntervalUntilRow16Displayed(selector, px) {\n    const viewportSelector = (selector + ' .slick-viewport:first');\n    cy.getCell(0, 1, '', { parentSelector: selector, rowHeight: cellHeight })\n      .dragStart();\n    return cy.get(viewportSelector).invoke('scrollTop').then(scrollBefore => {\n      cy.dragOutside('bottom', 0, px, { parentSelector: selector, rowHeight: cellHeight });\n\n      const start = performance.now();\n      cy.get(selector + ' .slick-row:not(.slick-group) >.cell-unselectable')\n        .contains('16', { timeout: 10000 }) // actually #15 will be selected\n        .should('not.be.hidden');\n\n      return cy.get(viewportSelector).invoke('scrollTop').then(scrollAfter => {\n        cy.dragEnd(selector);\n        var interval = performance.now() - start;\n        expect(scrollBefore).to.be.lessThan(scrollAfter);\n        cy.get(viewportSelector).scrollTo(0, 0, { ensureScrollable: false });\n        return cy.wrap(interval);\n      });\n    });\n  }\n\n  function testInterval(px) {\n    return getIntervalUntilRow16Displayed(\"#myGrid\", px).then(intervalCell => {\n      return getIntervalUntilRow16Displayed(\"#myGrid2\", px).then(intervalRow => {\n        return cy.wrap({\n          cell: intervalCell,\n          row: intervalRow\n        });\n      });\n    });\n  }\n\n  it('should MIN interval take effect when auto scroll: 30ms -> 90ms', { scrollBehavior: false }, function () {\n    // By default the MIN interval to show next cell is 30ms.\n    testInterval(300).then(defaultInterval => {\n\n      // Setting the interval to 90ms (3 times of the default).\n      cy.get('#minIntervalToShowNextCell').type('{selectall}90'); // 30ms -> 90ms\n      cy.get('#setOptions').click();\n\n      // Ideally if we scrolling to same row by MIN interval, the used time should be 3 times slower than default.\n      // Considering the threshold, 1.5 times slower than default is expected\n      testInterval(300).then(newInterval => {\n\n        // max scrolling speed is slower than before\n        expect(newInterval.cell).to.be.greaterThan(1.5 * defaultInterval.cell);\n        expect(newInterval.row).to.be.greaterThan(1.5 * defaultInterval.row);\n\n        cy.get('#setDefaultOption').click();\n        cy.get('#minIntervalToShowNextCell').should('have.value', '30');\n      })\n    })\n  })\n\n  it.skip('should MAX interval take effect when auto scroll: 600ms -> 200ms', { scrollBehavior: false }, function () {\n    // By default the MAX interval to show next cell is 600ms.\n    testInterval(0).then(defaultInterval => {\n\n      // Setting the interval to 200ms (1/3 of the default).\n      cy.get('#maxIntervalToShowNextCell').type('{selectall}200'); // 600ms -> 200ms\n      cy.get('#setOptions').click();\n\n      // Ideally if we scrolling to same row by MAX interval, the used time should be 3 times faster than default.\n      // Considering the threshold, 1.5 times faster than default is expected\n      testInterval(0).then(newInterval => {\n\n        // min scrolling speed is quicker than before\n        expect(1.5 * newInterval.cell).to.be.lessThan(defaultInterval.cell);\n        expect(1.5 * newInterval.row).to.be.lessThan(defaultInterval.row);\n\n        cy.get('#setDefaultOption').click();\n        cy.get('#maxIntervalToShowNextCell').should('have.value', '600');\n      })\n    })\n  })\n\n  it('should Delay per Px take effect when auto scroll: 5ms/px -> 50ms/px', { scrollBehavior: false }, function () {\n    const allowedDiff = 0.5;\n\n    // By default the Delay per Px is 5ms/px.\n    testInterval(scrollbarDimension).then(defaultInterval => {\n\n      // Setting to 50ms/px (10 times of the default).\n      cy.get('#accelerateInterval').type('{selectall}50'); // 5ms/px -> 50ms/px\n      cy.get('#setOptions').click();\n\n      // Ideally if we scrolling to same row, and set cursor to 17px, the new interval will be set to MIN interval (Math.max(30, 600 - 50 * 17) = 30ms),\n      // and the used time should be around 17 times faster than default.\n      // Considering the threshold, 5 times faster than default is expected\n      testInterval(scrollbarDimension).then(newInterval => {\n\n        // scrolling speed is quicker than before\n        expect((5 - allowedDiff) * newInterval.cell).to.be.lessThan(defaultInterval.cell);\n        expect((5 - allowedDiff) * newInterval.row).to.be.lessThan(defaultInterval.row);\n\n        cy.get('#setDefaultOption').click();\n        cy.get('#accelerateInterval').should('have.value', '5');\n      })\n    })\n  })\n\n  it('should have a frozen grid with 4 containers with 2 columns on the left and 3 rows on the top after click Set/Clear Frozen button', () => {\n    cy.get('#myGrid [style=\"top:0px\"]').should('have.length', 1);\n    cy.get('#myGrid2 [style=\"top:0px\"]').should('have.length', 1);\n\n    cy.get('#toggleFrozen').click();\n\n    cy.get('#myGrid [style=\"top:0px\"]').should('have.length', 2 * 2);\n    cy.get('#myGrid2 [style=\"top:0px\"]').should('have.length', 2 * 2);\n    cy.get('#myGrid .grid-canvas-left > [style=\"top:0px\"]').children().should('have.length', 2 * 2);\n    cy.get('#myGrid2 .grid-canvas-left > [style=\"top:0px\"]').children().should('have.length', 2 * 2);\n    cy.get('#myGrid .grid-canvas-top').children().should('have.length', 3 * 2);\n    cy.get('#myGrid2 .grid-canvas-top').children().should('have.length', 3 * 2);\n  });\n\n  function resetScrollInFrozen() {\n    cy.get('#myGrid .slick-viewport:last').scrollTo(0, 0);\n    cy.get('#myGrid2 .slick-viewport:last').scrollTo(0, 0);\n  }\n\n  it('should auto scroll to display the selecting element when dragging in frozen grid', { scrollBehavior: false }, () => {\n    // top left - to bottomRight\n    getScrollDistanceWhenDragOutsideGrid('#myGrid', 'topLeft', 'bottomRight', 0, 1).then(result => {\n      expect(result.scrollTopBefore).to.be.equal(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.equal(result.scrollLeftAfter);\n    });\n    getScrollDistanceWhenDragOutsideGrid('#myGrid2', 'topLeft', 'bottomRight', 0, 1).then(result => {\n      expect(result.scrollTopBefore).to.be.equal(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.equal(result.scrollLeftAfter);\n    });\n\n    // top right - to bottomRight\n    getScrollDistanceWhenDragOutsideGrid('#myGrid', 'topRight', 'bottomRight', 0, 0).then(result => {\n      expect(result.scrollTopBefore).to.be.equal(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.lessThan(result.scrollLeftAfter);\n    });\n    getScrollDistanceWhenDragOutsideGrid('#myGrid2', 'topRight', 'bottomRight', 0, 0).then(result => {\n      expect(result.scrollTopBefore).to.be.equal(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.lessThan(result.scrollLeftAfter);\n    });\n    resetScrollInFrozen();\n\n    // bottom left - to bottomRight\n    getScrollDistanceWhenDragOutsideGrid('#myGrid', 'bottomLeft', 'bottomRight', 0, 1).then(result => {\n      expect(result.scrollTopBefore).to.be.lessThan(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.equal(result.scrollLeftAfter);\n    });\n    getScrollDistanceWhenDragOutsideGrid('#myGrid2', 'bottomLeft', 'bottomRight', 0, 1).then(result => {\n      expect(result.scrollTopBefore).to.be.lessThan(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.equal(result.scrollLeftAfter);\n    });\n    resetScrollInFrozen();\n\n    // bottom right - to bottomRight\n    getScrollDistanceWhenDragOutsideGrid('#myGrid', 'bottomRight', 'bottomRight', 0, 0).then(result => {\n      expect(result.scrollTopBefore).to.be.lessThan(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.lessThan(result.scrollLeftAfter);\n    });\n    getScrollDistanceWhenDragOutsideGrid('#myGrid2', 'bottomRight', 'bottomRight', 0, 0).then(result => {\n      expect(result.scrollTopBefore).to.be.lessThan(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.lessThan(result.scrollLeftAfter);\n    });\n    resetScrollInFrozen();\n    cy.get('#myGrid .slick-viewport-bottom.slick-viewport-right').scrollTo(cellWidth * 3, cellHeight * 3);\n    cy.get('#myGrid2 .slick-viewport-bottom.slick-viewport-right').scrollTo(cellWidth * 3, cellHeight * 3);\n\n    // bottom right - to topLeft\n    getScrollDistanceWhenDragOutsideGrid('#myGrid', 'bottomRight', 'topLeft', 8, 4, 100).then(result => {\n      expect(result.scrollTopBefore).to.be.greaterThan(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.greaterThan(result.scrollLeftAfter);\n    });\n    getScrollDistanceWhenDragOutsideGrid('#myGrid2', 'bottomRight', 'topLeft', 8, 4, 100).then(result => {\n      expect(result.scrollTopBefore).to.be.greaterThan(result.scrollTopAfter);\n      expect(result.scrollLeftBefore).to.be.greaterThan(result.scrollLeftAfter);\n    });\n    resetScrollInFrozen();\n  });\n\n  it('should have a frozen & grouping by Duration grid after click Set/Clear grouping by Duration button', { scrollBehavior: false }, () => {\n    cy.get('#toggleGroup').trigger('click');\n    cy.get('#myGrid [style=\"top:0px\"]').should('have.length', 2 * 2);\n    cy.get('#myGrid2 [style=\"top:0px\"]').should('have.length', 2 * 2);\n    cy.get('#myGrid .grid-canvas-top.grid-canvas-left').contains('Duration');\n    cy.get('#myGrid2 .grid-canvas-top.grid-canvas-left').contains('Duration');\n  });\n\n  function testDragInGrouping(selector) {\n    cy.getCell(7, 0, 'bottomRight', { parentSelector: selector, rowHeight: cellHeight })\n      .dragStart();\n    cy.get(selector + ' .slick-viewport:last').as('viewport').invoke('scrollTop').then(scrollBefore => {\n      cy.dragOutside('bottom', 400, 300, { parentSelector: selector, rowHeight: cellHeight });\n      cy.get('@viewport').invoke('scrollTop').then(scrollAfter => {\n        expect(scrollBefore).to.be.lessThan(scrollAfter);\n        cy.dragEnd(selector);\n        cy.get(selector + ' [style=\"top:350px\"].slick-group').should('not.be.hidden');;\n      })\n    })\n  }\n\n  it('should auto scroll to display the selecting element even unselectable cell exist in grouping grid', { scrollBehavior: false }, () => {\n    testDragInGrouping('#myGrid');\n    testDragInGrouping('#myGrid2');\n  });\n\n  it('should reset to default grid when click Set/Clear Frozen button and Set/Clear grouping button', () => {\n    cy.get('#toggleFrozen').trigger('click');\n    cy.get('#toggleGroup').trigger('click');\n    cy.get('#myGrid [style=\"top:0px\"]').should('have.length', 1);\n    cy.get('#myGrid2 [style=\"top:0px\"]').should('have.length', 1);\n  });\n\n});\n"],
  "mappings": "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",
  "names": []
}
