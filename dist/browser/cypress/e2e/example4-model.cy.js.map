{
  "version": 3,
  "sources": ["../../../../cypress/e2e/example4-model.cy.ts"],
  "sourcesContent": ["/// <reference types=\"cypress\" />\n\ndescribe('Example 4 - Model', () => {\n  const titles = ['#', 'Title', 'Duration', '% Complete', 'Start', 'Finish', 'Effort Driven'];\n\n  beforeEach(() => {\n    // create a console.log spy for later use\n    cy.window().then((win) => {\n      cy.spy(win.console, \"log\");\n    });\n  });\n\n  it('should display Example title', () => {\n    cy.visit(`${Cypress.config('baseExampleUrl')}/example4-model.html`);\n    cy.get('h2').contains('Demonstrates');\n    cy.get('h2 + ul > li').first().contains('a filtered Model (DataView) as a data source instead of a simple array');\n  });\n\n  it('should have exact Column Titles in the grid', () => {\n    cy.get('#myGrid')\n      .find('.slick-header-columns')\n      .children()\n      .each(($child, index) => expect($child.text()).to.eq(titles[index]));\n  });\n\n  it('should display the text \"Showing all 50000 rows\" without Pagination', () => {\n    const expectedRows = ['Task 0', 'Task 1', 'Task 2', 'Task 3', 'Task 4'];\n\n    cy.get('.slick-pager-status')\n      .contains('Showing all 50000 rows');\n\n    cy.get('#myGrid')\n      .find('.slick-row')\n      .each(($row, index) => {\n        if (index > expectedRows.length - 1) {\n          return;\n        }\n        cy.wrap($row).children('.slick-cell:nth(1)')\n          .first()\n          .should('contain', expectedRows[index]);\n      });\n  });\n\n  it('Should display \"Showing page 1 of 1000\" text after changing Pagination to 50 items per page', () => {\n    cy.get('.sgi-lightbulb')\n      .click();\n\n    cy.get('.slick-pager-settings-expanded')\n      .should('be.visible');\n\n    cy.get('.slick-pager-settings-expanded')\n      .contains('50')\n      .click();\n\n    cy.get('.slick-pager-status')\n      .contains('Showing page 1 of 1000');\n\n    cy.window().then((win) => {\n      expect(win.console.log).to.have.callCount(2);\n      expect(win.console.log).to.be.calledWith('on Before Paging Info Changed - Previous Paging:: ', { pageSize: 0, pageNum: 0, totalRows: 50000, totalPages: 1 });\n      expect(win.console.log).to.be.calledWith('on After Paging Info Changed - New Paging:: ', { pageSize: 50, pageNum: 0, totalRows: 50000, totalPages: 1000 });\n    });\n  });\n\n  it('Should display \"Showing page 2 of 1000\" text after clicking on next page', () => {\n    const expectedRows = ['Task 50', 'Task 51', 'Task 52', 'Task 53', 'Task 54'];\n\n    cy.get('.sgi-chevron-start.sgi-state-disabled');\n    cy.get('.sgi-chevron-left.sgi-state-disabled');\n\n    cy.get('.sgi-chevron-right')\n      .click();\n\n    cy.get('.slick-pager-status')\n      .contains('Showing page 2 of 1000');\n\n    cy.get('#myGrid')\n      .find('.slick-row')\n      .each(($row, index) => {\n        if (index > expectedRows.length - 1) {\n          return;\n        }\n        cy.wrap($row).children('.slick-cell:nth(1)')\n          .first()\n          .should('contain', expectedRows[index]);\n      });\n\n    cy.window().then((win) => {\n      expect(win.console.log).to.have.callCount(2);\n      expect(win.console.log).to.be.calledWith('on Before Paging Info Changed - Previous Paging:: ', { pageSize: 50, pageNum: 0, totalRows: 50000, totalPages: 1000 });\n      expect(win.console.log).to.be.calledWith('on After Paging Info Changed - New Paging:: ', { pageSize: 50, pageNum: 1, totalRows: 50000, totalPages: 1000 });\n    });\n  });\n\n  it('Should display \"Showing page 1000 of 1000\" text after clicking on last page', () => {\n    const expectedRows = ['Task 49950', 'Task 49951', 'Task 49952', 'Task 49953', 'Task 49954'];\n\n    cy.get('.sgi-chevron-end')\n      .click();\n\n    cy.get('.slick-pager-status')\n      .contains('Showing page 1000 of 1000');\n\n    cy.get('#myGrid')\n      .find('.slick-row')\n      .each(($row, index) => {\n        if (index > expectedRows.length - 1) {\n          return;\n        }\n        cy.wrap($row).children('.slick-cell:nth(1)')\n          .first()\n          .should('contain', expectedRows[index]);\n      });\n\n    cy.window().then((win) => {\n      expect(win.console.log).to.have.callCount(2);\n      expect(win.console.log).to.be.calledWith('on Before Paging Info Changed - Previous Paging:: ', { pageSize: 50, pageNum: 1, totalRows: 50000, totalPages: 1000 });\n      expect(win.console.log).to.be.calledWith('on After Paging Info Changed - New Paging:: ', { pageSize: 50, pageNum: 999, totalRows: 50000, totalPages: 1000 });\n    });\n  });\n});\n"],
  "mappings": "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",
  "names": []
}
