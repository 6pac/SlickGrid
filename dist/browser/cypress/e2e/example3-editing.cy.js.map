{
  "version": 3,
  "sources": ["../../../../cypress/e2e/example3-editing.cy.ts"],
  "sourcesContent": ["/// <reference types=\"cypress\" />\n\ndescribe('Example3 Editing', () => {\n  const titles = ['Title', 'Description', 'Duration', '% Complete', 'Start', 'Finish', 'Effort Driven'];\n  const GRID_ROW_HEIGHT = 28;\n\n  beforeEach(() => {\n    // create a console.log spy for later use\n    cy.window().then((win) => {\n      cy.spy(win.console, \"log\");\n    });\n  });\n\n  it('should display Example title', () => {\n    cy.visit(`${Cypress.config('baseExampleUrl')}/example3-editing.html`);\n    cy.get('h2').contains('Demonstrates');\n    cy.get('h2 + ul > li').first().contains('adding basic keyboard navigation and editing');\n  });\n\n  it('should have exact Column Titles in the grid', () => {\n    cy.get('#myGrid')\n      .find('.slick-header-columns')\n      .children()\n      .each(($child, index) => expect($child.text()).to.eq(titles[index]));\n  });\n\n  it('should be able to edit \"Description\" by double-clicking on first row and expect no more editable cell', () => {\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(1)`).should('contain', 'This is a sample');\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(1)`).click();\n    cy.get('.slick-large-editor-text').should('have.length', 0);\n\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(1)`).dblclick();\n    cy.get('.slick-large-editor-text').should('have.length', 1);\n\n    cy.get('.slick-large-editor-text textarea')\n      .type('Something else');\n\n    cy.get('.slick-large-editor-text')\n      .contains('Save')\n      .click();\n\n    cy.get('.slick-large-editor-text').should('have.length', 0);\n  });\n\n  it('should click on \"Auto-Edit ON\" button', () => {\n    cy.get('[data-test=\"auto-edit-on-btn\"]')\n      .click();\n  });\n\n  it('should be able to edit \"Description\" by clicking once on second row and expect next row to become editable after clicking \"Save\" button', () => {\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(1)`).should('contain', 'This is a sample');\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(1)`).click();\n    cy.get('.slick-large-editor-text').should('have.length', 1);\n\n    cy.get('.slick-large-editor-text textarea')\n      .type('Second Row!');\n\n    cy.get('.slick-large-editor-text')\n      .contains('Save')\n      .click();\n\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(1)`).should('contain', 'Second Row!');\n    cy.get('.slick-large-editor-text').should('have.length', 1);\n\n    cy.get('.slick-large-editor-text textarea')\n      .invoke('val')\n      .then(text => expect(text).to.eq('This is a sample task description.\\n  It can be multiline'));\n  });\n\n  it('should click on \"Auto-Commit ON\" button', () => {\n    cy.get('[data-test=\"auto-commit-on-btn\"]')\n      .click();\n  });\n\n  it('should be able to edit \"Description\" by clicking once on second row and expect next row and not expect next line to become editable', () => {\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"] > .slick-cell:nth(1)`).should('contain', 'This is a sample');\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"] > .slick-cell:nth(1)`).click();\n    cy.get('.slick-large-editor-text').should('have.length', 1);\n\n    cy.get('.slick-large-editor-text textarea')\n      .type('Third Row Text');\n\n    cy.get('.slick-large-editor-text')\n      .contains('Save')\n      .click();\n\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"] > .slick-cell:nth(1)`).should('contain', 'Third Row Text');\n    cy.get('.slick-large-editor-text').should('have.length', 0);\n  });\n\n  it('should click on \"Auto-Commit OFF\" button', () => {\n    cy.get('[data-test=\"auto-commit-off-btn\"]')\n      .click();\n  });\n\n  it('should be able to edit \"Description\" and expect once again that the next line will become editable', () => {\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"] > .slick-cell:nth(1)`).should('contain', 'This is a sample');\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"] > .slick-cell:nth(1)`).click();\n    cy.get('.slick-large-editor-text').should('have.length', 1);\n\n    cy.get('.slick-large-editor-text textarea')\n      .type('Fourth Row');\n\n    cy.get('.slick-large-editor-text')\n      .contains('Save')\n      .click();\n\n    cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"] > .slick-cell:nth(1)`).should('contain', 'Fourth Row');\n    cy.get('.slick-large-editor-text').should('have.length', 1);\n\n    cy.get('.slick-large-editor-text textarea')\n      .invoke('val')\n      .then(text => expect(text).to.eq('This is a sample task description.\\n  It can be multiline'));\n  });\n});\n"],
  "mappings": ";;;AAEA,WAAS,oBAAoB,MAAM;AACjC,QAAM,SAAS,CAAC,SAAS,eAAe,YAAY,cAAc,SAAS,UAAU,eAAe;AAGpG,eAAW,MAAM;AAEf,SAAG,OAAO,EAAE,KAAK,CAAC,QAAQ;AACxB,WAAG,IAAI,IAAI,SAAS,KAAK;AAAA,MAC3B,CAAC;AAAA,IACH,CAAC,GAED,GAAG,gCAAgC,MAAM;AACvC,SAAG,MAAM,GAAG,QAAQ,OAAO,gBAAgB,CAAC,wBAAwB,GACpE,GAAG,IAAI,IAAI,EAAE,SAAS,cAAc,GACpC,GAAG,IAAI,cAAc,EAAE,MAAM,EAAE,SAAS,8CAA8C;AAAA,IACxF,CAAC,GAED,GAAG,+CAA+C,MAAM;AACtD,SAAG,IAAI,SAAS,EACb,KAAK,uBAAuB,EAC5B,SAAS,EACT,KAAK,CAAC,QAAQ,UAAU,OAAO,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,OAAO,KAAK,CAAC,CAAC;AAAA,IACvE,CAAC,GAED,GAAG,yGAAyG,MAAM;AAChH,SAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,kBAAkB,GAC1G,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,MAAM,GAC5E,GAAG,IAAI,0BAA0B,EAAE,OAAO,eAAe,CAAC,GAE1D,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,SAAS,GAC/E,GAAG,IAAI,0BAA0B,EAAE,OAAO,eAAe,CAAC,GAE1D,GAAG,IAAI,mCAAmC,EACvC,KAAK,gBAAgB,GAExB,GAAG,IAAI,0BAA0B,EAC9B,SAAS,MAAM,EACf,MAAM,GAET,GAAG,IAAI,0BAA0B,EAAE,OAAO,eAAe,CAAC;AAAA,IAC5D,CAAC,GAED,GAAG,yCAAyC,MAAM;AAChD,SAAG,IAAI,gCAAgC,EACpC,MAAM;AAAA,IACX,CAAC,GAED,GAAG,2IAA2I,MAAM;AAClJ,SAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,kBAAkB,GAC1G,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,MAAM,GAC5E,GAAG,IAAI,0BAA0B,EAAE,OAAO,eAAe,CAAC,GAE1D,GAAG,IAAI,mCAAmC,EACvC,KAAK,aAAa,GAErB,GAAG,IAAI,0BAA0B,EAC9B,SAAS,MAAM,EACf,MAAM,GAET,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,aAAa,GACrG,GAAG,IAAI,0BAA0B,EAAE,OAAO,eAAe,CAAC,GAE1D,GAAG,IAAI,mCAAmC,EACvC,OAAO,KAAK,EACZ,KAAK,UAAQ,OAAO,IAAI,EAAE,GAAG,GAAG;AAAA,sBAA2D,CAAC;AAAA,IACjG,CAAC,GAED,GAAG,2CAA2C,MAAM;AAClD,SAAG,IAAI,kCAAkC,EACtC,MAAM;AAAA,IACX,CAAC,GAED,GAAG,uIAAuI,MAAM;AAC9I,SAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,kBAAkB,GAC1G,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,MAAM,GAC5E,GAAG,IAAI,0BAA0B,EAAE,OAAO,eAAe,CAAC,GAE1D,GAAG,IAAI,mCAAmC,EACvC,KAAK,gBAAgB,GAExB,GAAG,IAAI,0BAA0B,EAC9B,SAAS,MAAM,EACf,MAAM,GAET,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,gBAAgB,GACxG,GAAG,IAAI,0BAA0B,EAAE,OAAO,eAAe,CAAC;AAAA,IAC5D,CAAC,GAED,GAAG,4CAA4C,MAAM;AACnD,SAAG,IAAI,mCAAmC,EACvC,MAAM;AAAA,IACX,CAAC,GAED,GAAG,sGAAsG,MAAM;AAC7G,SAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,kBAAkB,GAC1G,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,MAAM,GAC5E,GAAG,IAAI,0BAA0B,EAAE,OAAO,eAAe,CAAC,GAE1D,GAAG,IAAI,mCAAmC,EACvC,KAAK,YAAY,GAEpB,GAAG,IAAI,0BAA0B,EAC9B,SAAS,MAAM,EACf,MAAM,GAET,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,YAAY,GACpG,GAAG,IAAI,0BAA0B,EAAE,OAAO,eAAe,CAAC,GAE1D,GAAG,IAAI,mCAAmC,EACvC,OAAO,KAAK,EACZ,KAAK,UAAQ,OAAO,IAAI,EAAE,GAAG,GAAG;AAAA,sBAA2D,CAAC;AAAA,IACjG,CAAC;AAAA,EACH,CAAC;",
  "names": []
}
