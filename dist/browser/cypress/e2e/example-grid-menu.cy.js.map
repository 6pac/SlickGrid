{
  "version": 3,
  "sources": ["../../../../cypress/e2e/example-grid-menu.cy.ts"],
  "sourcesContent": ["/// <reference types=\"Cypress\" />\n\nimport '@4tw/cypress-drag-drop';\n\ndescribe('Example - Grid Menu', () => {\n  const fullTitles = ['', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\n\n  beforeEach(() => {\n    // create a console.log spy for later use\n    cy.window().then((win) => {\n      cy.spy(win.console, \"log\");\n    });\n  });\n\n  it('should display Example Grid Menu', () => {\n    cy.visit(`${Cypress.config('baseExampleUrl')}/example-grid-menu.html`);\n    cy.get('h2').should('contain', 'Demonstrates:');\n    cy.contains('This example demonstrates using the Slick.Controls.GridMenu ');\n  });\n\n  it('should have exact Column Titles in the grid', () => {\n    cy.get('#myGrid')\n      .find('.slick-header-columns')\n      .children()\n      .each(($child, index) => expect($child.text()).to.eq(fullTitles[index]));\n  });\n\n  it('should open the Grid Menu and expect onBeforeMenuShow then onAfterMenuShow to show in the console log', () => {\n    cy.get('#myGrid')\n      .find('button.slick-gridmenu-button')\n      .click({ force: true });\n\n    cy.window().then((win) => {\n      expect(win.console.log).to.have.callCount(2);\n      expect(win.console.log).to.be.calledWith('Before the Grid Menu is shown');\n      expect(win.console.log).to.be.calledWith('After the Grid Menu is shown');\n    });\n  });\n\n  it('should have the Grid Menu already opened and expect a title for \"Custom Menus\" and for \"Columns\"', () => {\n    cy.get('.slick-gridmenu-custom')\n      .find('.title')\n      .contains('Custom Menus');\n\n    cy.get('.slick-gridmenu')\n      .find('.title')\n      .contains('Columns');\n\n    cy.get('#myGrid')\n      .get('.slick-gridmenu:visible')\n      .find('span.close')\n      .click({ force: true });\n  });\n\n  it('should click on the Grid Menu to hide the column \"A\"', () => {\n    const expectedTitleList = ['', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J']; // without \"A\"\n\n    cy.get('#myGrid')\n      .find('button.slick-gridmenu-button')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .get('.slick-gridmenu:visible')\n      .find('.slick-gridmenu-list')\n      .children('li:visible:nth(0)')\n      .children('label')\n      .should('contain', 'A')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .get('.slick-gridmenu:visible')\n      .find('span.close')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .find('.slick-header-columns')\n      .children()\n      .each(($child, index) => expect($child.text()).to.eq(expectedTitleList[index]));\n  });\n\n  it('should click on the External Grid Menu to show the column \"A\" as 1st column again', () => {\n    cy.get('button')\n      .contains('Grid Menu')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .get('.slick-gridmenu:visible')\n      .find('.slick-gridmenu-list')\n      .children('li:visible:nth(0)')\n      .children('label')\n      .should('contain', 'A')\n      .click({ force: true });\n\n    cy.get('[data-dismiss=slick-gridmenu]')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .find('.slick-header-columns')\n      .children()\n      .each(($child, index) => expect($child.text()).to.eq(fullTitles[index]));\n  });\n\n  it('should click on \"Help\" and expect an Alert to show the Help text', () => {\n    cy.on('window:alert', (str) => {\n      expect(str).to.equal(`Command: help`);\n    });\n\n    cy.get('.slick-gridmenu-item')\n      .contains('Help')\n      .click({ force: true });\n  });\n\n  it('should toggle Filter Row and expect the row to be hidden', () => {\n    cy.get('.slick-gridmenu-item')\n      .contains('Toggle Filter Row')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .find('.slick-pane-left')\n      .find('.slick-headerrow')\n      .should('be.hidden');\n  });\n\n  it('should toggle Filter Row and expect the row to be shown again', () => {\n    cy.get('.slick-gridmenu-item')\n      .contains('Toggle Filter Row')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .find('.slick-pane-left')\n      .find('.slick-headerrow')\n      .should('be.visible');\n  });\n\n  it('should toggle Top Panel and expect the row to show up', () => {\n    cy.get('.slick-gridmenu-item.italic')\n      .find('.slick-gridmenu-content.orange')\n      .contains('Toggle Top Panel')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .find('.slick-pane-left')\n      .find('.slick-top-panel-scroller')\n      .should('be.visible');\n  });\n\n  it('should toggle Top Panel and expect the row to be hide', () => {\n    cy.get('.slick-gridmenu-item')\n      .contains('Toggle Top Panel')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .find('.slick-pane-left')\n      .find('.slick-top-panel-scroller')\n      .should('be.hidden');\n  });\n\n  it('should filter column \"#\" with value 9 and expect only 1 row in the grid with value 9', () => {\n    cy.get('.grid-canvas')\n      .find('.slick-row')\n      .should('be.visible');\n\n    cy.get('#myGrid')\n      .find('.slick-headerrow-column.l0.r0')\n      .find('input')\n      .type('9');\n\n    cy.get('#myGrid')\n      .find('.slick-row')\n      .should('have.length', 1);\n  });\n\n  it('should open the Grid Menu and click on Clear Filter and expect multiple rows now showing in the grid', () => {\n    cy.get('#myGrid')\n      .find('button.slick-gridmenu-button')\n      .click({ force: true });\n\n    cy.get('.slick-gridmenu-item')\n      .find('.slick-gridmenu-content.red')\n      .contains('Clear Filters')\n      .click({ force: true });\n\n    cy.get('.grid-canvas')\n      .find('.slick-row')\n      .should('be.visible');\n\n    cy.get('#myGrid')\n      .find('.slick-row')\n      .its('length')\n      .should('be.gt', 1);\n  });\n\n  it('should drag column \"A\" to be after column \"C\" and expect this to be reflected in the Grid Menu', () => {\n    const expectedGridMenuList = ['B', 'C', 'A', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'Force fit columns', 'Synchronous resize']; // without \"A\"\n\n    cy.get('.slick-header-column:nth(1)')\n      .drag('.slick-header-column:nth(3)');\n\n    cy.get('button')\n      .contains('Grid Menu')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .get('.slick-gridmenu:visible')\n      .find('.slick-gridmenu-list')\n      .children('li:visible')\n      .each(($child, index) => expect($child.text()).to.eq(expectedGridMenuList[index]));\n\n    cy.get('#myGrid')\n      .get('.slick-gridmenu:visible')\n      .find('span.close')\n      .click();\n  });\n\n  it('should toggle start filtering and not be able to toggle Filter Row when filters are entered', () => {\n    cy.get('.slick-gridmenu')\n      .should('be.hidden');\n\n    cy.get('.slick-headerrow-column:nth(2)')\n      .find('input')\n      .type('8');\n\n    cy.get('#myGrid')\n      .find('button.slick-gridmenu-button')\n      .click({ force: true });\n\n    cy.get('.slick-gridmenu-item.slick-gridmenu-item-disabled')\n      .contains('Toggle Filter Row')\n      .should('exist');\n\n    cy.get('#myGrid')\n      .find('.slick-pane-left')\n      .find('.slick-headerrow')\n      .should('not.be.hidden');\n\n    cy.get('#myGrid')\n      .get('.slick-gridmenu:visible')\n      .find('span.close')\n      .click({ force: true });\n  });\n\n  it('should remove filter and be able to toggle Filter Row', () => {\n    cy.get('.slick-gridmenu')\n      .should('be.hidden');\n\n    cy.get('.slick-headerrow-column:nth(2)')\n      .find('input')\n      .clear();\n\n    cy.get('#myGrid')\n      .find('button.slick-gridmenu-button')\n      .click({ force: true });\n\n    cy.get('.slick-gridmenu-item')\n      .contains('Toggle Filter Row')\n      .should('be.visible')\n      .click({ force: true });\n\n    cy.get('#myGrid')\n      .find('.slick-pane-left')\n      .find('.slick-headerrow')\n      .should('be.hidden');\n  });\n\n  it('should expect \"Clear Sorting\" command to become hidden from Grid Menu when disabling feature', () => {\n    cy.get('#toggle-sorting')\n    .click();\n\n    cy.get('#myGrid')\n      .find('button.slick-gridmenu-button')\n      .click({ force: true });\n\n    cy.get('.slick-gridmenu-item')\n      .contains('Clear Sorting')\n      .should('not.be.visible')\n      .click({ force: true });\n  });\n\n  it('should expect \"Clear Sorting\" command to become visible agaom in Grid Menu when toggling feature again', () => {\n    cy.get('#toggle-sorting')\n    .click();\n\n    cy.get('#myGrid')\n      .find('button.slick-gridmenu-button')\n      .click({ force: true });\n\n    cy.get('.slick-gridmenu-item')\n      .contains('Clear Sorting')\n      .should('be.visible')\n      .click({ force: true });\n  });\n});\n"],
  "mappings": ";;;AAIA,WAAS,uBAAuB,MAAM;AACpC,QAAM,aAAa,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAExE,eAAW,MAAM;AAEf,SAAG,OAAO,EAAE,KAAK,CAAC,QAAQ;AACxB,WAAG,IAAI,IAAI,SAAS,KAAK;AAAA,MAC3B,CAAC;AAAA,IACH,CAAC,GAED,GAAG,oCAAoC,MAAM;AAC3C,SAAG,MAAM,GAAG,QAAQ,OAAO,gBAAgB,CAAC,yBAAyB,GACrE,GAAG,IAAI,IAAI,EAAE,OAAO,WAAW,eAAe,GAC9C,GAAG,SAAS,8DAA8D;AAAA,IAC5E,CAAC,GAED,GAAG,+CAA+C,MAAM;AACtD,SAAG,IAAI,SAAS,EACb,KAAK,uBAAuB,EAC5B,SAAS,EACT,KAAK,CAAC,QAAQ,UAAU,OAAO,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,WAAW,KAAK,CAAC,CAAC;AAAA,IAC3E,CAAC,GAED,GAAG,yGAAyG,MAAM;AAChH,SAAG,IAAI,SAAS,EACb,KAAK,8BAA8B,EACnC,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,OAAO,EAAE,KAAK,CAAC,QAAQ;AACxB,eAAO,IAAI,QAAQ,GAAG,EAAE,GAAG,KAAK,UAAU,CAAC,GAC3C,OAAO,IAAI,QAAQ,GAAG,EAAE,GAAG,GAAG,WAAW,+BAA+B,GACxE,OAAO,IAAI,QAAQ,GAAG,EAAE,GAAG,GAAG,WAAW,8BAA8B;AAAA,MACzE,CAAC;AAAA,IACH,CAAC,GAED,GAAG,oGAAoG,MAAM;AAC3G,SAAG,IAAI,wBAAwB,EAC5B,KAAK,QAAQ,EACb,SAAS,cAAc,GAE1B,GAAG,IAAI,iBAAiB,EACrB,KAAK,QAAQ,EACb,SAAS,SAAS,GAErB,GAAG,IAAI,SAAS,EACb,IAAI,yBAAyB,EAC7B,KAAK,YAAY,EACjB,MAAM,EAAE,OAAO,GAAK,CAAC;AAAA,IAC1B,CAAC,GAED,GAAG,wDAAwD,MAAM;AAC/D,UAAM,oBAAoB,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAE1E,SAAG,IAAI,SAAS,EACb,KAAK,8BAA8B,EACnC,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,IAAI,yBAAyB,EAC7B,KAAK,sBAAsB,EAC3B,SAAS,mBAAmB,EAC5B,SAAS,OAAO,EAChB,OAAO,WAAW,GAAG,EACrB,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,IAAI,yBAAyB,EAC7B,KAAK,YAAY,EACjB,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,KAAK,uBAAuB,EAC5B,SAAS,EACT,KAAK,CAAC,QAAQ,UAAU,OAAO,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,kBAAkB,KAAK,CAAC,CAAC;AAAA,IAClF,CAAC,GAED,GAAG,qFAAqF,MAAM;AAC5F,SAAG,IAAI,QAAQ,EACZ,SAAS,WAAW,EACpB,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,IAAI,yBAAyB,EAC7B,KAAK,sBAAsB,EAC3B,SAAS,mBAAmB,EAC5B,SAAS,OAAO,EAChB,OAAO,WAAW,GAAG,EACrB,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,+BAA+B,EACnC,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,KAAK,uBAAuB,EAC5B,SAAS,EACT,KAAK,CAAC,QAAQ,UAAU,OAAO,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,WAAW,KAAK,CAAC,CAAC;AAAA,IAC3E,CAAC,GAED,GAAG,oEAAoE,MAAM;AAC3E,SAAG,GAAG,gBAAgB,CAAC,QAAQ;AAC7B,eAAO,GAAG,EAAE,GAAG,MAAM,eAAe;AAAA,MACtC,CAAC,GAED,GAAG,IAAI,sBAAsB,EAC1B,SAAS,MAAM,EACf,MAAM,EAAE,OAAO,GAAK,CAAC;AAAA,IAC1B,CAAC,GAED,GAAG,4DAA4D,MAAM;AACnE,SAAG,IAAI,sBAAsB,EAC1B,SAAS,mBAAmB,EAC5B,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,KAAK,kBAAkB,EACvB,KAAK,kBAAkB,EACvB,OAAO,WAAW;AAAA,IACvB,CAAC,GAED,GAAG,iEAAiE,MAAM;AACxE,SAAG,IAAI,sBAAsB,EAC1B,SAAS,mBAAmB,EAC5B,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,KAAK,kBAAkB,EACvB,KAAK,kBAAkB,EACvB,OAAO,YAAY;AAAA,IACxB,CAAC,GAED,GAAG,yDAAyD,MAAM;AAChE,SAAG,IAAI,6BAA6B,EACjC,KAAK,gCAAgC,EACrC,SAAS,kBAAkB,EAC3B,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,KAAK,kBAAkB,EACvB,KAAK,2BAA2B,EAChC,OAAO,YAAY;AAAA,IACxB,CAAC,GAED,GAAG,yDAAyD,MAAM;AAChE,SAAG,IAAI,sBAAsB,EAC1B,SAAS,kBAAkB,EAC3B,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,KAAK,kBAAkB,EACvB,KAAK,2BAA2B,EAChC,OAAO,WAAW;AAAA,IACvB,CAAC,GAED,GAAG,wFAAwF,MAAM;AAC/F,SAAG,IAAI,cAAc,EAClB,KAAK,YAAY,EACjB,OAAO,YAAY,GAEtB,GAAG,IAAI,SAAS,EACb,KAAK,+BAA+B,EACpC,KAAK,OAAO,EACZ,KAAK,GAAG,GAEX,GAAG,IAAI,SAAS,EACb,KAAK,YAAY,EACjB,OAAO,eAAe,CAAC;AAAA,IAC5B,CAAC,GAED,GAAG,wGAAwG,MAAM;AAC/G,SAAG,IAAI,SAAS,EACb,KAAK,8BAA8B,EACnC,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,sBAAsB,EAC1B,KAAK,6BAA6B,EAClC,SAAS,eAAe,EACxB,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,cAAc,EAClB,KAAK,YAAY,EACjB,OAAO,YAAY,GAEtB,GAAG,IAAI,SAAS,EACb,KAAK,YAAY,EACjB,IAAI,QAAQ,EACZ,OAAO,SAAS,CAAC;AAAA,IACtB,CAAC,GAED,GAAG,kGAAkG,MAAM;AACzG,UAAM,uBAAuB,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,qBAAqB,oBAAoB;AAEzH,SAAG,IAAI,6BAA6B,EACjC,KAAK,6BAA6B,GAErC,GAAG,IAAI,QAAQ,EACZ,SAAS,WAAW,EACpB,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,IAAI,yBAAyB,EAC7B,KAAK,sBAAsB,EAC3B,SAAS,YAAY,EACrB,KAAK,CAAC,QAAQ,UAAU,OAAO,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,qBAAqB,KAAK,CAAC,CAAC,GAEnF,GAAG,IAAI,SAAS,EACb,IAAI,yBAAyB,EAC7B,KAAK,YAAY,EACjB,MAAM;AAAA,IACX,CAAC,GAED,GAAG,+FAA+F,MAAM;AACtG,SAAG,IAAI,iBAAiB,EACrB,OAAO,WAAW,GAErB,GAAG,IAAI,gCAAgC,EACpC,KAAK,OAAO,EACZ,KAAK,GAAG,GAEX,GAAG,IAAI,SAAS,EACb,KAAK,8BAA8B,EACnC,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,mDAAmD,EACvD,SAAS,mBAAmB,EAC5B,OAAO,OAAO,GAEjB,GAAG,IAAI,SAAS,EACb,KAAK,kBAAkB,EACvB,KAAK,kBAAkB,EACvB,OAAO,eAAe,GAEzB,GAAG,IAAI,SAAS,EACb,IAAI,yBAAyB,EAC7B,KAAK,YAAY,EACjB,MAAM,EAAE,OAAO,GAAK,CAAC;AAAA,IAC1B,CAAC,GAED,GAAG,yDAAyD,MAAM;AAChE,SAAG,IAAI,iBAAiB,EACrB,OAAO,WAAW,GAErB,GAAG,IAAI,gCAAgC,EACpC,KAAK,OAAO,EACZ,MAAM,GAET,GAAG,IAAI,SAAS,EACb,KAAK,8BAA8B,EACnC,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,sBAAsB,EAC1B,SAAS,mBAAmB,EAC5B,OAAO,YAAY,EACnB,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,SAAS,EACb,KAAK,kBAAkB,EACvB,KAAK,kBAAkB,EACvB,OAAO,WAAW;AAAA,IACvB,CAAC,GAED,GAAG,gGAAgG,MAAM;AACvG,SAAG,IAAI,iBAAiB,EACvB,MAAM,GAEP,GAAG,IAAI,SAAS,EACb,KAAK,8BAA8B,EACnC,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,sBAAsB,EAC1B,SAAS,eAAe,EACxB,OAAO,gBAAgB,EACvB,MAAM,EAAE,OAAO,GAAK,CAAC;AAAA,IAC1B,CAAC,GAED,GAAG,0GAA0G,MAAM;AACjH,SAAG,IAAI,iBAAiB,EACvB,MAAM,GAEP,GAAG,IAAI,SAAS,EACb,KAAK,8BAA8B,EACnC,MAAM,EAAE,OAAO,GAAK,CAAC,GAExB,GAAG,IAAI,sBAAsB,EAC1B,SAAS,eAAe,EACxB,OAAO,YAAY,EACnB,MAAM,EAAE,OAAO,GAAK,CAAC;AAAA,IAC1B,CAAC;AAAA,EACH,CAAC;",
  "names": []
}
