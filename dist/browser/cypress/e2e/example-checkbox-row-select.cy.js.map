{
  "version": 3,
  "sources": ["../../../../cypress/e2e/example-checkbox-row-select.cy.ts"],
  "sourcesContent": ["/// <reference types=\"cypress\" />\n\ndescribe('Example - Checkbox Row Select', () => {\n  const titles = ['', 'A', 'B', 'C', 'D', 'E'];\n  const GRID_ROW_HEIGHT = 25;\n\n  describe('Grid 1', () => {\n    it('should display Example title', () => {\n      cy.visit(`${Cypress.config('baseExampleUrl')}/example-checkbox-row-select.html`);\n      cy.get('h2').contains('Demonstrates');\n      cy.get('h2 + ul > li').first().contains('Checkbox row select column');\n    });\n\n    it('should have exact Column Titles in the grid', () => {\n      cy.get('#myGrid')\n        .find('.slick-header-columns')\n        .children()\n        .each(($child, index) => expect($child.text()).to.eq(titles[index]));\n    });\n\n    it('should be able to select 5th row of first grid by clicking \"Select row 5\" button', () => {\n      cy.get('#selectRow5')\n        .click();\n\n      cy.get('#myGrid')\n        .find('.slick-cell-checkboxsel input:checked')\n        .should('have.length', 1);\n\n      // the entire row (all 6x cells) should be selected\n      cy.get('#myGrid')\n        .find('.slick-cell.selected')\n        .should('have.length', 6);\n    });\n\n    it('should be able to select first 2 rows and now expect 3 rows selected', () => {\n      cy.get(`.slick-row[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(0) input[type=checkbox]`).click();\n      cy.get(`.slick-row[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(0) input[type=checkbox]`).click();\n\n      cy.get('#myGrid')\n        .find('.slick-cell-checkboxsel input:checked')\n        .should('have.length', 3);\n    });\n\n    it('should be able to unselect 5th row of first grid by clicking \"Unselect row 5\" button', () => {\n      cy.get('#unselectRow5')\n        .click();\n\n      cy.get(`.slick-row[style=\"top:${GRID_ROW_HEIGHT * 4}px\"] > .slick-cell:nth(0) input[type=checkbox]`)\n        .should('not.be.checked');\n\n      cy.get('#myGrid')\n        .find('.slick-cell-checkboxsel input:checked')\n        .should('have.length', 2);\n    });\n\n    it('should be able to unselect all rows by clicking \"Unselect all rows\" button', () => {\n      cy.get('#unselectAllRows')\n        .click();\n\n      cy.get('#myGrid')\n        .find('.slick-cell-checkboxsel input:checked')\n        .should('have.length', 0);\n    });\n\n    it('should be able select all rows by clicking on the Select All checkbox', () => {\n      cy.get('#myGrid [data-id=_checkbox_selector]')\n        .click();\n\n      cy.get('#myGrid')\n        .find('.slick-cell-checkboxsel input:checked')\n        .should('have.length.greaterThan', 10);\n    });\n\n    it('should be able to unselect all rows by clicking \"Unselect all rows\" button', () => {\n      cy.get('#unselectAllRows')\n        .click();\n\n      cy.get('#myGrid')\n        .find('.slick-cell-checkboxsel input:checked')\n        .should('have.length', 0);\n    });\n\n    it('should be able to click on \"toggle show/hide Select All\" button and expect Select All checkbox to be toggled', () => {\n      cy.get('#myGrid [data-id=_checkbox_selector] input[type=checkbox]')\n        .should('exist');\n\n      cy.get('[data-test=\"toggle-select-all\"]')\n        .click();\n\n      cy.get('#myGrid [data-id=_checkbox_selector] input[type=checkbox]')\n        .should('not.exist');\n\n      cy.get('[data-test=\"toggle-select-all\"]')\n        .click();\n\n      cy.get('#myGrid [data-id=_checkbox_selector] input[type=checkbox]')\n        .should('exist');\n    });\n  });\n});"],
  "mappings": ";;;AAEA,WAAS,iCAAiC,MAAM;AAC9C,QAAM,SAAS,CAAC,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG;AAG3C,aAAS,UAAU,MAAM;AACvB,SAAG,gCAAgC,MAAM;AACvC,WAAG,MAAM,GAAG,QAAQ,OAAO,gBAAgB,CAAC,mCAAmC,GAC/E,GAAG,IAAI,IAAI,EAAE,SAAS,cAAc,GACpC,GAAG,IAAI,cAAc,EAAE,MAAM,EAAE,SAAS,4BAA4B;AAAA,MACtE,CAAC,GAED,GAAG,+CAA+C,MAAM;AACtD,WAAG,IAAI,SAAS,EACb,KAAK,uBAAuB,EAC5B,SAAS,EACT,KAAK,CAAC,QAAQ,UAAU,OAAO,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,OAAO,KAAK,CAAC,CAAC;AAAA,MACvE,CAAC,GAED,GAAG,oFAAoF,MAAM;AAC3F,WAAG,IAAI,aAAa,EACjB,MAAM,GAET,GAAG,IAAI,SAAS,EACb,KAAK,uCAAuC,EAC5C,OAAO,eAAe,CAAC,GAG1B,GAAG,IAAI,SAAS,EACb,KAAK,sBAAsB,EAC3B,OAAO,eAAe,CAAC;AAAA,MAC5B,CAAC,GAED,GAAG,wEAAwE,MAAM;AAC/E,WAAG,IAAI,yBAAyB,KAAkB,CAAC,gDAAgD,EAAE,MAAM,GAC3G,GAAG,IAAI,yBAAyB,KAAkB,CAAC,gDAAgD,EAAE,MAAM,GAE3G,GAAG,IAAI,SAAS,EACb,KAAK,uCAAuC,EAC5C,OAAO,eAAe,CAAC;AAAA,MAC5B,CAAC,GAED,GAAG,wFAAwF,MAAM;AAC/F,WAAG,IAAI,eAAe,EACnB,MAAM,GAET,GAAG,IAAI,yBAAyB,KAAkB,CAAC,gDAAgD,EAChG,OAAO,gBAAgB,GAE1B,GAAG,IAAI,SAAS,EACb,KAAK,uCAAuC,EAC5C,OAAO,eAAe,CAAC;AAAA,MAC5B,CAAC,GAED,GAAG,8EAA8E,MAAM;AACrF,WAAG,IAAI,kBAAkB,EACtB,MAAM,GAET,GAAG,IAAI,SAAS,EACb,KAAK,uCAAuC,EAC5C,OAAO,eAAe,CAAC;AAAA,MAC5B,CAAC,GAED,GAAG,yEAAyE,MAAM;AAChF,WAAG,IAAI,sCAAsC,EAC1C,MAAM,GAET,GAAG,IAAI,SAAS,EACb,KAAK,uCAAuC,EAC5C,OAAO,2BAA2B,EAAE;AAAA,MACzC,CAAC,GAED,GAAG,8EAA8E,MAAM;AACrF,WAAG,IAAI,kBAAkB,EACtB,MAAM,GAET,GAAG,IAAI,SAAS,EACb,KAAK,uCAAuC,EAC5C,OAAO,eAAe,CAAC;AAAA,MAC5B,CAAC,GAED,GAAG,gHAAgH,MAAM;AACvH,WAAG,IAAI,2DAA2D,EAC/D,OAAO,OAAO,GAEjB,GAAG,IAAI,iCAAiC,EACrC,MAAM,GAET,GAAG,IAAI,2DAA2D,EAC/D,OAAO,WAAW,GAErB,GAAG,IAAI,iCAAiC,EACrC,MAAM,GAET,GAAG,IAAI,2DAA2D,EAC/D,OAAO,OAAO;AAAA,MACnB,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;",
  "names": []
}
