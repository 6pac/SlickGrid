{
  "version": 3,
  "sources": ["../../../../cypress/e2e/example-colspan.cy.ts"],
  "sourcesContent": ["/// <reference types='cypress' />\ndescribe('Example - Column Span & Header Grouping', { retries: 1 }, () => {\n    // NOTE:  everywhere there's a * 2 is because we have a top+bottom (frozen rows) containers even after Unfreeze Columns/Rows\n    const GRID_ROW_HEIGHT = 25;\n    const fullTitles = ['Title', 'Duration', '% Complete', 'Start', 'Finish', 'Effort Driven'];\n    for (let i = 0; i < 30; i++) {\n        fullTitles.push(`Mock${i}`);\n    }\n\n    it('should display Example title', () => {\n        cy.visit(`${Cypress.config('baseExampleUrl')}/example-colspan.html`);\n        cy.get('h2').contains('Demonstrates');\n    });\n\n    it('should have exact column titles', () => {\n        cy.get('#myGrid')\n            .find('.slick-header-columns')\n            .children()\n            .each(($child, index) => expect($child.text()).to.eq(fullTitles[index]));\n    });\n\n    it('should expect 1st row to be 1 column spanned to the entire width', () => {\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(0)`).should('contain', 'Task 0');\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(1)`).should('not.exist');\n    });\n\n    it('should expect 2nd row to be 4 columns and not be spanned', () => {\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(0)`).should('contain', 'Task 1');\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(1)`).should('contain', '5 days');\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(2)`).should('contain', '01/05/2009');\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(3)`).contains(/(true|false)/);\n    });\n\n    it('should expect 3rd row to be 1 column spanned to the entire width', () => {\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"] > .slick-cell:nth(0)`).should('contain', 'Task 2');\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"] > .slick-cell:nth(1)`).should('not.exist');\n    });\n\n    it('should expect 4th row to be 4 columns and not be spanned', () => {\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"] > .slick-cell:nth(0)`).should('contain', 'Task 3');\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"] > .slick-cell:nth(1)`).should('contain', '5 days');\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"] > .slick-cell:nth(2)`).should('contain', '01/05/2009');\n        cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"] > .slick-cell:nth(3)`).contains(/(true|false)/);\n    });\n});\n"],
  "mappings": ";;;AACA,WAAS,2CAA2C,EAAE,SAAS,EAAE,GAAG,MAAM;AAGtE,QAAM,aAAa,CAAC,SAAS,YAAY,cAAc,SAAS,UAAU,eAAe;AACzF,aAAS,IAAI,GAAG,IAAI,IAAI;AACpB,iBAAW,KAAK,OAAO,CAAC,EAAE;AAG9B,OAAG,gCAAgC,MAAM;AACrC,SAAG,MAAM,GAAG,QAAQ,OAAO,gBAAgB,CAAC,uBAAuB,GACnE,GAAG,IAAI,IAAI,EAAE,SAAS,cAAc;AAAA,IACxC,CAAC,GAED,GAAG,mCAAmC,MAAM;AACxC,SAAG,IAAI,SAAS,EACX,KAAK,uBAAuB,EAC5B,SAAS,EACT,KAAK,CAAC,QAAQ,UAAU,OAAO,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,WAAW,KAAK,CAAC,CAAC;AAAA,IAC/E,CAAC,GAED,GAAG,oEAAoE,MAAM;AACzE,SAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,QAAQ,GAChG,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW;AAAA,IAC5F,CAAC,GAED,GAAG,4DAA4D,MAAM;AACjE,SAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,QAAQ,GAChG,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,QAAQ,GAChG,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,YAAY,GACpG,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,SAAS,cAAc;AAAA,IACjG,CAAC,GAED,GAAG,oEAAoE,MAAM;AACzE,SAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,QAAQ,GAChG,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW;AAAA,IAC5F,CAAC,GAED,GAAG,4DAA4D,MAAM;AACjE,SAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,QAAQ,GAChG,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,QAAQ,GAChG,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,OAAO,WAAW,YAAY,GACpG,GAAG,IAAI,eAAe,KAAkB,CAAC,2BAA2B,EAAE,SAAS,cAAc;AAAA,IACjG,CAAC;AAAA,EACL,CAAC;",
  "names": []
}
