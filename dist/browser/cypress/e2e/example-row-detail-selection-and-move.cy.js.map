{
  "version": 3,
  "sources": ["../../../../cypress/e2e/example-row-detail-selection-and-move.cy.ts"],
  "sourcesContent": ["/// <reference types=\"Cypress\" />\n\ndescribe('Example - Row Detail/Row Move/Checkbox Selector Plugins', () => {\n    const fullTitles = ['', '', '', '#', 'Title', 'Duration', '% Complete', 'Start', 'Finish', 'Effort Driven'];\n\n    beforeEach(() => {\n        // create a console.log spy for later use\n        cy.window().then((win) => {\n            cy.spy(win.console, \"log\");\n        });\n    });\n\n    it('should display Example Row Detail/Row Move/Checkbox Selector Plugins', () => {\n        cy.visit(`${Cypress.config('baseExampleUrl')}/example-row-detail-selection-and-move.html`);\n        cy.get('h2').should('contain', 'Demonstrates:');\n        cy.get('h3').should('contain', 'The following three Plugins used together');\n    });\n\n    it('should have exact Column Titles in the grid', () => {\n        cy.get('#myGrid')\n            .find('.slick-header-columns')\n            .children()\n            .each(($child, index) => expect($child.text()).to.eq(fullTitles[index]));\n    });\n\n    it('should open the Row Detail of the 2nd row and expect to find some details', () => {\n        cy.get('.slick-cell.detailView-toggle:nth(3)')\n            .click()\n            .wait(250);\n\n        cy.get('.innerDetailView_3')\n            .find('h2')\n            .should('contain', 'Task 3');\n\n        cy.get('input[id=\"assignee_3\"]')\n            .should('exist');\n\n        cy.get('input[type=\"checkbox\"]:checked')\n            .should('have.length', 0);\n    });\n\n    it('should drag opened Row Detail to another valid position in the grid', () => {\n        cy.get('[style=\"top:25px\"] > .slick-cell.cell-reorder').as('moveIconTask1');\n        cy.get('[style=\"top:75px\"] > .slick-cell.cell-reorder').as('moveIconTask3');\n        cy.get('[style=\"top:100px\"]').as('expandIconTask4');\n\n        cy.get('@moveIconTask3')\n            .trigger('mousedown', { button: 0, force: true })\n            .trigger('mousemove', 'bottomRight');\n\n        cy.get('[style=\"top:100px\"]')\n            .trigger('mousemove', 'bottomRight', { force: true });\n\n        cy.get('[style=\"top:100px\"]')\n            .trigger('mouseup', 'bottomRight', { force: true });\n\n        cy.get('input[type=\"checkbox\"]:checked')\n            .should('have.length', 0);\n    });\n\n    it('should expect row to be moved to another row index', () => {\n        cy.get('.slick-viewport-top.slick-viewport-left')\n            .scrollTo('top');\n\n        cy.get('[style=\"top:0px\"] > .slick-cell:nth(4)').should('contain', 'Task 0');\n        cy.get('[style=\"top:25px\"] > .slick-cell:nth(4)').should('contain', 'Task 1');\n        cy.get('[style=\"top:50px\"] > .slick-cell:nth(4)').should('contain', 'Task 2');\n        cy.get('[style=\"top:75px\"] > .slick-cell:nth(4)').should('contain', 'Task 4');\n        cy.get('[style=\"top:100px\"] > .slick-cell:nth(4)').should('contain', 'Task 3');\n\n        cy.get('input[type=\"checkbox\"]:checked')\n            .should('have.length', 0);\n    });\n\n    it('should try moving a row to an invalid target and expect nothing moved (same rows as prior test)', () => {\n        cy.get('[style=\"top:25px\"] > .slick-cell.cell-reorder').as('moveIconTask1');\n        cy.get('[style=\"top:100px\"]').as('expandIconTask4');\n\n        cy.get('@moveIconTask1')\n            .trigger('mousedown', { button: 0, force: true })\n            .trigger('mousemove', 'bottomRight');\n\n        cy.get('[style=\"top:75px\"]')\n            .trigger('mousemove', 'topRight', { force: true });\n\n        cy.get('[style=\"top:75px\"]')\n            .trigger('mouseup', 'topRight', { force: true });\n\n        cy.get('input[type=\"checkbox\"]:checked')\n            .should('have.length', 0);\n    });\n\n    it('should select 2 rows (Task 1,3), then move row and expect the 2 rows to still be selected without any other rows', () => {\n        cy.get('[style=\"top:25px\"] > .slick-cell:nth(2)').click();\n        cy.get('[style=\"top:100px\"] > .slick-cell:nth(2)').click();\n\n        cy.get('[style=\"top:25px\"] > .slick-cell.cell-reorder').as('moveIconTask1');\n        cy.get('[style=\"top:150px\"]').as('moveIconTask3');\n\n        cy.get('@moveIconTask1').should('have.length', 1);\n\n        cy.get('@moveIconTask1')\n            .trigger('mousedown', { button: 0, force: true })\n            .trigger('mousemove', 'bottomRight');\n\n        cy.get('@moveIconTask3')\n            .trigger('mousemove', 'bottomRight', { force: true })\n            .trigger('mouseup', 'bottomRight', { force: true });\n\n        cy.get('[style=\"top:0px\"] > .slick-cell:nth(4)').should('contain', 'Task 0');\n        cy.get('[style=\"top:25px\"] > .slick-cell:nth(4)').should('contain', 'Task 2');\n        cy.get('[style=\"top:50px\"] > .slick-cell:nth(4)').should('contain', 'Task 4');\n        cy.get('[style=\"top:75px\"] > .slick-cell:nth(4)').should('contain', 'Task 3');\n        cy.get('[style=\"top:100px\"] > .slick-cell:nth(4)').should('contain', 'Task 5');\n        cy.get('[style=\"top:125px\"] > .slick-cell:nth(4)').should('contain', 'Task 6');\n        cy.get('[style=\"top:150px\"] > .slick-cell:nth(4)').should('contain', 'Task 1');\n\n        // Task 4 and 3 should be selected\n        cy.get('input[type=\"checkbox\"]:checked').should('have.length', 2);\n        cy.get('[style=\"top:75px\"] > .slick-cell:nth(2) input[type=\"checkbox\"]:checked').should('have.length', 1);\n        cy.get('[style=\"top:150px\"] > .slick-cell:nth(2) input[type=\"checkbox\"]:checked').should('have.length', 1);\n    });\n\n    it('should click on \"Single Row Move OFF\", then drag a row and expect both selected rows to be moved together', () => {\n        cy.contains('Single Row Move OFF').click();\n\n        cy.get('[style=\"top:175px\"] > .slick-cell.cell-reorder').as('moveIconTask7');\n        cy.get('[style=\"top:75px\"] > .slick-cell.cell-reorder').as('moveIconTask3');\n\n        cy.get('@moveIconTask3').should('have.length', 1);\n\n        cy.get('@moveIconTask3')\n            .trigger('mousedown', { button: 0, force: true })\n            .trigger('mousemove', 'bottomRight');\n\n        cy.get('[style=\"top:200px\"]')\n            .trigger('mousemove', 'bottomRight', { force: true })\n            .trigger('mouseup', 'bottomRight', { force: true });\n\n        cy.get('[style=\"top:0px\"] > .slick-cell:nth(4)').should('contain', 'Task 0');\n        cy.get('[style=\"top:25px\"] > .slick-cell:nth(4)').should('contain', 'Task 2');\n        cy.get('[style=\"top:50px\"] > .slick-cell:nth(4)').should('contain', 'Task 4');\n        cy.get('[style=\"top:75px\"] > .slick-cell:nth(4)').should('contain', 'Task 5');\n        cy.get('[style=\"top:100px\"] > .slick-cell:nth(4)').should('contain', 'Task 6');\n        cy.get('[style=\"top:125px\"] > .slick-cell:nth(4)').should('contain', 'Task 7');\n        cy.get('[style=\"top:150px\"] > .slick-cell:nth(4)').should('contain', 'Task 8');\n        cy.get('[style=\"top:175px\"] > .slick-cell:nth(4)').should('contain', 'Task 3');\n        cy.get('[style=\"top:200px\"] > .slick-cell:nth(4)').should('contain', 'Task 1');\n\n        // Task 1 and 3 should be selected\n        cy.get('input[type=\"checkbox\"]:checked').should('have.length', 2);\n        cy.get('[style=\"top:175px\"] > .slick-cell:nth(2) input[type=\"checkbox\"]:checked').should('have.length', 1);\n        cy.get('[style=\"top:200px\"] > .slick-cell:nth(2) input[type=\"checkbox\"]:checked').should('have.length', 1);\n    });\n\n    it('should open the Task 3 Row Detail and still expect same detail', () => {\n        cy.get('[style=\"top:175px\"] > .slick-cell:nth(4)').should('contain', 'Task 3');\n\n        cy.get('[style=\"top:175px\"] > .slick-cell:nth(0)')\n            .click()\n            .wait(250);\n\n        cy.get('.innerDetailView_3')\n            .find('h2')\n            .should('contain', 'Task 3');\n\n        cy.get('input[id=\"assignee_3\"]')\n            .should('exist');\n    });\n});\n"],
  "mappings": ";;;AAEA,WAAS,2DAA2D,MAAM;AACtE,QAAM,aAAa,CAAC,IAAI,IAAI,IAAI,KAAK,SAAS,YAAY,cAAc,SAAS,UAAU,eAAe;AAE1G,eAAW,MAAM;AAEb,SAAG,OAAO,EAAE,KAAK,CAAC,QAAQ;AACtB,WAAG,IAAI,IAAI,SAAS,KAAK;AAAA,MAC7B,CAAC;AAAA,IACL,CAAC,GAED,GAAG,wEAAwE,MAAM;AAC7E,SAAG,MAAM,GAAG,QAAQ,OAAO,gBAAgB,CAAC,6CAA6C,GACzF,GAAG,IAAI,IAAI,EAAE,OAAO,WAAW,eAAe,GAC9C,GAAG,IAAI,IAAI,EAAE,OAAO,WAAW,2CAA2C;AAAA,IAC9E,CAAC,GAED,GAAG,+CAA+C,MAAM;AACpD,SAAG,IAAI,SAAS,EACX,KAAK,uBAAuB,EAC5B,SAAS,EACT,KAAK,CAAC,QAAQ,UAAU,OAAO,OAAO,KAAK,CAAC,EAAE,GAAG,GAAG,WAAW,KAAK,CAAC,CAAC;AAAA,IAC/E,CAAC,GAED,GAAG,6EAA6E,MAAM;AAClF,SAAG,IAAI,sCAAsC,EACxC,MAAM,EACN,KAAK,GAAG,GAEb,GAAG,IAAI,oBAAoB,EACtB,KAAK,IAAI,EACT,OAAO,WAAW,QAAQ,GAE/B,GAAG,IAAI,wBAAwB,EAC1B,OAAO,OAAO,GAEnB,GAAG,IAAI,gCAAgC,EAClC,OAAO,eAAe,CAAC;AAAA,IAChC,CAAC,GAED,GAAG,uEAAuE,MAAM;AAC5E,SAAG,IAAI,+CAA+C,EAAE,GAAG,eAAe,GAC1E,GAAG,IAAI,+CAA+C,EAAE,GAAG,eAAe,GAC1E,GAAG,IAAI,qBAAqB,EAAE,GAAG,iBAAiB,GAElD,GAAG,IAAI,gBAAgB,EAClB,QAAQ,aAAa,EAAE,QAAQ,GAAG,OAAO,GAAK,CAAC,EAC/C,QAAQ,aAAa,aAAa,GAEvC,GAAG,IAAI,qBAAqB,EACvB,QAAQ,aAAa,eAAe,EAAE,OAAO,GAAK,CAAC,GAExD,GAAG,IAAI,qBAAqB,EACvB,QAAQ,WAAW,eAAe,EAAE,OAAO,GAAK,CAAC,GAEtD,GAAG,IAAI,gCAAgC,EAClC,OAAO,eAAe,CAAC;AAAA,IAChC,CAAC,GAED,GAAG,sDAAsD,MAAM;AAC3D,SAAG,IAAI,yCAAyC,EAC3C,SAAS,KAAK,GAEnB,GAAG,IAAI,wCAAwC,EAAE,OAAO,WAAW,QAAQ,GAC3E,GAAG,IAAI,yCAAyC,EAAE,OAAO,WAAW,QAAQ,GAC5E,GAAG,IAAI,yCAAyC,EAAE,OAAO,WAAW,QAAQ,GAC5E,GAAG,IAAI,yCAAyC,EAAE,OAAO,WAAW,QAAQ,GAC5E,GAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAE7E,GAAG,IAAI,gCAAgC,EAClC,OAAO,eAAe,CAAC;AAAA,IAChC,CAAC,GAED,GAAG,mGAAmG,MAAM;AACxG,SAAG,IAAI,+CAA+C,EAAE,GAAG,eAAe,GAC1E,GAAG,IAAI,qBAAqB,EAAE,GAAG,iBAAiB,GAElD,GAAG,IAAI,gBAAgB,EAClB,QAAQ,aAAa,EAAE,QAAQ,GAAG,OAAO,GAAK,CAAC,EAC/C,QAAQ,aAAa,aAAa,GAEvC,GAAG,IAAI,oBAAoB,EACtB,QAAQ,aAAa,YAAY,EAAE,OAAO,GAAK,CAAC,GAErD,GAAG,IAAI,oBAAoB,EACtB,QAAQ,WAAW,YAAY,EAAE,OAAO,GAAK,CAAC,GAEnD,GAAG,IAAI,gCAAgC,EAClC,OAAO,eAAe,CAAC;AAAA,IAChC,CAAC,GAED,GAAG,oHAAoH,MAAM;AACzH,SAAG,IAAI,yCAAyC,EAAE,MAAM,GACxD,GAAG,IAAI,0CAA0C,EAAE,MAAM,GAEzD,GAAG,IAAI,+CAA+C,EAAE,GAAG,eAAe,GAC1E,GAAG,IAAI,qBAAqB,EAAE,GAAG,eAAe,GAEhD,GAAG,IAAI,gBAAgB,EAAE,OAAO,eAAe,CAAC,GAEhD,GAAG,IAAI,gBAAgB,EAClB,QAAQ,aAAa,EAAE,QAAQ,GAAG,OAAO,GAAK,CAAC,EAC/C,QAAQ,aAAa,aAAa,GAEvC,GAAG,IAAI,gBAAgB,EAClB,QAAQ,aAAa,eAAe,EAAE,OAAO,GAAK,CAAC,EACnD,QAAQ,WAAW,eAAe,EAAE,OAAO,GAAK,CAAC,GAEtD,GAAG,IAAI,wCAAwC,EAAE,OAAO,WAAW,QAAQ,GAC3E,GAAG,IAAI,yCAAyC,EAAE,OAAO,WAAW,QAAQ,GAC5E,GAAG,IAAI,yCAAyC,EAAE,OAAO,WAAW,QAAQ,GAC5E,GAAG,IAAI,yCAAyC,EAAE,OAAO,WAAW,QAAQ,GAC5E,GAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAC7E,GAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAC7E,GAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAG7E,GAAG,IAAI,gCAAgC,EAAE,OAAO,eAAe,CAAC,GAChE,GAAG,IAAI,wEAAwE,EAAE,OAAO,eAAe,CAAC,GACxG,GAAG,IAAI,yEAAyE,EAAE,OAAO,eAAe,CAAC;AAAA,IAC7G,CAAC,GAED,GAAG,6GAA6G,MAAM;AAClH,SAAG,SAAS,qBAAqB,EAAE,MAAM,GAEzC,GAAG,IAAI,gDAAgD,EAAE,GAAG,eAAe,GAC3E,GAAG,IAAI,+CAA+C,EAAE,GAAG,eAAe,GAE1E,GAAG,IAAI,gBAAgB,EAAE,OAAO,eAAe,CAAC,GAEhD,GAAG,IAAI,gBAAgB,EAClB,QAAQ,aAAa,EAAE,QAAQ,GAAG,OAAO,GAAK,CAAC,EAC/C,QAAQ,aAAa,aAAa,GAEvC,GAAG,IAAI,qBAAqB,EACvB,QAAQ,aAAa,eAAe,EAAE,OAAO,GAAK,CAAC,EACnD,QAAQ,WAAW,eAAe,EAAE,OAAO,GAAK,CAAC,GAEtD,GAAG,IAAI,wCAAwC,EAAE,OAAO,WAAW,QAAQ,GAC3E,GAAG,IAAI,yCAAyC,EAAE,OAAO,WAAW,QAAQ,GAC5E,GAAG,IAAI,yCAAyC,EAAE,OAAO,WAAW,QAAQ,GAC5E,GAAG,IAAI,yCAAyC,EAAE,OAAO,WAAW,QAAQ,GAC5E,GAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAC7E,GAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAC7E,GAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAC7E,GAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAC7E,GAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAG7E,GAAG,IAAI,gCAAgC,EAAE,OAAO,eAAe,CAAC,GAChE,GAAG,IAAI,yEAAyE,EAAE,OAAO,eAAe,CAAC,GACzG,GAAG,IAAI,yEAAyE,EAAE,OAAO,eAAe,CAAC;AAAA,IAC7G,CAAC,GAED,GAAG,kEAAkE,MAAM;AACvE,SAAG,IAAI,0CAA0C,EAAE,OAAO,WAAW,QAAQ,GAE7E,GAAG,IAAI,0CAA0C,EAC5C,MAAM,EACN,KAAK,GAAG,GAEb,GAAG,IAAI,oBAAoB,EACtB,KAAK,IAAI,EACT,OAAO,WAAW,QAAQ,GAE/B,GAAG,IAAI,wBAAwB,EAC1B,OAAO,OAAO;AAAA,IACvB,CAAC;AAAA,EACL,CAAC;",
  "names": []
}
