{
  "version": 3,
  "sources": ["../../../../cypress/e2e/example-optimizing-updates.cy.ts"],
  "sourcesContent": ["/// <reference types=\"Cypress\" />\n\ndescribe('Example - Optimizing Updates', () => {\n  const titles = ['#', 'Severity', 'Time', 'Message'];\n\n  beforeEach(() => {\n    // create a console.log spy for later use\n    cy.window().then((win) => {\n      cy.spy(win.console, \"log\");\n    });\n  });\n\n  it('should display Example Multi-grid Basic', () => {\n    cy.visit(`${Cypress.config('baseExampleUrl')}/example-optimizing-updates.html`);\n    cy.get('h2').should('contain', 'Demonstrates:');\n    cy.contains('This page demonstrates how the bulk update operations ');\n  });\n\n  it('should have exact Column Titles in the grid', () => {\n    cy.get('#myGrid')\n      .find('.slick-header-columns')\n      .children()\n      .each(($child, index) => expect($child.text()).to.eq(titles[index]));\n  });\n\n  it('should show initial rows', () => {\n    cy.get('#pager')\n      .find('.slick-pager-status')\n      .should('contain', 'Showing all 300 rows');\n  });\n\n  it('should update the rows on inefficient click', () => {\n    cy.visit(`${Cypress.config('baseExampleUrl')}/example-optimizing-updates.html`);\n\n    cy.get('#myGrid')\n      .find('.slick-row')\n      .each(($child, index) => {\n          const message = $child.find('.cell-message').text();\n          const number = parseInt(message.substring(\"Log Entry \".length));\n          expect(number).to.be.lessThan(1000)\n      });\n\n    cy.get('.options-panel button')\n      .contains('inefficient')\n      .click();\n\n    cy.get('#myGrid')\n      .find('.slick-row')\n      .each(($child, index) => {\n          const message = $child.find('.cell-message').text();\n          const number = parseInt(message.substring(\"Log Entry \".length));\n          expect(number).to.be.greaterThan(90000)\n      });\n  });\n\n  it('should update the rows on efficient click', () => {\n    cy.visit(`${Cypress.config('baseExampleUrl')}/example-optimizing-updates.html`);\n\n    cy.get('#myGrid')\n      .find('.slick-row')\n      .each(($child, index) => {\n          const message = $child.find('.cell-message').text();\n          const number = parseInt(message.substring(\"Log Entry \".length));\n          expect(number).to.be.lessThan(1000)\n      });\n\n    cy.get('.options-panel button')\n      .contains('efficient')\n      .click();\n\n    cy.get('#myGrid')\n      .find('.slick-row')\n      .each(($child, index) => {\n          const message = $child.find('.cell-message').text();\n          const number = parseInt(message.substring(\"Log Entry \".length));\n          expect(number).to.be.greaterThan(90000)\n      });\n  });\n\n  it('should need less time on efficient than inefficient', () => {\n    cy.visit(`${Cypress.config('baseExampleUrl')}/example-optimizing-updates.html`);\n\n    cy.get('#duration').invoke('text', '').should('be.empty');\n    cy.get('.options-panel button')\n      .contains('(inefficient)')\n      .click();\n    cy.get('#duration').should('not.be.empty').then($duration => {\n        let inEfficientTime = parseInt($duration.text());\n\n        cy.get('#duration').invoke('text', '').should('be.empty');\n      cy.get('.options-panel button')\n          .contains('(efficient)')\n          .click();\n        cy.get('#duration').should('not.be.empty').then($duration2 => {\n            let efficientTime = parseInt($duration2.text());\n            expect(efficientTime).to.be.lessThan(inEfficientTime / 2);\n        });\n    });\n\n  });\n});\n"],
  "mappings": "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",
  "names": []
}
