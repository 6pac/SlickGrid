{
  "version": 3,
  "sources": ["../../../../cypress/e2e/example-grouping-esm.cy.ts"],
  "sourcesContent": ["/// <reference types='cypress' />\ndescribe('Example - Grouping & Aggregators (ESM)', { retries: 1 }, () => {\n  // NOTE:  everywhere there's a * 2 is because we have a top+bottom (frozen rows) containers even after Unfreeze Columns/Rows\n  const GRID_ROW_HEIGHT = 28;\n  const fullTitles = ['#', 'Title', 'Duration', '% Complete', 'Start', 'Finish', 'Cost', 'Effort-Driven'];\n  for (let i = 0; i < 30; i++) {\n    fullTitles.push(`Mock${i}`);\n  }\n\n  it('should display Example title', () => {\n    cy.visit(`${Cypress.config('baseExampleUrl')}/example-grouping-esm.html`);\n    cy.get('h2').contains('Demonstrates');\n    cy.get('h2 + ul > li').first().contains('Grouping & Aggregator features');\n  });\n\n  it('should have exact column titles on 1st grid', () => {\n    cy.get('#myGrid')\n      .find('.slick-header-columns')\n      .children()\n      .each(($child, index) => expect($child.text()).to.eq(fullTitles[index]));\n  });\n\n  describe('Grouping Tests', () => {\n    it('should \"Group by Duration & sort groups by value\" then Collapse All and expect only group titles', () => {\n      cy.get('[data-test=\"add-50k-rows-btn\"]').click();\n      cy.get('[data-test=\"group-duration-sort-value-btn\"]').click();\n      cy.get('[data-test=\"collapse-all-btn\"]').click();\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(0) .slick-group-toggle.collapsed`).should('have.length', 1);\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(0) .slick-group-title`).should('contain', 'Duration:  0');\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(0) .slick-group-title`).should('contain', 'Duration:  1');\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"] > .slick-cell:nth(0) .slick-group-title`).should('contain', 'Duration:  2');\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"] > .slick-cell:nth(0) .slick-group-title`).should('contain', 'Duration:  3');\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 4}px\"] > .slick-cell:nth(0) .slick-group-title`).should('contain', 'Duration:  4');\n    });\n\n    it('should click on Expand All columns and expect 1st row as grouping title and 2nd row as a regular row', () => {\n      cy.get('[data-test=\"add-50k-rows-btn\"]').click();\n      cy.get('[data-test=\"group-duration-sort-value-btn\"]').click();\n      cy.get('[data-test=\"expand-all-btn\"]').click();\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(0) .slick-group-toggle.expanded`).should('have.length', 1);\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"] > .slick-cell:nth(0) .slick-group-title`).should('contain', 'Duration:  0');\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(1)`).should('contain', 'Task');\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"] > .slick-cell:nth(2)`).should('contain', '0');\n    });\n\n    it('should \"Group by Duration then Effort-Driven\" and expect 1st row to be expanded, 2nd row to be collapsed and 3rd row to have group totals', () => {\n      cy.get('[data-test=\"group-duration-effort-btn\"]').click();\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"].slick-group-level-0 > .slick-cell:nth(0) .slick-group-toggle.expanded`).should('have.length', 1);\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"].slick-group-level-0 > .slick-cell:nth(0) .slick-group-title`).should('contain', 'Duration:  0');\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"].slick-group-level-1 .slick-group-toggle.collapsed`).should('have.length', 1);\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"].slick-group-level-1 .slick-group-title`).should('contain', 'Effort-Driven:  False');\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"].slick-group-level-1 .slick-group-toggle.collapsed`).should('have.length', 1);\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"].slick-group-level-1 .slick-group-title`).should('contain', 'Effort-Driven:  True');\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"].slick-group-totals.slick-group-level-0 .slick-cell:nth(2)`).should('contain', 'total: 0');\n    });\n\n    it('should \"Group by Duration then Effort-Driven then Percent\" and expect fist 2 rows to be expanded, 3rd row to be collapsed then 4th row to have group total', () => {\n      cy.get('[data-test=\"group-duration-effort-percent-btn\"]').click();\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"].slick-group-level-0 > .slick-cell:nth(0) .slick-group-toggle.expanded`).should('have.length', 1);\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 0}px\"].slick-group-level-0 > .slick-cell:nth(0) .slick-group-title`).should('contain', 'Duration:  0');\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"].slick-group-level-1 .slick-group-toggle.expanded`).should('have.length', 1);\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 1}px\"].slick-group-level-1 .slick-group-title`).should('contain', 'Effort-Driven:  False');\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"].slick-group-level-2 .slick-group-toggle.collapsed`).should('have.length', 1);\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 2}px\"].slick-group-level-2 .slick-group-title`).contains(/^% Complete: [0-9]/);\n\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"].slick-group-totals.slick-group-level-2 .slick-cell:nth(3)`).contains(/^avg: [0-9]\\%$/);\n      cy.get(`[style=\"top:${GRID_ROW_HEIGHT * 3}px\"].slick-group-totals.slick-group-level-2`)\n        .find('.slick-cell:nth(3)').contains('avg: ');\n    });\n  });\n});\n"],
  "mappings": "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",
  "names": []
}
