{
  "version": 3,
  "sources": ["../../../../cypress/support/commands.ts"],
  "sourcesContent": ["// ***********************************************\n// This example commands.js shows you how to\n// create various custom commands and overwrite\n// existing commands.\n//\n// For more comprehensive examples of custom\n// commands please read more here:\n// https://on.cypress.io/custom-commands\n// ***********************************************\n//\n//\n// -- This is a parent command --\n// Cypress.Commands.add(\"login\", (email, password) => { ... })\n//\n//\n// -- This is a child command --\n// Cypress.Commands.add(\"drag\", { prevSubject: 'element'}, (subject, options) => { ... })\n//\n//\n// -- This is a dual command --\n// Cypress.Commands.add(\"dismiss\", { prevSubject: 'optional'}, (subject, options) => { ... })\n//\n//\n// -- This is will overwrite an existing command --\n// Cypress.Commands.overwrite(\"visit\", (originalFn, url, options) => { ... })\nimport '@4tw/cypress-drag-drop';\nimport { convertPosition } from './common';\n\n// convert position like 'topLeft' to the object { x: 'left|right', y: 'top|bottom' }\nCypress.Commands.add(\"convertPosition\", (viewport = 'topLeft') => cy.wrap(convertPosition(viewport)))\n\nCypress.Commands.add(\"getCell\", (row, col, viewport = 'topLeft', { parentSelector = '', rowHeight = 25 } = {}) => {\n  const position = convertPosition(viewport);\n  const canvasSelectorX = position.x ? `.grid-canvas-${position.x}` : '';\n  const canvasSelectorY = position.y ? `.grid-canvas-${position.y}` : '';\n\n  return cy.get(`${parentSelector} ${canvasSelectorX}${canvasSelectorY} [style=\"top:${row * rowHeight}px\"] > .slick-cell:nth(${col})`);\n});\n\nlet LOCAL_STORAGE_MEMORY = {};\n\nCypress.Commands.add('saveLocalStorage', () => {\n  Object.keys(localStorage).forEach(key => {\n    LOCAL_STORAGE_MEMORY[key] = localStorage[key];\n  });\n});\n\nCypress.Commands.add('restoreLocalStorage', () => {\n  Object.keys(LOCAL_STORAGE_MEMORY).forEach(key => {\n    localStorage.setItem(key, LOCAL_STORAGE_MEMORY[key]);\n  });\n});"],
  "mappings": ";;;AA6BA,UAAQ,SAAS,IAAI,mBAAmB,CAAC,WAAW,cAAc,GAAG,KAAK,SAAgB,QAAQ,CAAC,CAAC;AAEpG,UAAQ,SAAS,IAAI,WAAW,CAAC,KAAK,KAAK,WAAW,WAAW,EAAE,iBAAiB,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM;AAChH,QAAM,WAAW,SAAgB,QAAQ,GACnC,kBAAkB,SAAS,IAAI,gBAAgB,SAAS,CAAC,KAAK,IAC9D,kBAAkB,SAAS,IAAI,gBAAgB,SAAS,CAAC,KAAK;AAEpE,WAAO,GAAG,IAAI,GAAG,cAAc,IAAI,eAAe,GAAG,eAAe,gBAAgB,MAAM,SAAS,0BAA0B,GAAG,GAAG;AAAA,EACrI,CAAC;AAED,MAAI,uBAAuB,CAAC;AAE5B,UAAQ,SAAS,IAAI,oBAAoB,MAAM;AAC7C,WAAO,KAAK,YAAY,EAAE,QAAQ,SAAO;AACvC,2BAAqB,GAAG,IAAI,aAAa,GAAG;AAAA,IAC9C,CAAC;AAAA,EACH,CAAC;AAED,UAAQ,SAAS,IAAI,uBAAuB,MAAM;AAChD,WAAO,KAAK,oBAAoB,EAAE,QAAQ,SAAO;AAC/C,mBAAa,QAAQ,KAAK,qBAAqB,GAAG,CAAC;AAAA,IACrD,CAAC;AAAA,EACH,CAAC;",
  "names": []
}
