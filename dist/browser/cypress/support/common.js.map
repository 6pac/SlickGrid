{
  "version": 3,
  "sources": ["../../../../cypress/support/common.ts"],
  "sourcesContent": ["/**\n * @typedef {('left'|'right')} xAllowed\n * @typedef {('top'|'bottom')} yAllowed\n *\n * Define allowed input position\n * @typedef {(xAllowed|yAllowed|'topLeft'|'topRight'|'bottomLeft'|'bottomRight')} AllowedInputPosition\n *\n * Define position object\n * @typedef {Object} Position\n * @property {xAllowed} x - horizontal\n * @property {yAllowed} y - vertical\n */\n\n/**\n * Enum for position values\n * @constant\n * @enum {(xAllowed|yAllowed)}\n */\nconst POSITION = Object.freeze({\n  TOP: 'top',\n  BOTTOM: 'bottom',\n  LEFT: 'left',\n  RIGHT: 'right'\n})\n\n/**\n * Convert position string to object\n *\n * @param {AllowedInputPosition} position\n * @returns {Position}\n */\nexport function convertPosition(position) {\n  let x = '';\n  let y = '';\n  const _position = position.toLowerCase();\n  if (_position.includes(POSITION.LEFT)) {\n    x = POSITION.LEFT;\n  } else if (_position.includes(POSITION.RIGHT)) {\n    x = POSITION.RIGHT;\n  }\n  if (_position.includes(POSITION.TOP)) {\n    y = POSITION.TOP;\n  } else if (_position.includes(POSITION.BOTTOM)) {\n    y = POSITION.BOTTOM;\n  }\n  return { x, y };\n}"],
  "mappings": ";;;AAkBA,MAAM,WAAW,OAAO,OAAO;AAAA,IAC7B,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AAQM,WAAS,gBAAgB,UAAU;AACxC,QAAI,IAAI,IACJ,IAAI,IACF,YAAY,SAAS,YAAY;AACvC,WAAI,UAAU,SAAS,SAAS,IAAI,IAClC,IAAI,SAAS,OACJ,UAAU,SAAS,SAAS,KAAK,MAC1C,IAAI,SAAS,QAEX,UAAU,SAAS,SAAS,GAAG,IACjC,IAAI,SAAS,MACJ,UAAU,SAAS,SAAS,MAAM,MAC3C,IAAI,SAAS,SAER,EAAE,GAAG,EAAE;AAAA,EAChB;",
  "names": []
}
